
[{"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\index.js":"1","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\reportWebVitals.js":"2","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\App.js":"3","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\store.js":"4","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\sound\\Playlist.js":"5","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Auth\\Auth.js":"6","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Main.js":"7","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Auth\\restore.js":"8","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Auth\\Reset.js":"9","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Auth\\Support.js":"10","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Auth\\gotodesktop.js":"11","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Header\\Header.js":"12","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Start\\Start.js":"13","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\Refill.js":"14","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\Usd.js":"15","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\Btc.js":"16","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\CompletePay.js":"17","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\Withdraw.js":"18","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\CompleteWith.js":"19","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\Invite.js":"20","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\Ads.js":"21","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\actions\\index.js":"22","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\index.js":"23","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\sound\\Sound.js":"24","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\actions\\music.js":"25","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Dashboard.js":"26","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Graph.js":"27","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\fireworks.js":"28","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\RightSector.js":"29","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Time.js":"30","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Preloader.js":"31","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\actions\\game.js":"32","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Rates.js":"33","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Online.js":"34","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\api\\User.js":"35","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\languages\\en.js":"36","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\languages\\ru.js":"37","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Presentation.js":"38","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Rect\\Rect.js":"39","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\types.js":"40","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\entry.js":"41","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\game.js":"42","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\sound.js":"43","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\advertising.js":"44","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\index.js":"45","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Timer.js":"46","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\index.js":"47","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\api\\Api.js":"48","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\languages\\privacy.en.js":"49","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\languages\\privacy.ru.js":"50","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Step1.js":"51","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Step2.js":"52","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Step4.js":"53","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Step3.js":"54","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Step5.js":"55","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\ImagePreview.js":"56","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\Tabs.js":"57","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\FormInput.js":"58","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Duration\\index.js":"59","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Audience\\index.js":"60","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Footer\\index.js":"61","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\useImagePreview.js":"62","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Duration\\Duration.js":"63","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Footer\\Footer.js":"64","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Audience\\Audience.js":"65","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\country\\country.js":"66","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\country\\timezone.js":"67","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\actions\\advertising.js":"68","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\ListAds.js":"69","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Wallet.js":"70","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\MyAd.js":"71","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Promo\\Promo.js":"72","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\ad_errors_input.js":"73","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\changeAd.js":"74","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\actions\\changeAd.js":"75"},{"size":591,"mtime":1614094276895,"results":"76","hashOfConfig":"77"},{"size":375,"mtime":1614094276906,"results":"78","hashOfConfig":"77"},{"size":5570,"mtime":1615197761438,"results":"79","hashOfConfig":"77"},{"size":213,"mtime":1614094276903,"results":"80","hashOfConfig":"77"},{"size":2345,"mtime":1614947460877,"results":"81","hashOfConfig":"77"},{"size":17138,"mtime":1615450826978,"results":"82","hashOfConfig":"77"},{"size":4663,"mtime":1615021948880,"results":"83","hashOfConfig":"77"},{"size":3887,"mtime":1614672149439,"results":"84","hashOfConfig":"77"},{"size":4643,"mtime":1614276632815,"results":"85","hashOfConfig":"77"},{"size":1878,"mtime":1614850327808,"results":"86","hashOfConfig":"77"},{"size":703,"mtime":1614094276771,"results":"87","hashOfConfig":"77"},{"size":14079,"mtime":1615378678319,"results":"88","hashOfConfig":"77"},{"size":8949,"mtime":1615204308246,"results":"89","hashOfConfig":"77"},{"size":5265,"mtime":1615289489176,"results":"90","hashOfConfig":"77"},{"size":4384,"mtime":1614276632894,"results":"91","hashOfConfig":"77"},{"size":7009,"mtime":1614778201235,"results":"92","hashOfConfig":"77"},{"size":1440,"mtime":1614276632842,"results":"93","hashOfConfig":"77"},{"size":3638,"mtime":1614276632897,"results":"94","hashOfConfig":"77"},{"size":1581,"mtime":1614276632857,"results":"95","hashOfConfig":"77"},{"size":3532,"mtime":1614276632889,"results":"96","hashOfConfig":"77"},{"size":4508,"mtime":1615390004332,"results":"97","hashOfConfig":"77"},{"size":2275,"mtime":1615021700134,"results":"98","hashOfConfig":"77"},{"size":559,"mtime":1615381893925,"results":"99","hashOfConfig":"77"},{"size":1266,"mtime":1614592239275,"results":"100","hashOfConfig":"77"},{"size":1805,"mtime":1614702906514,"results":"101","hashOfConfig":"77"},{"size":18687,"mtime":1615369320729,"results":"102","hashOfConfig":"77"},{"size":10579,"mtime":1614672149613,"results":"103","hashOfConfig":"77"},{"size":9768,"mtime":1614094276794,"results":"104","hashOfConfig":"77"},{"size":7381,"mtime":1615021948817,"results":"105","hashOfConfig":"77"},{"size":973,"mtime":1614585058224,"results":"106","hashOfConfig":"77"},{"size":964,"mtime":1614094276776,"results":"107","hashOfConfig":"77"},{"size":2215,"mtime":1615366150471,"results":"108","hashOfConfig":"77"},{"size":4076,"mtime":1614585102100,"results":"109","hashOfConfig":"77"},{"size":2659,"mtime":1614248138289,"results":"110","hashOfConfig":"77"},{"size":2071,"mtime":1615374993206,"results":"111","hashOfConfig":"77"},{"size":11211,"mtime":1615204308358,"results":"112","hashOfConfig":"77"},{"size":13931,"mtime":1614862941402,"results":"113","hashOfConfig":"77"},{"size":904,"mtime":1614607320596,"results":"114","hashOfConfig":"77"},{"size":232,"mtime":1614094276778,"results":"115","hashOfConfig":"77"},{"size":3346,"mtime":1615378678359,"results":"116","hashOfConfig":"77"},{"size":2836,"mtime":1615021713107,"results":"117","hashOfConfig":"77"},{"size":3925,"mtime":1615206624340,"results":"118","hashOfConfig":"77"},{"size":2223,"mtime":1614702906521,"results":"119","hashOfConfig":"77"},{"size":2634,"mtime":1615373117570,"results":"120","hashOfConfig":"77"},{"size":208,"mtime":1614762652889,"results":"121","hashOfConfig":"77"},{"size":1720,"mtime":1614276632836,"results":"122","hashOfConfig":"77"},{"size":73,"mtime":1613756278000,"results":"123","hashOfConfig":"77"},{"size":342,"mtime":1614940143744,"results":"124","hashOfConfig":"77"},{"size":4742,"mtime":1614602113933,"results":"125","hashOfConfig":"77"},{"size":4742,"mtime":1614602113933,"results":"126","hashOfConfig":"77"},{"size":4032,"mtime":1615204308217,"results":"127","hashOfConfig":"77"},{"size":2857,"mtime":1615204308222,"results":"128","hashOfConfig":"77"},{"size":5096,"mtime":1615204308227,"results":"129","hashOfConfig":"77"},{"size":2768,"mtime":1615204308224,"results":"130","hashOfConfig":"77"},{"size":2774,"mtime":1615204308228,"results":"131","hashOfConfig":"77"},{"size":2533,"mtime":1615390004371,"results":"132","hashOfConfig":"77"},{"size":3319,"mtime":1615378818603,"results":"133","hashOfConfig":"77"},{"size":5224,"mtime":1615382599785,"results":"134","hashOfConfig":"77"},{"size":39,"mtime":1613753802000,"results":"135","hashOfConfig":"77"},{"size":39,"mtime":1613810036000,"results":"136","hashOfConfig":"77"},{"size":37,"mtime":1613816294000,"results":"137","hashOfConfig":"77"},{"size":272,"mtime":1614319701906,"results":"138","hashOfConfig":"77"},{"size":3087,"mtime":1615292488930,"results":"139","hashOfConfig":"77"},{"size":2220,"mtime":1615369967471,"results":"140","hashOfConfig":"77"},{"size":4218,"mtime":1615373264577,"results":"141","hashOfConfig":"77"},{"size":6396,"mtime":1614772552747,"results":"142","hashOfConfig":"77"},{"size":310,"mtime":1614866262989,"results":"143","hashOfConfig":"77"},{"size":2567,"mtime":1615373915357,"results":"144","hashOfConfig":"77"},{"size":10119,"mtime":1615382599741,"results":"145","hashOfConfig":"77"},{"size":1439,"mtime":1614935771800,"results":"146","hashOfConfig":"77"},{"size":6818,"mtime":1615381893897,"results":"147","hashOfConfig":"77"},{"size":4102,"mtime":1615305143839,"results":"148","hashOfConfig":"77"},{"size":1392,"mtime":1615374873737,"results":"149","hashOfConfig":"77"},{"size":432,"mtime":1615381893923,"results":"150","hashOfConfig":"77"},{"size":228,"mtime":1615378678330,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"c6sosh",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"154"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"154"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"154"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"154"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"154"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"154"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"154"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"154"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"154"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"154"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"154"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"154"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"154"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"154"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"154"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"154"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"154"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"154"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"154"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"154"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\index.js",[],["325","326"],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\reportWebVitals.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\App.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\store.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\sound\\Playlist.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Auth\\Auth.js",["327"],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Main.js",["328"],"import React, { useEffect } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './main.scss';\r\nimport bitcoin from '../../images/bitcoin.svg';\r\nimport Graph from \"../Graph\";\r\nimport RightSector from \"./RightSector\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport {closeCongratulation, closeYourLose, createAdProp, logoutQuestion, prohibition, switchView} from \"../../redux/actions\";\r\nimport {money, stop, you_lose, add_to_wallet, playClick} from \"../../redux/actions/music\";\r\nimport Time from \"./Time\";\r\nimport Preloader from \"./Preloader\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport Rates from \"./Rates\";\r\nimport Online from \"./Online\";\r\nimport Presentation from \"../Intro/Presentation\";\r\n\r\nconst Main = ({history, step, view, switchView, course, lastWin, closeCongratulation, congratulation, yourlose, closeYourLose, currentCourse, money, muteToggle, logout, logoutQuestion, prohibition, userdata, lastWinGame, createAd, createAdProp, widthMode, currentLang, you_lose, add_to_wallet, playClick, isPreview}) => {\r\n\r\n    useEffect(() => {\r\n        userdata();\r\n    }, [congratulation, userdata]);\r\n    useEffect(()=> switchView(false), []);\r\n\r\n    let flag = course ? course.length : false;\r\n    return (\r\n        <div className={`${widthMode}-bg main`}>\r\n            <Preloader show={flag}/>\r\n            <div style={{display: createAd ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                        <h2>This feature coming soon</h2>\r\n                        <button onClick={() => {\r\n                            createAdProp();\r\n                            playClick()\r\n                        }} className=\"btn btn-primary\">OK\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <main style={{display: flag ? 'block' : 'none'}}>\r\n                <div className=\"row main\">\r\n                    <Presentation />\r\n                    <div style={{display: widthMode === \"mobile\" && view ? \"none\" : \"flex\"}} className=\"left-sector\">\r\n                        {widthMode === \"mobile\" ? <Rates/> : <></>}\r\n                        <div style={{zIndex: step === 1 ?  \"10\" : \"\" } } className={`${widthMode} round globe`}>\r\n                            {widthMode === \"desktop\" ? <Time/> : <></>}\r\n                            <div>\r\n                                <h2 className=\"text-center\"><img src={bitcoin} className=\"m-2\" alt=\"course\"/>\r\n                                    {currentCourse} <span>$</span>\r\n                                </h2>\r\n                                <div>\r\n                                    {widthMode === \"desktop\" ? <Online/> : <></>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"graph-wrapper\">\r\n                                <div className=\"graph\">\r\n                                    <Graph gradient1={widthMode === \"desktop\" ? undefined : 20}\r\n                                           gradient2={widthMode === \"desktop\" ? undefined : 150}\r\n                                           chartHeight={widthMode === \"desktop\" ? 250 : 150}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Dashboard/>\r\n                    </div>\r\n                    {widthMode === \"desktop\" ? <RightSector/> : <></>}\r\n                    {widthMode === \"mobile\" && view ? <RightSector/> : <></>}\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        course: state.courseReducer.course,\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        lastWin: state.balanceReducer.lastWin,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        congratulation: state.balanceReducer.congratulation,\r\n        yourlose: state.balanceReducer.yourlose,\r\n        logout: state.authReducer.logoutQuestion,\r\n        createAd: state.switchOptions.createAd,\r\n        widthMode: state.switchOptions.widthMode,\r\n        view: state.switchOptions.view,\r\n        currentLang: state.switchOptions.lang,\r\n        step: state.switchOptions.step,\r\n        isPreview: state.adsOptions.isPreview\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    closeCongratulation,\r\n    closeYourLose,\r\n    money,\r\n    stop,\r\n    logoutQuestion,\r\n    prohibition,\r\n    userdata,\r\n    createAdProp,\r\n    you_lose,\r\n    add_to_wallet,\r\n    playClick,\r\n    switchView\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Auth\\restore.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Auth\\Reset.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Auth\\Support.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Auth\\gotodesktop.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Header\\Header.js",["329","330","331"],"import React, {useState, useEffect} from 'react';\r\nimport './header.scss';\r\nimport logo from '../../images/logoLeft.svg';\r\nimport burger from '../../images/burger.png';\r\nimport refreshIcon from '../../images/refresh.svg';\r\nimport sound from '../../images/volume-up-solid.svg';\r\nimport noSound from '../../images/volume-mute-solid.svg';\r\nimport signup from '../../images/user_plus.svg';\r\nimport login from '../../images/sign_in.svg';\r\nimport caret from '../../images/lang.svg';\r\nimport russian from '../../images/russian.png';\r\nimport british from '../../images/british.png';\r\nimport bets from '../../images/bets.png';\r\nimport wallet from '../../images/wallet.png';\r\nimport {connect} from \"react-redux\";\r\nimport {playClick} from \"../../redux/actions/music\";\r\nimport {\r\n    authorization,\r\n    chooseLang,\r\n    createAdProp,\r\n    logoutQuestion,\r\n    prohibition,\r\n    registration,\r\n    switchStep,\r\n    switchView\r\n} from \"../../redux/actions\";\r\nimport {setIsPreview, setPreviewBanner} from '../../redux/actions/advertising'\r\nimport {changeDemo} from '../../redux/actions/game'\r\nimport {Link, useLocation, useHistory} from \"react-router-dom\";\r\nimport {muteToggle} from \"../../redux/actions/music\";\r\nimport closePreview from '../../images/closePreview.png';\r\n\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\n\r\nconst Header = ({switchStep, promo, auth, reg, mute, muteToggle, logoutQuestion, createAdProp, logout, registration, prohibition, authorization, unauthorized, predict, refresh, view, switchView, widthMode, currentLang, chooseLang, playClick, step, changeDemo, isPreview, setIsPreview, setPreviewBanner}) => {\r\n\r\n    const [menu, setMenu] = useState(false);\r\n    const [showLang, setShowLang] = useState(true);\r\n    const LANG = currentLang === \"en\" ? EN : RU;\r\n    const switchLang = () => setShowLang(!showLang);\r\n    useEffect(() => {\r\n        authorization();\r\n    })\r\n    const handleMute = () => {\r\n        muteToggle();\r\n    }\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n    let isGame = location.pathname === \"/game\";\r\n    const chooseLanguages = () => {\r\n        if (currentLang === \"en\") {\r\n            chooseLang(\"ru\")\r\n        } else {\r\n            chooseLang(\"en\")\r\n        }\r\n        switchLang();\r\n    }\r\n    const stepTest = (switchBool) => {\r\n        if (step === 4 || step === 0) {\r\n            switchView(switchBool);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (location.pathname === \"/\" || location.pathname === \"/login\") {\r\n            prohibition();\r\n\r\n        }\r\n    }, [location.pathname])\r\n    return (\r\n        <div>\r\n            <header className=\"header\" style={{background: isPreview ? 'rgba(0,0,0,0)' : '#1a1f34'}}>\r\n                {isPreview ? (\r\n                    <div className='blur block-click'>\r\n                        <div className={isPreview ? 'closePreview' : 'closePreviewNone'}>\r\n                            <span></span>\r\n                            <span>Ad preview</span>\r\n                            <img src={closePreview} onClick={() => {setPreviewBanner(true);setIsPreview(false); history.push('/ads')}}/>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                : (\r\n                <React.Fragment>\r\n                    <div style={{display: logout ? \"block\" : \"none\"}} className=\"blur\">\r\n                        <div className=\"round-dark win\">\r\n                            <h2 className={currentLang}>{LANG.ModalWindows.LogOut.title}</h2>\r\n                            <div className=\"win-btn\">\r\n                                <button onClick={() => {\r\n                                    logoutQuestion();\r\n                                    sessionStorage.removeItem('token');\r\n                                    prohibition();\r\n                                    window.location.reload();\r\n                                    playClick()\r\n                                }} className=\"btn btn-primary\"><Link to=\"/\">{LANG.ModalWindows.LogOut.btnLogOut}</Link>\r\n                                </button>\r\n                                <button onClick={() => {\r\n                                    logoutQuestion();\r\n                                    playClick()\r\n                                }} className={currentLang + \" btn btn-primary\"}>{LANG.ModalWindows.LogOut.btnContunue}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"wrap-header\">\r\n                            <nav className=\"navbar\">\r\n                                <a onClick={() => {\r\n                                    sessionStorage.setItem(\"saveReload\", \"0\");\r\n                                    sessionStorage.removeItem('token');\r\n                                    window.location.reload();\r\n                                    playClick()\r\n                                }} className=\"navbar-brand\">\r\n                                    <img src={logo} alt=\"logo\" height=\"23\"/>\r\n                                </a>\r\n                            </nav>\r\n                            <div className=\"header-right\">\r\n                                <div className=\"flag-wrapper\">\r\n                                    <img onClick={() => {\r\n                                        switchLang();\r\n                                        playClick()\r\n                                    }} className=\"flag\"\r\n                                        src={currentLang === \"en\" ? british : russian} width=\"30\" alt=\"lang\"/>\r\n                                    <img onClick={() => {\r\n                                        chooseLanguages();\r\n                                        playClick()\r\n                                    }} style={{display: showLang ? \"none\" : \"inline\"}}\r\n                                        className=\"flag hide-flag\" src={currentLang === \"ru\" ? british : russian} width=\"30\"\r\n                                        alt=\"lang\"/>\r\n                                    <img style={{transform: showLang ? \"none\" : \"rotate(180deg)\"}} onClick={() => {\r\n                                        switchLang();\r\n                                        playClick()\r\n                                    }}\r\n                                        className=\"sound \"\r\n                                        src={caret}\r\n                                        height=\"18\" width=\"18\"\r\n                                        alt=\"lang\"/>\r\n                                </div>\r\n\r\n                                <img onClick={() => {\r\n                                    if (sessionStorage.getItem(\"token\")) {\r\n                                        sessionStorage.setItem(\"saveReload\", \"1\");\r\n                                    }\r\n                                    window.location.reload();\r\n                                    playClick()\r\n                                }} style={{marginRight: \"20px\"}} className=\"sound reload\" height=\"18\" width=\"18\"\r\n                                    src={refreshIcon}\r\n                                    alt=\"refresh\"/>\r\n                                <img onClick={() => {\r\n                                    handleMute();\r\n                                    playClick()\r\n                                }} className=\"sound \" src={mute ? sound : noSound} height=\"18\" width=\"18\"\r\n                                    alt=\"sound\"/>\r\n\r\n\r\n                                    {!auth ? <div className=\"startHeader\">\r\n                                        <Link onClick={() => {\r\n                                            if (reg) {registration();}\r\n                                            playClick();\r\n                                        }} className={currentLang + \" login auth-header\"}\r\n                                            to=\"/login\">{LANG.Auth.Login.loginIn}\r\n                                        </Link>\r\n                                        <Link onClick={() => {registration(); playClick()}} className={currentLang + \" signup auth-header\"}\r\n                                            to=\"/signup\">{LANG.Auth.Login.signUp}\r\n                                        </Link>\r\n                                    <Link onClick={(e) => {\r\n                                        playClick()\r\n                                        if (reg) {registration();}\r\n                                    }} className=\"login auth-header-icon\" to=\"/login\">\r\n                                        <img width={18} src={login} alt=\"signin\"/>\r\n                                    </Link>\r\n                                    <Link onClick={() => {\r\n                                        registration();\r\n                                        playClick()\r\n                                    }} className=\"signup auth-header-icon\" to=\"/signup\">\r\n                                        <img width={18} src={signup} alt=\"signup\"/></Link>\r\n                                </div> : null}\r\n\r\n\r\n\r\n                                <div onClick={(e) => {\r\n                                    playClick()\r\n                                    setMenu(!menu)\r\n                                }}\r\n                                    style={{\r\n                                        display: auth ? 'flex' : 'none',\r\n                                        pointerEvents: predict ? \"none\" : \"auto\"\r\n                                    }}\r\n                                    className=\"menu\">\r\n                                    <img className=\"burger\"\r\n                                        src={burger} alt=\"icon\"/>\r\n                                    <ul style={{display: menu ? 'block' : 'none'}} className=\"burger-menu\">\r\n                                        {widthMode !== 'desktop' ? null :\r\n                                            <>\r\n                                        <li style={{display: promo ? \"block\" : \"none\"}} onClick={() => {\r\n                                            history.push(\"/promo\");\r\n                                        }} className=\"burger-menu-item bord\">\r\n                                            <span>Promo</span></li>\r\n                                                <li onClick={() => {\r\n                                                    history.push(\"/ads\");\r\n                                                    setPreviewBanner(false)\r\n                                                    playClick()\r\n                                                }} className=\"burger-menu-item bord\">{LANG.Menu.first}</li>\r\n                                                <li onClick={() => {\r\n                                                    history.push(\"/myads\");\r\n                                                    playClick()\r\n                                                }} className=\"burger-menu-item bord\"><span>{LANG.Menu.second}</span></li>\r\n                                            </>\r\n\r\n                                        }\r\n\r\n                                        <li onClick={() => {\r\n                                            history.push(\"/game\");\r\n                                            changeDemo();\r\n                                            switchStep(1);\r\n                                        }} className=\"burger-menu-item bord\">\r\n                                            <span>{LANG.Menu.third}</span></li>\r\n                                        <li className=\"burger-menu-item\" onClick={() => {\r\n                                            playClick();\r\n                                            logoutQuestion();\r\n                                        }}>{LANG.Menu.exit}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div style={{display: isGame && widthMode !== \"desktop\" ? \"block\" : \"none\"}} className=\"tabs\">\r\n                        <div className=\"wrap-tabs\">\r\n                            <div onClick={() => {\r\n                                stepTest(false);\r\n                                playClick()\r\n                            }} className={view ? \"tab bets\" : \"tab bets active\"}>\r\n                                <img src={bets} alt=\"tab\"/>\r\n                            </div>\r\n                            <div onClick={() => {\r\n                                stepTest(true);\r\n                                playClick()\r\n                            }} className={!view ? \"tab mobile_wallet\" : \"tab mobile_wallet active\"}>\r\n                                <img src={wallet} alt=\"tab\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>)}\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.authReducer.auth,\r\n        reg: state.authReducer.reg,\r\n        mute: state.soundReducer.mute,\r\n        logout: state.authReducer.logoutQuestion,\r\n        unauthorized: state.authReducer.unauthorized,\r\n        predict: state.balanceReducer.predict,\r\n        isDemo: state.balanceReducer.isDemo,\r\n        promo: state.balanceReducer.promo,\r\n        widthMode: state.switchOptions.widthMode,\r\n        view: state.switchOptions.view,\r\n        currentLang: state.switchOptions.lang,\r\n        step: state.switchOptions.step,\r\n        isPreview: state.adsOptions.isPreview\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    muteToggle,\r\n    logoutQuestion,\r\n    createAdProp,\r\n    registration,\r\n    prohibition,\r\n    authorization,\r\n    switchView,\r\n    chooseLang,\r\n    playClick,\r\n    switchStep,\r\n    changeDemo,\r\n    setIsPreview,\r\n    setPreviewBanner\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Start\\Start.js",["332","333"],"import React, {useState, useEffect} from 'react';\r\nimport './start.scss';\r\nimport Graph from \"../Graph\";\r\nimport Time from \"../Main/Time\";\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport arrowDown from \"../../images/arrowDown.svg\";\r\nimport arrowUp from \"../../images/arrowUp.svg\";\r\nimport bull from \"../../images/bull_start.png\";\r\nimport bear from \"../../images/bear_start.png\";\r\nimport Rect from \"../Main/Rect/Rect\";\r\nimport coin from \"../../images/coin.svg\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport {registration} from \"../../redux/actions\";\r\nimport {playClick, up_down, startWin, muteToggle, playYouWon} from \"../../redux/actions/music\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nconst Start = ({\r\n                   currentCourse,\r\n                   course,\r\n                   history,\r\n                   lastSeconds,\r\n                   userdata,\r\n                   widthMode,\r\n                   registration,\r\n                   currentLang,\r\n                   playClick,\r\n                   up_down,\r\n                   startWin,\r\n                   muteToggle,\r\n                   mute,\r\n                   playYouWon\r\n               }) => {\r\n    const [timeGame, setTimeGame] = useState(false);\r\n    const [start, setStart] = useState(false);\r\n    const [bet, setBet] = useState('');\r\n    const [predict, setPredict] = useState('');\r\n\r\n    const LANG = currentLang === \"en\" ? EN : RU\r\n\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0 && start) {\r\n            setTimeGame(true);\r\n        }\r\n    }, [lastSeconds])\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0 && start) {\r\n            if (bet === 'down' && currentCourse < course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n                playYouWon()\r\n            } else if (bet === 'down' && currentCourse > course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n                playYouWon()\r\n            } else if (bet === 'up' && currentCourse > course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n                playYouWon()\r\n            } else if (bet === 'up' && currentCourse < course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n                playYouWon()\r\n            } else {\r\n                setBet('');\r\n            }\r\n        }\r\n\r\n    }, [currentCourse])\r\n    return (\r\n        <div className=\"start\">\r\n            <div style={{display: predict ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                       <span onClick={() => {\r\n                           setPredict('');\r\n                           setBet('');\r\n                           playClick()\r\n                       }} className=\"chross\">&#10008;</span>\r\n                        <h2 className={currentLang}>{LANG.Main.Modal.title.first}\r\n                            <br/> {currentLang === \"en\" ? LANG.Main.Modal.title.second : null}</h2>\r\n                        {/* <h2>{currentLang === \"en\" ? LANG.Main.Modal.title.first <br/> LANG.Main.Modal.title.second : LANG.Main.Modal.title.first}</h2> */}\r\n                        {/* <h2>You did great! <br/> Join now!</h2> */}\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/login');\r\n                            playClick()\r\n                        }} className={currentLang + \" btn btn-primary\"}>\r\n                            {LANG.Main.Modal.logIn}\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/signup');\r\n                            registration();\r\n                            playClick()\r\n                        }} className={currentLang + \" btn btn-primary\"}>\r\n                            {LANG.Main.Modal.signUp}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`${widthMode}-start round round-dark`}>\r\n                <div className=\"bull-start-mobile\"><img src={bull} width=\"\" alt=\"bull\"/></div>\r\n                <div className=\"bear-start-mobile\"><img src={bear} width=\"\" alt=\"bear\"/></div>\r\n                <div className=\"bull-start\"><img src={bull} alt=\"bull\"/></div>\r\n                <div className=\"bear-start\"><img src={bear} alt=\"bear\"/></div>\r\n                <div className=\"text text-center\">\r\n                    <h2>\r\n                        <span className=\"gold\">BITCY</span>BETS\r\n                    </h2>\r\n                    <p className={currentLang + \" mt-3\"}>{LANG.Main.Start.content}</p>\r\n                </div>\r\n                <div className=\"dark\">\r\n                    <Time/>\r\n                    <div className=\"course\">\r\n                        <h2 style={{opacity: !currentCourse ? 0 : 1}} className=\"text-center\"><img src={bitcoin}\r\n                                                                                                   alt=\"course\"/>\r\n                            {currentCourse} <span>$</span>\r\n                        </h2>\r\n                        <div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: !currentCourse ? \"none\" : \"block\"}} className=\"graph\">\r\n                        <Graph gradient1={20} gradient2={150} chartHeight={widthMode === \"desktop\" ? 200 : 150}/>\r\n                    </div>\r\n                    <div style={{display: currentCourse ? \"none\" : \"block\"}} className=\"load\">\r\n                        <div className=\"wrap-img-preload\">\r\n                            <img className=\"coin1\" src={coin} alt=\"\"/>\r\n                            <img className=\"coin2\" src={coin} alt=\"\"/>\r\n                            <img className=\"coin3\" src={coin} alt=\"\"/>\r\n                            <img className=\"coin4\" src={coin} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"wrap-btn\">\r\n                            <button disabled={bet || !currentCourse} onClick={() => {\r\n                                setBet('down');\r\n                                if (!mute) {\r\n                                    muteToggle()\r\n                                }\r\n                                up_down();\r\n                                setStart(true)\r\n                            }}\r\n                                    className={currentLang + \" btn green green-start predict-btn\"}\r\n                                    id=\"down\">\r\n                                <span className={currentLang + \" green\"}>{LANG.Main.Start.btnUp}</span>\r\n                                <img src={arrowUp} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect start={timeGame} infinite={'infinity'} idButton={'down'}\r\n                                      mode={start ? 'rectUp' : ''}/>\r\n                            </button>\r\n                            <button disabled={bet || !currentCourse} onClick={() => {\r\n                                setBet('up');\r\n                                if (!mute) {\r\n                                    muteToggle()\r\n                                }\r\n                                up_down();\r\n                                setStart(true)\r\n                            }}\r\n                                    className={currentLang + \" btn red red-start predict-btn\"}\r\n                                    id=\"down\">\r\n                                <span className={currentLang + \" red\"}>{LANG.Main.Start.btnDown}</span>\r\n                                <img src={arrowDown} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect infinite={'infinity'} idButton={'down'} mode={start ? 'rectDown' : ''}/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"bg\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        course: state.courseReducer.course,\r\n        lastSeconds: state.courseReducer.lastSeconds,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang,\r\n        mute: state.soundReducer.mute\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    userdata,\r\n    registration,\r\n    playClick,\r\n    up_down,\r\n    startWin,\r\n    muteToggle,\r\n    playYouWon\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Start);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\Refill.js",["334"],"import React, {useState, useEffect} from 'react';\r\nimport './refill.scss';\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport dollar from \"../../images/dollar.svg\";\r\nimport arrows from \"../../images/arrows.svg\";\r\nimport back from \"../../images/back.svg\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Header from \"../Header/Header\";\r\nimport {createAdProp} from \"../../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {playClick} from \"../../redux/actions/music\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nlet socket = new WebSocket(\"wss://bitcybets.com:8080/serv\");\r\nlet bitcoins = [];\r\nsocket.onmessage = async e => {\r\n    (JSON.parse(e.data)).forEach(course => {\r\n        bitcoins.push(course.Bitcoin);\r\n    });\r\n}\r\nconst Refill = ({createAd, createAdProp, history, currentLang, playClick}) => {\r\n    let currentCourse = bitcoins[bitcoins.length - 1];\r\n    console.log(currentCourse)\r\n    const [bit, setBit] = useState(0);\r\n    const [usd, setUsd] = useState(0);\r\n    const [reverse, setReverse] = useState(false);\r\n    const LANG = currentLang === \"en\" ? EN : RU;\r\n    // useEffect(() => socket.close())\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div style={{display: createAd ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                        <h2>This feature coming soon</h2>\r\n                        <button onClick={() => {\r\n                            createAdProp();\r\n                            playClick()\r\n                        }} className=\"btn btn-primary\">OK\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"refill\">\r\n                <div className=\"round-dark\">\r\n                    <span onClick={() => {\r\n                        history.goBack();\r\n                        playClick()\r\n                    }} className=\"back\"><img src={back} alt=\"back\"/></span>\r\n                    <h2 className='currentLang'>{LANG.FulfillingRealMoney.CurrencyExchange.title}</h2>\r\n                    <div className={currentLang + \" amount\"}>{LANG.FulfillingRealMoney.CurrencyExchange.amount}</div>\r\n                    <br/>\r\n                    <div className={reverse ? \"refill-input flex-row-reverse\" : \"refill-input\"}>\r\n                        <div className=\"input-wrap\">\r\n                            <input value={bit}\r\n                                   onChange={(e) => {\r\n                                       setBit(e.target.value);\r\n                                       setUsd(e.target.value * currentCourse);\r\n                                   }}\r\n                                   placeholder=\"0.000\" type=\"text\"/>\r\n                                   <img className=\"currency\" src={bitcoin} width=\"15\" alt=\"btc\"/>\r\n                        </div>\r\n                        <img onClick={() => {\r\n                            setReverse(!reverse);\r\n                            playClick()\r\n                        }} className=\"arrows\" src={arrows} alt=\"arrows\"/>\r\n                        <div className=\"input-wrap\">\r\n                            <input value={usd}\r\n                                   onChange={(e) => {\r\n                                       setUsd(e.target.value);\r\n                                       const btc = (e.target.value / currentCourse).toFixed(8)\r\n                                       setBit(btc);\r\n                                   }}\r\n                                   placeholder=\"0.000\" type=\"text\"/>\r\n                            <img className=\"currency\" src={dollar} width=\"15\" alt=\"usd\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"refill-btn\">\r\n                        <Link to=\"/refill/btc\" className=\"pay\" onClick={playClick}><span\r\n                            className='currentLang'>{LANG.FulfillingRealMoney.CurrencyExchange.btnDeposit}</span><img\r\n                            src={bitcoin} width=\"15\"\r\n                            alt=\"bit\"/></Link>\r\n                        <button onClick={() => {\r\n                            window.open('https://flutterwave.com/pay/z0zmqctlrtvn', '_blank');\r\n                            playClick();\r\n                        }} className=\"pay\"><span\r\n                            className='currentLang'>{LANG.FulfillingRealMoney.CurrencyExchange.btnDeposit}</span><img\r\n                            src={dollar} width=\"15\"\r\n                            alt=\"bit\"/></button>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center mt-3\">\r\n                        <Link to=\"/support\" className={currentLang + \" support-link\"}\r\n                              onClick={playClick}>{LANG.support}</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        createAd: state.switchOptions.createAd,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    createAdProp,\r\n    playClick\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Refill);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\Usd.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\Btc.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\CompletePay.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\Withdraw.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\CompleteWith.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Refill\\Invite.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\Ads.js",["335","336","337","338","339"],"\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCurrentList, setAdErrors, setWebsite} from \"../../redux/actions/advertising\";\r\n// import {objData, isChange} from '../../redux/actions/changeAd'\r\nimport {createAdProp} from \"../../redux/actions\";\r\nimport {playClick} from \"../../redux/actions/music\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport {User} from \"../../api/User\";\r\n// styles\r\nimport \"./ads.scss\";\r\n// components\r\nimport {TextInput} from \"./components/Duration/components\";\r\nimport {Audience, Duration, Footer, ImagePreview} from \"./components\";\r\nimport Wallet from \"./components/Wallet\"\r\n\r\nconst Ads = (props) => {\r\n    const [errors, setErrors] = useState(\"\");\r\n    const [successBtn, setSuccessBtn] = useState(false);\r\n    let timezones = {};\r\n    props.country_codes_timezones.forEach(item => {\r\n        const k = Object.keys(item)[0];\r\n        timezones[k] = item[k];\r\n    })\r\n    useEffect(() => {\r\n        console.log(props.objData, props.isChange)\r\n    }, [props.objData, props.isChange])\r\n\r\n    const withTime = props.withDate ? {\r\n        start_date: props.start_date,\r\n        start_time: props.start_time,\r\n        end_date: props.end_date,\r\n        end_time: props.end_time,\r\n    } : null;\r\n    const ad = {\r\n        image: props.image,\r\n        website_url: props.website_url,\r\n        country_codes_timezones: timezones,\r\n        budget: props.budget.toString(),\r\n        ...withTime\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        let errorArray = [];\r\n\r\n        for (const adKey in ad) {\r\n            if (!ad[adKey]) {\r\n                errorArray.push(adKey);\r\n            } else if (props.withDate) {\r\n                if (!ad.country_codes_timezones) {\r\n                    errorArray.push(\"country_codes_timezones\");\r\n                }\r\n            }\r\n        }\r\n        if (!errorArray.length) {\r\n            User.createAd(ad)\r\n                .then((res => {\r\n                    if (res.data.status === \"success\") {\r\n                        props.createAdProp();\r\n                        props.userdata();\r\n                        props.getCurrentList();\r\n                    }\r\n                }))\r\n                .catch(e => console.log(e.data));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"father-ads\" style={{position: 'relative', display: 'flex'}}>\r\n            <div style={{display: props.createAd ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                        <h2>Your ad completed</h2>\r\n                        <button onClick={() => {\r\n                            props.createAdProp();\r\n                            props.history.push(\"/myads\");\r\n                            props.playClick();\r\n                        }} className=\"btn btn-primary\">My ads\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{display: 'flex', position: 'relative'}}>\r\n                <form onSubmit={(e) => handleSubmit(e)} className=\"round-dark ads\">\r\n                    <ImagePreview />\r\n\r\n                    <TextInput onChange={props.setWebsite} isChange={props.isChange} changeUrl={props.objData.website_url} label=\"Website URL\"/>\r\n\r\n                    <hr/>\r\n\r\n                    <Audience/>\r\n\r\n                    <Duration/>\r\n\r\n                    <Footer/>\r\n                </form>\r\n                <Wallet input={true}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        image: state.adsOptions.image,\r\n        website_url: state.adsOptions.website_url,\r\n        country_codes_timezones: state.adsOptions.country_codes_timezones,\r\n        start_date: state.adsOptions.banner_start_date,\r\n        start_time: state.adsOptions.banner_start_time,\r\n        end_date: state.adsOptions.banner_end_date,\r\n        end_time: state.adsOptions.banner_end_time,\r\n        budget: state.adsOptions.budget,\r\n        withDate: state.adsOptions.withDate,\r\n        adErrors: state.adsOptions.errorsObj,\r\n        createAd: state.switchOptions.createAd,\r\n        isChange: state.adChange.isChange,\r\n        objData: state.adChange.objData\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setWebsite,\r\n    createAdProp,\r\n    playClick,\r\n    userdata,\r\n    getCurrentList\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ads);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\actions\\index.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\index.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\sound\\Sound.js",["340","341"],"import React, {useRef, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {stop} from '../redux/actions/music';\r\n\r\nconst Sound = ({play, param, stop, mute}) => {\r\n\r\n    const audRef = useRef(null);\r\n    const handlePlay = () => {\r\n        audRef.current.play();\r\n    }\r\n    const muted = () => {\r\n        audRef.current.muted = !mute;\r\n    }\r\n    useEffect(() => {\r\n        if (param.id === play) {\r\n            audRef.current.id === 'fireworks' ? audRef.current.volume = 0.3 : audRef.current.volume = 0.7;\r\n            audRef.current.id === 'timer' ? audRef.current.playbackRate = 1.06 : audRef.current.playbackRate = 1.0;\r\n            handlePlay();\r\n        }\r\n        stop();\r\n    }, [param.id, play, handlePlay]);\r\n\r\n    useEffect(() => {\r\n        muted();\r\n    }, [muted]);\r\n\r\n    return (\r\n        <div className=\"sound\">\r\n            <audio ref={audRef} id={param.id} >\r\n                <source src={param.effect} type=\"audio/mpeg\" />\r\n            </audio>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        play: state.soundReducer.play,\r\n        mute: state.soundReducer.mute\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    stop\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sound);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\actions\\music.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Dashboard.js",["342","343","344","345"],"import React, {useEffect, useState} from 'react';\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport arrowUp from \"../../images/arrowUp.svg\";\r\nimport arrowDown from \"../../images/arrowDown.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport {betLose, betWin, closeCongratulation, closeYourLose} from \"../../redux/actions\";\r\nimport {\r\n    bell,\r\n    click,\r\n    fireworks,\r\n    muteToggle,\r\n    playBetTimer,\r\n    playGameTimer,\r\n    playTimer,\r\n    playTimer2,\r\n    playYouWon,\r\n    stop,\r\n    stopBetTimer,\r\n    stopGameTimer,\r\n    up_down,\r\n    you_lose\r\n} from \"../../redux/actions/music\";\r\nimport Rates from \"./Rates\";\r\nimport {predictClear, predictDown, predictUp, userdata} from \"../../redux/actions/game\";\r\nimport Rect from \"./Rect/Rect\";\r\nimport Timer from \"./Timer\";\r\nimport Online from \"./Online\";\r\nimport YouWon from '../../images/You_won (2).png';\r\nimport GoldCoins from '../../images/Gold_coins1.png';\r\nimport CoinUpImg from '../../images/coinUp.svg'\r\nimport CoinDownImg from '../../images/coinDown.svg'\r\n\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\n\r\nconst Dashboard = ({\r\n                       stopBetTimer,\r\n                       stopGameTimer,\r\n                       playBetTimer,\r\n                       playGameTimer,\r\n                       step,\r\n                       predictUp,\r\n                       betWin,\r\n                       betLose,\r\n                       fireworks,\r\n                       userdata,\r\n                       predictClear,\r\n                       predictDown,\r\n                       balance,\r\n                       predict,\r\n                       upBets,\r\n                       downBets,\r\n                       up,\r\n                       down,\r\n                       lastSeconds,\r\n                       widthMode,\r\n                       currentLang,\r\n                       up_down,\r\n                       you_lose,\r\n                       playTimer,\r\n                       playTimer2,\r\n                       stop,\r\n                       play,\r\n                       yourlose,\r\n                       closeYourLose,\r\n                       congratulation,\r\n                       closeCongratulation,\r\n                       playYouWon,\r\n                       lastWin,\r\n                       lastWinGame\r\n                   }) => {\r\n    const [bet, setBet] = useState(.0001);\r\n    const [gameStart, setGameStart] = useState(undefined);\r\n    const LANG = currentLang === \"en\" ? EN : RU;\r\n    let timeBet = lastSeconds % 20 === 0 || lastSeconds % 20 === 5;\r\n    let startGame = lastSeconds % 20 === 10 || lastSeconds % 20 === 15;\r\n\r\n    useEffect(() => {\r\n        if (startGame && gameStart === undefined) {\r\n            setGameStart(lastSeconds);\r\n            predictSubmit();\r\n        }\r\n    }, [lastSeconds])\r\n\r\n    useEffect(() => {\r\n        if (startGame && !!predict) {\r\n            stopBetTimer();\r\n            playGameTimer();\r\n            playTimer();\r\n        } else if (timeBet && !!predict) {\r\n            stopGameTimer();\r\n            playBetTimer();\r\n            playTimer2();\r\n        } else {\r\n            stopBetTimer();\r\n            stopGameTimer();\r\n        }\r\n    }, [startGame, timeBet, predict])\r\n\r\n    useEffect(() => {\r\n        if (yourlose === true) {\r\n            you_lose();\r\n            setTimeout(() => {\r\n                closeYourLose()\r\n            }, 3000);\r\n        }\r\n    }, [yourlose])\r\n\r\n    useEffect(() => {\r\n        if (congratulation === true) {\r\n            playYouWon();\r\n            setTimeout(() => {\r\n                closeCongratulation()\r\n            }, 4000);\r\n        }\r\n    }, [congratulation])\r\n\r\n    const setBetHandler = (e) => {\r\n        let bet = +e.target.value.slice(0, 5);\r\n        if (!bet) {\r\n            bet = 0.0001;\r\n        }\r\n        if (bet > 1) {\r\n            bet = 1;\r\n        }\r\n        setBet(bet || 0.0001);\r\n    }\r\n    const setBetStep = (bool) => {\r\n        const bets = bool ? +bet + .0001 : +bet - .0001;\r\n        console.log('bet')\r\n        if (!bets || +bets < 0) {\r\n            setBet(0.0001);\r\n        } else if (+bets > 1) {\r\n            setBet(1);\r\n        } else {\r\n            setBet(+bets.toFixed(4))\r\n        }\r\n    }\r\n\r\n    const betDone = (e) => {\r\n        let rate = e.target.id;\r\n        up_down();\r\n        if (rate === 'up') {\r\n            playBetTimer();\r\n            playGameTimer();\r\n            predictUp({value: bet.toString()});\r\n        } else if (rate === 'down') {\r\n            playBetTimer();\r\n            playGameTimer();\r\n            predictDown({value: bet.toString()});\r\n        }\r\n    }\r\n\r\n    const predictSubmit = () => {\r\n        return setTimeout(async () => {\r\n            try {\r\n                const data = await userdata();\r\n                if (+data.lastWin === 1 && predict !== '') {\r\n                    betWin();\r\n                } else if (+data.lastWin === -1 && predict !== '') {\r\n                    you_lose();\r\n                    betLose();\r\n                }\r\n                setGameStart(undefined);\r\n                predictClear();\r\n            } catch (e) {\r\n                console.log(e.data);\r\n            }\r\n        }, 10000)\r\n    }\r\n\r\n    const btnDownHandler = (e) => {\r\n        e.preventDefault();\r\n        betDone(e);\r\n    }\r\n\r\n    if (congratulation) { // congratulation\r\n        return (\r\n            <div className={`${widthMode} row bottom-container`}>\r\n                {widthMode === \"desktop\" ? <Rates/> : <></>}\r\n                <div style={{zIndex: step === 3 ? \"10\" : \"\"}} className={`${widthMode} round dashboard congratulation`}>\r\n                    <img src={YouWon} className='congratulation__youWon-img' alt=\"win\"/>\r\n                    <img src={GoldCoins} className='congratulation__coins-img' alt=\"win\"/>\r\n                    <p className='congratulation__score'>{lastWinGame} <img className='congratulation__btc'\r\n                                                                            src={bitcoin} alt='btc'/></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (yourlose) {\r\n        return (\r\n            <div className={`${widthMode} row bottom-container`}>\r\n                {widthMode === \"desktop\" ? <Rates/> : <></>}\r\n                <div style={{zIndex: step === 3 ? \"10\" : \"\"}} className={`${widthMode} round dashboard yourLose`}>\r\n                    <h1>You lose</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (startGame) {\r\n        return (\r\n            <div className={`${widthMode} row bottom-container`}>\r\n                {widthMode === \"desktop\" ? <Rates/> : <></>}\r\n                <div style={{zIndex: step === 3 ? \"10\" : \"\"}} className={`${widthMode} round dashboard big-timer`}>\r\n                    <Timer/>\r\n                    {startGame && !predict\r\n                        ? <span style={{display: startGame && !predict ? 'inline' : 'none'}}\r\n                                className=\"off text-center\">All bets are off</span>\r\n                        : <div style={{\r\n                            display: predict === 'up' || !predict ? 'inline' : 'none',\r\n                            transform: startGame && (predict === 'down' || !predict) ? 'scale(0)' : 'scale(1)'\r\n                        }} className=\"up\">\r\n                            <div style={{display: predict === 'down' ? \"none\" : \"inherit\"}} className=\"profit\">\r\n                                                    <span style={{\r\n                                                        fontSize: '21px',\r\n                                                        display: widthMode === \"mobile\" ? \"inline\" : \"inline\"\r\n                                                    }}\r\n                                                          className={currentLang + \" green\"}>{LANG.Training.UsualState.MakeBet.yourProfit} </span>\r\n                                <span style={{fontSize: '21px'}}>\r\n                                                        {up || down ? ((bet / (bet + upBets) * downBets) * 0.97).toFixed(6) : 0}\r\n                                                    </span>\r\n                                <img style={{marginTop: '-5px'}} src={bitcoin} width=\"15\" height=\"21\" alt=\"b\"/>\r\n                                <div className='coinImg'>\r\n                                    <img src={CoinUpImg} alt='coin'/>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                    {startGame && (predict === 'up' || !predict)\r\n                        ? <></>\r\n                        :\r\n                        <div style={{display: (predict === 'down' || !predict) ? 'block' : 'none'}}\r\n                             className=\"down\">\r\n                            <div style={{display: predict === 'up' ? \"none\" : \"inherit\"}} className=\"profit\">\r\n                                                    <span style={{\r\n                                                        fontSize: '21px',\r\n                                                        display: widthMode === \"mobile\" ? \"inline\" : \"inline\"\r\n                                                    }}\r\n                                                          className={currentLang + \" red\"}>{LANG.Training.UsualState.MakeBet.yourProfit} </span>\r\n                                <span\r\n                                    style={{fontSize: '21px'}}>{up || down ? ((bet / (bet + downBets) * upBets) * 0.97).toFixed(6) : 0}\r\n                                                </span>\r\n                                <img style={{marginTop: '-5px'}} src={bitcoin} width=\"15\" height=\"21\" alt=\"b\"/>\r\n                                <div className='coinImg'>\r\n                                    <img src={CoinDownImg} alt='coin'/>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={`${widthMode} row bottom-container`}>\r\n                {widthMode === \"desktop\" ? <Rates/> : <></>}\r\n                <div style={{zIndex: step === 3 ? \"10\" : \"\"}} className={`${widthMode} round dashboard`}>\r\n                    <div className=\"range\">\r\n                        <div className=\"form-label d-flex justify-content-between\">\r\n                            <div className='makeYourBet'>\r\n                                <h2 className={predict || startGame ? \"text-left\" : \"make-bet text-left\"}>\r\n                                    {/* {widthMode === \"desktop\" ? LANG.BettingRealMoney.UsualState.MakeBet.title : \"\"}</h2> */}\r\n                                    {LANG.BettingRealMoney.UsualState.MakeBet.title}</h2>\r\n                                <p className='setSize'>Set bet size</p>\r\n                            </div>\r\n                            <div className=\"balanceInput\">\r\n                                {widthMode === \"mobile\" ? <Online/> : <></>}\r\n                                <span className='balanceBtn minus' onClick={() => setBetStep(false)}>-</span>\r\n                                <span\r\n                                    className={balance - bet >= 0 ? 'balanceInput__balance' : 'balanceInput__balance red'}>\r\n                                    <input id=\"numberBet\" type=\"number\" step=\"0.0001\" min=\"0.0001\" max=\"1\"\r\n                                           className={balance - bet >= 0 ? '' : 'red'}\r\n                                           disabled={predict || !timeBet}\r\n                                           onInput={setBetHandler}\r\n                                           value={bet}/>\r\n                                    <img className=\"numberBet\" width=\"15\" src={bitcoin} alt=\"up\"/>\r\n                                </span>\r\n                                <span className='balanceBtn plus' onClick={() => setBetStep(true)}>+</span>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={e => e.preventDefault()}>\r\n                            <div className=\"form\">\r\n                                <div className=\"bet\">\r\n                                    <input min=\"0.0001\" max=\"1\" step=\"0.0001\"\r\n                                           type=\"range\"\r\n                                           disabled={predict || !timeBet || startGame}\r\n                                           value={bet}\r\n                                           style={{backgroundImage: `linear-gradient(to right, ${balance - bet >= 0 ? '#32D74B' : '#FF453A'} 0%, ${balance - bet >= 0 ? '#32D74B' : '#FF453A'} ${bet * 100}%, #fff ${bet * 100}%, white 100%)`}}\r\n                                           onChange={setBetHandler}\r\n                                           className={balance - bet >= 0 ? 'green-range' : 'red-range'}\r\n                                           id=\"range\"/>\r\n                                </div>\r\n                                <div className='wrap-btn'>\r\n\r\n                                    {startGame && (predict === 'down' || !predict)\r\n                                        ? <span style={{display: startGame && !predict ? 'flex' : 'none'}}\r\n                                                className=\"off\">All bets are off</span>\r\n                                        : <div style={{\r\n                                            display: predict === 'up' || !predict ? 'block' : 'none',\r\n                                            transform: startGame && (predict === 'down' || !predict) ? 'scale(0)' : 'scale(1)'\r\n                                        }} className=\"up\">\r\n                                            <div className=\"profit\">\r\n                                                    <span style={{display: widthMode === \"mobile\" ? \"block\" : \"inline\"}}\r\n                                                          className={\" green\"}>{LANG.BettingRealMoney.UsualState.MakeBet.yourProfit}</span>\r\n                                                <span>\r\n                                                    {up || down ? ((bet / (bet + upBets) * downBets) * 0.97).toFixed(6) : 0}\r\n                                                </span>\r\n                                                <img src={bitcoin} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                            </div>\r\n                                            <button disabled={predict || balance - bet < 0 || !timeBet}\r\n                                                    onClick={(e) => {\r\n                                                        e.preventDefault();\r\n                                                        betDone(e);\r\n                                                    }}\r\n                                                    className={\" btn green predict-btn\"}>{LANG.BettingRealMoney.UsualState.MakeBet.btnUp}\r\n\r\n                                                <img src={arrowUp} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                                <Rect idButton={'up'} mode={timeBet ? 'rectUp' : \"\"}/>\r\n                                            </button>\r\n                                        </div>}\r\n\r\n                                    {startGame && (predict === 'up' || !predict)\r\n                                        ? <></>\r\n                                        :\r\n                                        <div style={{display: (predict === 'down' || !predict) ? 'block' : 'none'}}\r\n                                             className=\"down\">\r\n                                            <div className=\"profit\">\r\n                                                    <span style={{display: widthMode === \"mobile\" ? \"block\" : \"inline\"}}\r\n                                                          className={\" red\"}>{LANG.BettingRealMoney.UsualState.MakeBet.yourProfit}</span>\r\n                                                <span>\r\n                                                    {up || down ? ((bet / (bet + downBets) * upBets) * 0.97).toFixed(6) : 0}\r\n                                                </span>\r\n                                                <img src={bitcoin} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                            </div>\r\n                                            <button disabled={predict || balance - bet < 0 || !timeBet}\r\n                                                    onClick={(e) => {\r\n                                                        btnDownHandler(e)\r\n                                                    }}\r\n                                                    className={\" btn red predict-btn\"}\r\n                                                    id=\"down\">{LANG.BettingRealMoney.UsualState.MakeBet.btnDown}\r\n                                                <img src={arrowDown} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                                <Rect idButton={'down'} mode={timeBet ? 'rectDown' : \"\"}/>\r\n                                            </button>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        balance: state.balanceReducer.balance,\r\n        course: state.courseReducer.course,\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        currentTime: state.courseReducer.currentTime,\r\n        lastSeconds: state.courseReducer.lastSeconds,\r\n        lastWin: state.balanceReducer.lastWin,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        congratulation: state.balanceReducer.congratulation,\r\n        predict: state.balanceReducer.predict,\r\n        yourlose: state.balanceReducer.yourlose,\r\n        downBets: state.balanceReducer.downBets,\r\n        upBets: state.balanceReducer.upBets,\r\n        up: state.balanceReducer.up,\r\n        down: state.balanceReducer.down,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang,\r\n        step: state.switchOptions.step,\r\n        play: state.soundReducer.play,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    betWin,\r\n    betLose,\r\n    predictUp,\r\n    predictDown,\r\n    predictClear,\r\n    click,\r\n    up_down,\r\n    you_lose,\r\n    bell,\r\n    stop,\r\n    playTimer,\r\n    playTimer2,\r\n    fireworks,\r\n    closeCongratulation,\r\n    muteToggle,\r\n    userdata,\r\n    stopBetTimer,\r\n    stopGameTimer,\r\n    playBetTimer,\r\n    playGameTimer,\r\n    closeYourLose,\r\n    playYouWon\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Graph.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\fireworks.js",[],["346","347"],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\RightSector.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Time.js",["348"],"import React, {useEffect, useState} from 'react';\r\nimport {geoposition} from \"../../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Time = ({geo, geoposition}) => {\r\n    useEffect(() => {\r\n        geoposition()\r\n    },[geo]);\r\n    useEffect(() => {\r\n        const clock = setInterval(() => setTime(new Date().toLocaleTimeString()), 1000);\r\n        return () => clearInterval(clock);\r\n    }, [])\r\n    let [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    return (\r\n        <div className=\"time\">\r\n            <h2 className=\"time-text\">{time.slice(0, 5)}</h2>\r\n            <div className=\"label text-center\">{geo || <span style={{fontSize: \"10px\"}}>Please, allow location access</span>}</div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        geo: state.geoReducer.geoposition,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    geoposition\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Time);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Preloader.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\actions\\game.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Rates.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Online.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\api\\User.js",["349"],"import {Api, Dev} from './Api';\r\n\r\n// const token = JSON.stringify({\"accessToken\": sessionStorage.getItem('token')});\r\nexport const User = {\r\n    register(form) {\r\n        return Api().post('/register', form);\r\n    },\r\n    login(form) {\r\n        return Api().post('/login', form);\r\n    },\r\n    code(code) {\r\n        return Api().post('/user/code', JSON.stringify(code));\r\n    },\r\n    forgotPassword(email) {\r\n        return Api().post('/forgotPassword', JSON.stringify(email));\r\n    },\r\n    updatePassword(user) {\r\n        return Api().post('/user/updatePassword', JSON.stringify(user));\r\n    },\r\n    rate() {\r\n        return Api().post('/rates', JSON.stringify({\"accessToken\": sessionStorage.getItem('token')}));\r\n    },\r\n    userdata() {\r\n        return Api().post('/getUser', JSON.stringify({\"accessToken\": sessionStorage.getItem('token')}));\r\n    },\r\n    predictUp(value) {\r\n        return Api().post('/predictUp', JSON.stringify(({...{\"accessToken\": sessionStorage.getItem('token')}, ...value})));\r\n    },\r\n    predictDown(value) {\r\n        return Api().post('/predictDown', JSON.stringify(({...{\"accessToken\": sessionStorage.getItem('token')}, ...value})));\r\n    },\r\n    changeWallet() {\r\n        return Api().post('/changeDemo', JSON.stringify({\"accessToken\": sessionStorage.getItem('token')}));\r\n    },\r\n    sendDeposit(file) {\r\n        return Api().post('/user/sendDeposit', JSON.stringify({...{\"accessToken\": sessionStorage.getItem('token')}, ...file}));\r\n    },\r\n    withdraw(wallet) {\r\n        return Api().post('/user/withdraw', JSON.stringify({...{\"accessToken\": sessionStorage.getItem('token')}, ...wallet}));\r\n    },\r\n    createAd(ad) {\r\n        return Api().post('/trahtibidoh/create', JSON.stringify({...{\"accessToken\": sessionStorage.getItem('token')}, ...ad}));\r\n    },\r\n    listAds() {\r\n        return Api().post('/trahtibidoh/list', JSON.stringify({\"accessToken\": sessionStorage.getItem('token')}));\r\n    } ,\r\n    promoList() {\r\n        return Api().post('/promo/list', JSON.stringify({\"accessToken\": sessionStorage.getItem('token')}));\r\n    }\r\n};\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\languages\\en.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\languages\\ru.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Presentation.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Rect\\Rect.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\types.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\entry.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\game.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\sound.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\advertising.js",["350"],"import {\r\n    ADD_BANNER,\r\n    ADD_COUNTRY,\r\n    SET_BUDGET,\r\n    SET_END_DATE,\r\n    SET_END_TIME,\r\n    SET_START_DATE,\r\n    SET_START_TIME,\r\n    SET_WEB_SITE,\r\n    DELETE_COUNTRY_AND_TIMEZONE,\r\n    GET_LIST_ADS,\r\n    AD_DETAIL,\r\n    IS_PREVIEW,\r\n    PREVIEW_BANNER,\r\n    IS_CORRECT_DATE, WITH_DATE, PROMO_LIST, ERROR_AD\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n    image: undefined,\r\n    website_url: undefined,\r\n    country_codes_timezones: [],\r\n    banner_start_date: undefined,\r\n    banner_start_time: undefined,\r\n    banner_end_date: undefined,\r\n    banner_end_time: undefined,\r\n    budget: 0,\r\n    currentList: [],\r\n    finishedList: [],\r\n    adDetail: {},\r\n    isPreview: false,\r\n    previewBanner: false,\r\n    isCorrectDate: false,\r\n    withDate: true,\r\n    promoList: []\r\n}\r\n\r\nexport const adsOptions = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_BANNER:\r\n            return {...state, image: action.payload};\r\n        case SET_WEB_SITE:\r\n            return {...state, website_url: action.payload};\r\n        case ADD_COUNTRY:\r\n            return {...state, country_codes_timezones: [...state.country_codes_timezones, action.payload]};\r\n        case SET_START_DATE:\r\n            return {...state, banner_start_date: action.payload};\r\n        case SET_START_TIME:\r\n            return {...state, banner_start_time: action.payload};\r\n        case SET_END_DATE:\r\n            return {...state, banner_end_date: action.payload};\r\n        case SET_END_TIME:\r\n            return {...state, banner_end_time: action.payload};\r\n        case SET_BUDGET:\r\n            return {...state, budget: action.payload};\r\n        case GET_LIST_ADS:\r\n            return {...state, currentList: action.payload.current, finishedList: action.payload.finished}\r\n        case DELETE_COUNTRY_AND_TIMEZONE:\r\n            return {...state, country_codes_timezones: [\r\n                ...state.country_codes_timezones.slice(0, action.payload),\r\n                ...state.country_codes_timezones.slice(action.payload + 1)\r\n            ]}\r\n        case AD_DETAIL: \r\n            return {...state, adDetail: action.payload}\r\n        case IS_PREVIEW: \r\n            return {...state, isPreview: action.payload}\r\n        case PREVIEW_BANNER: \r\n            return {...state, previewBanner: action.payload}\r\n        case IS_CORRECT_DATE:\r\n            return {...state, isCorrectDate: action.payload}\r\n            case WITH_DATE:\r\n            return {...state, withDate: action.payload}\r\n        case PROMO_LIST:\r\n            return {...state, promoList: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\index.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Main\\Timer.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\index.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\api\\Api.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\languages\\privacy.en.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\languages\\privacy.ru.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Step1.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Step2.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Step4.js",["351"],"import React from 'react'\r\nimport imgPerson from '../../images/person x4F 4 1.png'\r\nimport imgArrowRight from '../../images/arrow-right.png';\r\nimport imgArrowLeft from '../../images/arrow-left.png';\r\nimport imgClickOnWallet from '../../images/clickOnWallet.png'\r\nimport {switchStep} from '../../redux/actions/index';\r\nimport {switchView} from \"../../redux/actions\";\r\nimport {playClick} from '../../redux/actions/music';\r\nimport {connect} from 'react-redux';\r\nimport {EN} from '../../languages/en'\r\nimport {RU} from '../../languages/ru'\r\n\r\nconst Step4 = ({playClick, switchStep, currentLang, switchView, widthMode, view}) => {\r\n    const LANG = currentLang === 'en' ? EN : RU;\r\n    const isDesktop = widthMode === \"desktop\";\r\n    if (isDesktop === true || view === true) {\r\n        return (\r\n            <div className=\"step step4\">\r\n                <img className='step-img' src={imgPerson} alt='person'/>\r\n                <div className='step-content'>\r\n                    <ul className='list-lines'>\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                    </ul>\r\n                    <h3 className='step-content__title'>{LANG.Intro.Step4.title}</h3>\r\n                    <p className='step-content__content'>{LANG.Intro.Step4.content}</p>\r\n                    <ul className=\"step-nav\">\r\n                        <li className='step-nav__item' onClick={() => {\r\n                            // switchView(false);\r\n                            isDesktop ? switchStep(3) : switchView(false)\r\n                            playClick()\r\n                        }}>\r\n                            <span>{isDesktop ? LANG.Intro.btnIntro.prev : <img src={imgArrowLeft} alt='arrow-left'/>}</span>\r\n                        </li>\r\n                        <li className='step-nav__item step-nav_btnSkip' onClick={() => {\r\n                            switchStep(0);\r\n                            playClick()\r\n                        }}>\r\n                            <span>{LANG.Intro.btnIntro.skip}</span>\r\n                        </li>\r\n                        <li className='step-nav__item' onClick={() => {\r\n                            switchStep(5);\r\n                            playClick()\r\n                        }}>\r\n                            <span>{isDesktop ? LANG.Intro.btnIntro.next : <img src={imgArrowRight} alt='arrow-right'/>}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n                \r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"step step4 clickOnWallet\" style={{height: '303px'}}>\r\n                {/* <img className='step-img' src={imgClickOnWallet} alt='person'/> */}\r\n                <div className='step-content' style={{marginTop: '115px'}}>\r\n                    <ul className='list-lines'>\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                    </ul>\r\n                    <h3 className='step-content__title'>{LANG.Intro.ClickOnWallet.title}</h3>\r\n                    <p className='step-content__content'>{LANG.Intro.ClickOnWallet.content}</p>\r\n                    <ul className=\"step-nav\">\r\n                        <li className='step-nav__item' onClick={() => {\r\n                            switchStep(3);\r\n                            playClick()\r\n                        }}>\r\n                            <span>{isDesktop ? LANG.Intro.btnIntro.prev : <img src={imgArrowLeft} alt='arrow-left'/>}</span>\r\n                        </li>\r\n                        <li className='step-nav__item step-nav_btnSkip' onClick={() => {\r\n                            switchStep(0);\r\n                            playClick()\r\n                        }}>\r\n                            <span>{LANG.Intro.btnIntro.skip}</span>\r\n                        </li>\r\n                        <li className='step-nav__item' onClick={() => {\r\n                            switchView(true);\r\n                            playClick()\r\n                        }}>\r\n                            <span>{isDesktop ? LANG.Intro.btnIntro.next : <img src={imgArrowRight} alt='arrow-right'/>}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentLang: state.switchOptions.lang,\r\n        widthMode: state.switchOptions.widthMode,\r\n        view: state.switchOptions.view\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    switchStep,\r\n    playClick,\r\n    switchView\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step4)\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Step3.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Intro\\Step5.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\ImagePreview.js",["352","353","354"],"import React from \"react\";\r\n// hooks\r\nimport useImagePreview from \"../../useImagePreview\";\r\nimport {addImage, setIsPreview} from '../../../redux/actions/advertising'\r\nimport { connect } from \"react-redux\";\r\nimport back from \"../../../images/back.svg\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ImagePreview = ({addImage, banner, isPreview, previewBanner, setIsPreview, adErrors, isChange, objData, invalid}) => {\r\n  const [image, setFile] = useImagePreview();\r\n  let history = useHistory()\r\n\r\n  const encodeImageFileAsURL = (element) => {\r\n    let file = element.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.onloadend = function() {\r\n      addImage(reader.result);\r\n    }\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className='backbtn-title-span'>\r\n        <img src={back} alt='back' onClick={() => history.push('/game')} className='backbtn-title-span__btn'/>\r\n        <h2 className='backbtn-title-span__title'>Ad creative</h2>\r\n      </span>\r\n      \r\n      <div className=\"wrapper-input-file\">\r\n        <div className=\"label-file\">\r\n          Select a banner to add <br />\r\n          275 x 270 px\r\n        </div>\r\n\r\n        <div className=\"wrap-input\">\r\n          <label className=\"dashed\" htmlFor=\"image-file\">\r\n            {isChange ? (<img className=\"image-preview\" src={objData.image} />) :\r\n            previewBanner ? (<img className=\"image-preview\" src={banner} />) :\r\n            (image ? (\r\n              <img className=\"image-preview\" src={image} />\r\n            ) : (\r\n              <div className=\"description\">Drag and drop file here or</div>\r\n            ))\r\n            }\r\n            \r\n            <input onChange={(e) => {setFile(e); encodeImageFileAsURL(e)}} type=\"file\" id=\"image-file\"  />\r\n          </label>\r\n\r\n          <label htmlFor=\"image-file\" className=\"btn-file\">\r\n            Choose file\r\n          </label>\r\n          <span onClick={() => {setIsPreview(true); history.push('/game')}} className='btn-ad-preview'>Ad Preview</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    banner: state.adsOptions.banner,\r\n    isPreview: state.adsOptions.isPreview,\r\n    previewBanner: state.adsOptions.previewBanner,\r\n    adErrors: state.adsOptions.errorsObj,\r\n    isChange: state.adChange.isChange,\r\n    objData: state.adChange.objData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addImage,\r\n  setIsPreview\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePreview);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\Tabs.js",["355","356"],"import React, {useState} from \"react\";\r\n// components\r\nimport {RangeInput} from \"./FormInput\";\r\n// styles\r\nimport \"./style.scss\";\r\n// images\r\nimport bitcoin from \"../../../../../images/bitcoin.svg\";\r\nimport dollar from \"../../../../../images/dollar.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport {setBudget, setWithDate} from \"../../../../../redux/actions/advertising\";\r\n\r\n\r\nlet socket = new WebSocket(\"wss://bitcybets.com:8080/serv\");\r\nlet bitcoins = [];\r\nsocket.onmessage = async e => {\r\n    (JSON.parse(e.data)).forEach(course => {\r\n        bitcoins.push(course.Bitcoin);\r\n    });\r\n}\r\n\r\nconst Tabs = ({tabs, budget, setBudget, balance, setWithDate, adErrors}) => {\r\n    let currentCourse = bitcoins[bitcoins.length - 1];\r\n    // useEffect(() => socket.close());\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [cost, setCost] = useState(50)\r\n    return (\r\n        <div className=\"tabsContainer\">\r\n            <div className=\"tabs\">\r\n                {tabs.map(({id, label}) => (\r\n                    <div key={id}\r\n                        className={activeTab === id ? \"activeTab\" : \"tab\"}\r\n                        onClick={() => {\r\n                            setActiveTab(id);\r\n                            setWithDate(!!id);\r\n                        }}>\r\n                        {label}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"daily\">\r\n                <span>Daily budget</span>\r\n                <span className=\"opacity\">Actual amount spend daily may vary</span>\r\n                <div>\r\n                    <span className=\"opacity\">1 click = 1 $</span>\r\n                    <span style={{marginLeft: \"60px\"}} className=\"opacity\">1 display = 0.05 $</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"estimated\">\r\n                <div className=\"estimated-perDay\">\r\n                    <div style={{textAlign: \"left\"}}>\r\n                        Estimated 1K – 1,5K people <br/>\r\n                        reached per day\r\n                    </div>\r\n\r\n                    <div className=\"amount\">\r\n                        <div className=\"amount-btc\">\r\n                            {budget > 0 ? +budget.toFixed(4) : 0}<img src={bitcoin} alt=\"btc\"/>\r\n                        </div>\r\n                        <div className=\"amount-dollar website-block\">\r\n                            <input onInput={e => setBudget(+e.target.value / +currentCourse)} value={((+budget * +currentCourse) || 50).toFixed(0)} className=\"dollarContainer\" />\r\n                            <img src={dollar} alt=\"dollar\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <RangeInput withError min={50} max={50000} course={currentCourse} value={((+budget * +currentCourse) || 50).toFixed(0)} balance={(balance * currentCourse)}/>\r\n            </div>\r\n            <div className=\"content\">{tabs[activeTab]?.content}</div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        budget: state.adsOptions.budget,\r\n        balance: state.balanceReducer.balance,\r\n        adErrors: state.adsOptions.errorsObj,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBudget,\r\n    setWithDate\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tabs);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\FormInput.js",["357"],"import React, {useState} from \"react\";\r\nimport {setBudget} from '../../../../../redux/actions/advertising'\r\nimport moment from 'moment';\r\nimport dayjs from \"dayjs\";\r\n// styles\r\nimport \"./style.scss\";\r\nimport store from \"../../../../../redux/store\";\r\n\r\nexport const NumberInput = ({label}) => {\r\n    const [inputValue, setValue] = useState(\"1\");\r\n\r\n    const handleChange = ({target: {value}}) => {\r\n        if (value === \"\") setValue(\"1\");\r\n\r\n        if (!Number.isNaN(+value - 1) && value > 0 && !value.includes(\".\")) {\r\n            setValue(value);\r\n        }\r\n    };\r\n\r\n    const changeAmount = ({target: {name}}) => {\r\n        if (name === \"desc\") {\r\n            if (+inputValue === 1) return;\r\n\r\n            setValue(inputValue - 1);\r\n        } else {\r\n            setValue(+inputValue + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <div className=\"formInput\">\r\n                <input value={inputValue} onChange={handleChange}/>\r\n\r\n                <div className=\"inputButtons\">\r\n                    <button name=\"asc\" onClick={changeAmount}>\r\n                        +\r\n                    </button>\r\n\r\n                    <button name=\"desc\" onClick={changeAmount}>\r\n                        -\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// export const SelectInput = ({label, data = [], onchange = () => {}}) => {\r\n//     return (\r\n//         <div/>\r\n//     );\r\n// }\r\n\r\nexport const DateInput = ({label, onChange = () => {}, invalid}) => {\r\n    const [inputValue, setValue] = useState(\"\");\r\n\r\n    const handleChange = ({target: {valueAsNumber}}) => {\r\n        setValue(dayjs(valueAsNumber).format(\"YYYY-MM-DD\"));\r\n        onChange(dayjs(valueAsNumber).format(\"YYYY-MM-DD\"));\r\n    };\r\n\r\n    return (\r\n        <div className=\"dateInputContainer\" style={{width: '188.5px'}}>\r\n            <label>{label}</label>\r\n            <div className=\"dateInput\" style={{border: invalid ? '1px solid #FF453A' : '1px solid white'}}>\r\n                <div>{inputValue}</div>\r\n                <input onChange={handleChange} type=\"date\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const TimeInput = ({label, onChange = () => {}, invalid}) => {\r\n    // const [inputValue, setValue] = useState(\"\");\r\n\r\n    const handleChange = ({target: {valueAsNumber}}) => {\r\n        // setValue(onChange(moment.utc(valueAsNumber).format('HH:mm:ss')))\r\n        // setValue(dayjs(valueAsNumber).format(\"HH:mm:ss [GMT]Z (z)\", 'Europe/London'));\r\n        // if (onChange) onChange(inputValue);\r\n        return (onChange(moment.utc(valueAsNumber).format('HH:mm:ss')))\r\n    };\r\n\r\n    return (\r\n        <div className=\"timeInputContainer\" style={{width: '188.5px'}}>\r\n            <label>{label}</label>\r\n            <div className=\"timeInput\" style={{border: invalid ? '1px solid #FF453A' : '1px solid white'}}>\r\n                <input onChange={handleChange} type=\"time\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const RangeInput = ({min, max, course, balance, invalid, value, withError = false, onChange = () => {\r\n    },}) => {\r\n    const [isValid, setValidation] = useState(true);\r\n    const handlerChange = ({target: {valueAsNumber}}) => {\r\n        onChange({\r\n            value: valueAsNumber,\r\n            isValid: balance >= valueAsNumber,\r\n        });\r\n        const budget = +valueAsNumber / +course;\r\n        store.dispatch(setBudget(budget))\r\n        setValidation(balance >= valueAsNumber);\r\n    };\r\n    return (\r\n        <div className=\"rangeInputContainer\">\r\n            <input\r\n                min={min}\r\n                max={max}\r\n                onChange={handlerChange}\r\n                className={isValid || invalid ? \"rangeInput\" : \"rangeInput-error\"}\r\n                type=\"range\"\r\n                value={value}\r\n            />\r\n\r\n            {withError && !isValid && (\r\n                <div className=\"reffil\">\r\n                    <div className=\"reffil-balance\">\r\n                        <span>Balance</span>\r\n                        <span>{balance.toFixed(0)} <span className=\"gold\">$</span></span>\r\n                    </div>\r\n\r\n                    <button className=\"reffil-button\">REFILL</button>\r\n\r\n                    <div className=\"reffil-error\">Not enough</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const TextInput = ({label, onChange = () => {}, setWebsite, webSite, invalid}) => {\r\n    const [name, setName] = useState();    \r\n\r\n    const checkForLatin = event => {\r\n        let val = event.replace(/[^\\x00-\\x7F]/ig, '');\r\n        setName(val);\r\n    }\r\n\r\n    return (\r\n        <div className=\"website-block\">\r\n            <span className=\"block-description\">{label}</span>\r\n            <input\r\n                style={{borderColor: invalid ? \"#FF453A\" : \"inherit\"}}\r\n                type=\"text\"\r\n                placeholder=\"website.com\"\r\n                onChange={(e) => {onChange(e.target.value); checkForLatin(e.target.value)}} value={name}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Duration\\index.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Audience\\index.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Footer\\index.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\useImagePreview.js",["358"],"import { useState } from \"react\";\r\n\r\nexport default () => {\r\n  const [image, setImage] = useState(null);\r\n\r\n  const setFile = ({ target }) => {\r\n    const localURL = URL.createObjectURL(target.files[0]);\r\n\r\n    setImage(localURL);\r\n  };\r\n\r\n  return [image, setFile];\r\n};\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Duration\\Duration.js",["359"],"import React, { useState, useEffect } from \"react\";\r\nimport dayjs from \"dayjs\";\r\n// components\r\nimport { Tabs, TimeInput, DateInput } from \"./components\";\r\n// style\r\nimport \"./style.scss\";\r\nimport {connect} from \"react-redux\";\r\nimport {setEndDate, setEndTime, setStartDate, setStartTime, setIsCorrectDateToStore} from \"../../../../redux/actions/advertising\";\r\n\r\nconst Duration = ({setStartDate, setStartTime, setEndDate, setEndTime, startTime, setIsCorrectDateToStore, isCorrectDateFromStore}) => {\r\n  const [dateStart, setDateStart] = useState(0);\r\n  const [timeStart, setTimeStart] = useState(0);\r\n  const [dateEnd, setDateEnd] = useState(0);\r\n  const [timeEnd, setTimeEnd] = useState(0);\r\n  const [isStartDate, setIsStartDate] = useState(true);\r\n  const [isCorrectDate, setIsCorrectDate] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const dateNow = dayjs().valueOf(true);\r\n    let enteredStartDate = dayjs(`${dateStart}T${timeStart}`).valueOf(true);\r\n\t  let enteredEndDate = dayjs(`${dateEnd}T${timeEnd}`).valueOf(true);\r\n    if(dateStart !== 0 && timeStart !== 0) {\r\n      if(enteredStartDate > dateNow) {\r\n        setIsStartDate(true)\r\n      } else if (enteredStartDate < dateNow) {\r\n        setIsStartDate(false)\r\n      }\r\n    }\r\n\r\n\tif(dateStart !== 0 && timeStart !== 0 && dateEnd !==0 && timeEnd !== 0) {\r\n\t\tif(enteredEndDate > enteredStartDate) {\r\n\t\t\tsetIsCorrectDate(true)\r\n\t\t} else if (enteredEndDate < enteredStartDate) {\r\n\t\t\tsetIsCorrectDate(false)\r\n\t\t}\r\n\t}\r\n\r\n\tif(isStartDate && isCorrectDate) {\r\n\t\tsetIsCorrectDateToStore(true)\r\n\t} else {\r\n\t\tsetIsCorrectDateToStore(false)\r\n\t}\r\n    \r\n  }, [dateStart, timeStart, dateEnd, timeEnd])\r\n\r\n  \r\n\r\n  const tabs = [\r\n    {\r\n      id: 0,\r\n      label: \"Choose when this ad ends\",\r\n      content: (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div style={{ display: \"flex\", marginBottom: '20px', justifyContent: 'space-between'}} >\r\n            <DateInput onChange={(e) => {setStartDate(e); setDateStart(e)}} label=\"Start date\" invalid={isStartDate ? false : true} />\r\n            <TimeInput onChange={(e) => {setStartTime(e); setTimeStart(e)}} label=\"Start time\" invalid={isStartDate ? false : true}/>\r\n          </div>\r\n          <div style={{ display: \"flex\", justifyContent: 'space-between' }}>\r\n            <DateInput onChange={(e) => {setEndDate(e); setDateEnd(e)}} label=\"End date\" invalid={isCorrectDate ? false : true} />\r\n            <TimeInput onChange={(e) => {setEndTime(e); setTimeEnd(e)}} label=\"End time\" invalid={isCorrectDate ? false : true} />\r\n          </div>\r\n          \r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: 1,\r\n      label: \"Run this ad continuously\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"duration\">\r\n      <h2>Duration</h2>\r\n\r\n      <Tabs tabs={tabs} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isCorrectDateFromStore: state.adsOptions.isCorrectDate\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setStartDate,\r\n    setStartTime,\r\n    setEndDate,\r\n    setEndTime,\r\n\tsetIsCorrectDateToStore\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Duration);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Footer\\Footer.js",["360"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n// styles\r\nimport \"./style.scss\";\r\n\r\nconst Footer = (props) => {\r\n    const [green, setGreen] = useState(\"\");\r\n    let timezones = {};\r\n    props.country_codes_timezones.forEach(item => {\r\n        const k = Object.keys(item)[0];\r\n        timezones[k] = item[k];\r\n    })\r\n    const withTime = !props.withDate ? {\r\n        start_date: props.start_date,\r\n        start_time: props.start_time,\r\n        end_date: props.end_date,\r\n        end_time: props.end_time,\r\n    } : null\r\n    const ad = {\r\n        image: props.image,\r\n        website_url: props.website_url,\r\n        country_codes_timezones: timezones,\r\n        budget: props.budget,\r\n        ...withTime\r\n    }\r\n    useEffect(() => {\r\n        let errorArray = [];\r\n\r\n        for (const adKey in ad) {\r\n            if (!ad[adKey]) {\r\n                errorArray.push(adKey);\r\n            } else if (props.withDate) {\r\n                if (!ad.country_codes_timezones) {\r\n                    errorArray.push(\"country_codes_timezones\");\r\n                }\r\n            }\r\n        }\r\n        if (!errorArray.length) {\r\n            setGreen(\"green\");\r\n        } else {\r\n            setGreen(\"\");\r\n        }\r\n    }, [props.start_date, props.start_time, props.end_date, props.end_time, props.image, props.website_url, timezones, props.budget])\r\n    return (\r\n        <div className=\"footer\">\r\n            <button className={green} type='submit'>Promote now</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        image: state.adsOptions.image,\r\n        website_url: state.adsOptions.website_url,\r\n        country_codes_timezones: state.adsOptions.country_codes_timezones,\r\n        start_date: state.adsOptions.banner_start_date,\r\n        start_time: state.adsOptions.banner_start_time,\r\n        end_date: state.adsOptions.banner_end_date,\r\n        end_time: state.adsOptions.banner_end_time,\r\n        budget: state.adsOptions.budget,\r\n        withDate: state.adsOptions.withDate,\r\n        adErrors: state.adsOptions.errorsObj,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Audience\\Audience.js",["361"],"import React, {useEffect, useState} from \"react\";\r\nimport {countryList} from \"../../../../country/country\";\r\nimport {timeZone} from \"../../../../country/timezone\";\r\n// component\r\n// styles\r\nimport \"./styles.scss\";\r\nimport {addCountry, deleteCountryAndTimeZone} from \"../../../../redux/actions/advertising\";\r\nimport {connect} from \"react-redux\";\r\nimport closeImg from '../../../../images/close.png'\r\n\r\n\r\nconst Audience = ({addCountry, country_codes_timezones, deleteCountryAndTimeZone}) => {\r\n    const [country, setCountry] = useState(\"\");\r\n    const [zone, setZone] = useState(\"\");\r\n    const [isRedCounry, setIsRedCountry] = useState();\r\n    useEffect(() => {\r\n        if(country_codes_timezones.length === 0) {\r\n            setIsRedCountry(true)\r\n        } else {\r\n            setIsRedCountry(false)\r\n        }\r\n    }, [country_codes_timezones])\r\n    useEffect(() => {\r\n        if(country !== '' && zone !== '') {\r\n            addCountry({[country]: zone});\r\n            setCountry('');\r\n            setZone('');\r\n        }\r\n    }, [country, zone])\r\n    const writeCountry = (e) => {\r\n        setCountry(e.target.value);\r\n    }\r\n    const writeZone = (e) => {\r\n        setZone(e.target.value);\r\n    }\r\n    const addCountryTimezone = () => {\r\n        // e.preventDefault();\r\n        if (country && zone) {\r\n            addCountry({[country]: zone});\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"audience\">\r\n            <h2>Audience</h2>\r\n            <ul className='list-country-timeZone'>\r\n                {country_codes_timezones.map((item, index) => (\r\n                    <li className='list-country-timeZone__item'>\r\n                        <span className='item-list selectInput'>{Object.keys(item)}</span>\r\n                        <span className='item-list selectInput'>{Object.values(item)}</span>\r\n                        <span className='item-list-close' >\r\n                            <img src={closeImg} alt='close' onClick={() => {deleteCountryAndTimeZone(index)}}/>\r\n                        </span>\r\n                    </li>\r\n                ))}\r\n                \r\n            </ul>\r\n            <div className=\"content\">\r\n                <div className=\"block\">\r\n                    <div style={{width: \"100%\"}}>\r\n                        <label>Country</label>\r\n                        <div className=\"selectInput\" style={{borderColor: !isRedCounry ? 'white' : '#FF453A'}}>\r\n                            <select value={country} required onChange={(e) => {writeCountry(e); setIsRedCountry(false)}} >\r\n                                <option>All</option>\r\n                                {Object.keys(countryList).map((item, index) => (\r\n                                    <option key={index + 3} value={countryList[item]}>{item}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"addButton\">\r\n                        <button onClick={() => {addCountryTimezone()}}>+</button>\r\n                        <span>Add country</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <div style={{width: \"100%\"}}>\r\n                        <label>Time zone</label>\r\n                        <div className=\"selectInput\" style={{borderColor: !isRedCounry ? 'white' : '#FF453A'}}>\r\n                            <select value={zone} required onChange={(e) => {writeZone(e); setIsRedCountry(false)}}>\r\n                                <option>Choose</option>\r\n                                {timeZone.map((item, index) => (\r\n                                    <option key={index + 5} value={item}>{item}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        country_codes_timezones: state.adsOptions.country_codes_timezones\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    addCountry,\r\n    deleteCountryAndTimeZone\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Audience);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\country\\country.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\country\\timezone.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\actions\\advertising.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\ListAds.js",["362","363","364","365","366"],"import React, {useState, useEffect} from \"react\"\r\nimport \"./ads.scss\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {playClick} from \"../../redux/actions/music\";\r\nimport {getCurrentList, getDetails} from \"../../redux/actions/advertising\"\r\nimport {connect} from \"react-redux\";\r\nimport moment from 'moment';\r\nimport back from \"../../images/back.svg\";\r\nimport Wallet from \"./components/Wallet\"\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nconst ListAds = ({playClick, name, balance, currentLang, currentList, finishedList, getCurrentList, getDetails}) => {\r\n    let history = useHistory();\r\n    const LANG = currentLang === \"en\" ? EN : RU;\r\n    const [isCurrent, setIsCurrent] = useState(true);\r\n    const [totalTime, setTotalTime] = useState();\r\n\r\n    useEffect(() => {\r\n        getCurrentList();\r\n        console.log(currentList)\r\n    }, [])\r\n\r\n    const getTotalTime = (startTime, startDate, endTime, endDate) => {\r\n        const start = `${startDate} ${startTime}`;\r\n        const end = `${endDate} ${endTime}`;\r\n        return moment.utc(moment(end).diff(moment(start))).format(\"DDD:HH:mm:ss\")\r\n    }\r\n\r\n    return (\r\n        <div className='list-main-block'>\r\n            <div className='listBlock'>\r\n                <div className='round-dark listAds'>\r\n                    <span className='backbtn-title-span'>\r\n                        <img src={back} alt='back' onClick={() => history.push('/game')} className='backbtn-title-span__btn'/>\r\n                        <h2 className='backbtn-title-span__title'>{LANG.Ads.MyAds.title}</h2>\r\n                    </span>\r\n                    \r\n                    <div className='images-switch'>\r\n                        <span onClick={() => {\r\n                            setIsCurrent(true)\r\n                        }}\r\n                            className={!isCurrent ? 'images-switch__item' : 'images-switch__item active'}>{LANG.Ads.MyAds.current}</span>\r\n                        <span onClick={() => {\r\n                            setIsCurrent(false)\r\n                        }}\r\n                            className={isCurrent ? 'images-switch__item' : 'images-switch__item active'}>{LANG.Ads.MyAds.finished}</span>\r\n                    </div>\r\n                    <ul className='images-list'>\r\n                        {isCurrent ?\r\n                            currentList.length\r\n                            ? currentList.map((item, index) => (\r\n                                <li key={index * 2} className='images-list__item' onClick={() => {\r\n                                    getDetails(item);\r\n                                    history.push('/myad')\r\n                                }}>\r\n                                    <ul className='ad-detail-list'>\r\n                                        <li className='ad-detail-list__item ad-detail-list__img'>\r\n                                            <img src={item.image} alt='image' width='259' height='245'/>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item ad-detail-list__url'>{item.website_url}</li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>{Object.keys(item.country_timezone)[0]}</span>\r\n                                            <span>UTC {item.country_timezone[`${Object.keys(item.country_timezone)[0]}`]}</span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Started</span>\r\n                                            <span>{item.start_date}</span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Finished</span>\r\n                                            <span>{item.end_date}</span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Totel time</span>\r\n                                            <span>{getTotalTime(item.start_time, item.start_date, item.end_time, item.end_date)}</span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Displays</span>\r\n                                            <span>{item.displays}</span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Clicks</span>\r\n                                            <span>{item.clicks}</span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Budget</span>\r\n                                            <span>\r\n                                                {item.budget}\r\n                                                <span className='item-dollar'>&#36;</span>\r\n                                            </span>\r\n                                        </li>\r\n                                    </ul>\r\n                                    {/* <span className='item__title item__url'>{item.website_url || \"mysite.com\"}</span>\r\n                                    <span className='item__date'>{item.end_date}</span> */}\r\n                                </li>\r\n                            )) : <h2 className='images-list__not-images'>{LANG.Ads.MyAds.notAds}</h2>\r\n                            :\r\n                            finishedList.length\r\n                                ? finishedList.map((item, index) => (\r\n                                    <li key={index * 2} className='images-list__item' onClick={() => {\r\n                                        getDetails(item);\r\n                                        history.push('/myad')\r\n                                    }}>\r\n                                        <ul className='ad-detail-list'>\r\n                                        <li className='ad-detail-list__item ad-detail-list__img'>\r\n                                            <img src={item.image} alt='image' width='259' height='245'/>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item ad-detail-list__url'>{item.website_url}</li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>{Object.keys(item.country_timezone)[0]}</span>\r\n                                            <span>UTC {item.country_timezone[`${Object.keys(item.country_timezone)[0]}`]}</span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Started</span>\r\n                                            <span>{item.start_date}</span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Finished</span>\r\n                                            <span>{item.end_date}</span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Totel time</span>\r\n                                            <span></span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Displays</span>\r\n                                            <span>{item.displays}</span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Clicks</span>\r\n                                            <span>{item.clicks}</span>\r\n                                        </li>\r\n                                        <li className='ad-detail-list__item'>\r\n                                            <span className='item-title'>Budget</span>\r\n                                            <span>\r\n                                                {item.budget}\r\n                                                <span className='item-dollar'>&#36;</span>\r\n                                            </span>\r\n                                        </li>\r\n                                    </ul>\r\n                                        {/* <span className='item__title item__url'>{item.website_url || \"mysite.com\"}</span>\r\n\r\n                                        <span className='item__date'>{item.end_date}</span> */}\r\n                                    </li>\r\n                                )) : <h2 className='images-list__not-images'>{LANG.Ads.MyAds.notAds}</h2>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <Wallet input={false}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentLang: state.switchOptions.lang,\r\n        balance: state.balanceReducer.balance,\r\n        name: state.balanceReducer.name,\r\n        currentList: state.adsOptions.currentList,\r\n        finishedList: state.adsOptions.finishedList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    playClick,\r\n    getCurrentList,\r\n    getDetails\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListAds)\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\components\\Wallet.js",["367"],"import React, {useEffect} from 'react'\r\nimport '../ads.scss'\r\nimport {Link} from 'react-router-dom';\r\nimport deposit from '../../../images/deposit.svg';\r\nimport {playClick} from \"../../../redux/actions/music\";\r\nimport {connect} from 'react-redux';\r\nimport {changeDemo} from \"../../../redux/actions/game\";\r\n\r\nconst Wallet = ({name, balance, playClick, input, isDemo, changeDemo}) => {\r\n    useEffect(() => {\r\n        if (isDemo) {\r\n            changeDemo();\r\n        }\r\n    }, [])\r\n    return (\r\n\r\n        <div className={!input ? 'round-dark wallet' : 'round-dark wallet top'}>\r\n            <div className='wallet__title'>My wallet</div>\r\n            <div className='wallet__name-title'>Name</div>\r\n            <div className='wallet__name'>{name}</div>\r\n            <div className='wallet__balance-title'>Balance</div>\r\n            <div className='wallet__balance'>{balance} &#8383;</div>\r\n            <Link to=\"/refill\" className=\"wallet__deposit btn up\" onClick={playClick}>Deposit\r\n                <img className='deposit' src={deposit} alt=\"deposit\"/>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        balance: state.balanceReducer.balance,\r\n        name: state.balanceReducer.name,\r\n        isDemo: state.balanceReducer.isDemo,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    playClick,\r\n    changeDemo\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet)\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Ads\\MyAd.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\components\\Promo\\Promo.js",["368","369","370","371"],"import React, {useState, useEffect} from 'react';\r\nimport Wallet from \"../Ads/components/Wallet\";\r\nimport back from \"../../images/back.svg\";\r\nimport {playClick} from \"../../redux/actions/music\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\nimport {User} from \"../../api/User\";\r\nimport './Promo.scss';\r\nimport {getPromoList} from \"../../redux/actions/advertising\";\r\n\r\nconst Promo = ({history, playClick, currentLang, getPromoList, promoList}) => {\r\n    const LANG = currentLang === \"en\" ? EN : RU;\r\n    const reducer = (accumulator, currentValue) => accumulator.earning + currentValue.earning;\r\n    const data = [\r\n        {\r\n            \"name\": \"Vadym Netrebko\",\r\n            \"totalTime\": \"10:20:13\",\r\n            \"deposited\": 0.02,\r\n            \"wathdrawed\": 0,\r\n            \"bets\": 0.02,\r\n            \"earning\": 0.00059999999999999995\r\n        },\r\n        {\r\n            \"name\": \"Vasya Pupkin\",\r\n            \"totalTime\": \"10:20:13\",\r\n            \"deposited\": 0.02,\r\n            \"wathdrawed\": 0,\r\n            \"bets\": 0.02,\r\n            \"earning\": 0.00059999999999999995\r\n        }\r\n    ]\r\n    console.log()\r\n    useEffect(()=> {\r\n        User.promoList().then(res=>{\r\n            getPromoList(res.data.data);\r\n            // getPromoList(data);\r\n        }).catch(e => console.log(e.data));\r\n    }, [])\r\n    return (\r\n        <div className=\"wrap-promo\">\r\n            <div className=\"row main promo\">\r\n                <div className=\"left-sector\">\r\n                             <span onClick={() => {\r\n                                 history.goBack();\r\n                                 playClick()\r\n                             }} className=\"back\"><img src={back} alt=\"back\"/></span>\r\n                    <div className=\"round-dark\">\r\n                        <h2>Promo</h2>\r\n                        <table>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Player</th>\r\n                                <th>Total time</th>\r\n                                <th>Deposited</th>\r\n                                <th>Withdrawed</th>\r\n                                <th>Total bets</th>\r\n                                <th>Your bonus</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {promoList.map((item, index) => (\r\n                                <tr key={index * 1.1}>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.totalTime}</td>\r\n                                    <td>{item.deposited} $</td>\r\n                                    <td>{item.wathdrawed} $</td>\r\n                                    <td>{item.bets} $</td>\r\n                                    <td>{item.earning} $</td>\r\n                                </tr>\r\n                            ))}\r\n\r\n                            <tr className=\"hr\">\r\n                                <td/>\r\n                                <td/>\r\n                                <td/>\r\n                                <td/>\r\n                                <td style={{opacity: \".5\"}}>Total bonus</td>\r\n                                <td>{promoList.reduce((a, b) => a + b.earning, 0)} $</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <Link to='/support' className={currentLang + \" support-link\"}\r\n                              onClick={playClick}>{LANG.support}</Link>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-sector\"><Wallet input={true}/></div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentLang: state.switchOptions.lang,\r\n        promoList: state.adsOptions.promoList\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    playClick,\r\n    getPromoList\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Promo);\r\n","C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\ad_errors_input.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\reducers\\changeAd.js",[],"C:\\Users\\PC-002\\WebstormProjects\\bitcybets\\src\\redux\\actions\\changeAd.js",[],{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":76,"column":33,"nodeType":"378","messageId":"379","endLine":76,"endColumn":49},{"ruleId":"380","severity":1,"message":"381","line":22,"column":39,"nodeType":"382","endLine":22,"endColumn":41,"suggestions":"383"},{"ruleId":"380","severity":1,"message":"384","line":70,"column":8,"nodeType":"382","endLine":70,"endColumn":27,"suggestions":"385"},{"ruleId":"386","severity":1,"message":"387","line":79,"column":29,"nodeType":"388","endLine":79,"endColumn":137},{"ruleId":"389","severity":1,"message":"390","line":107,"column":33,"nodeType":"388","endLine":112,"endColumn":61},{"ruleId":"380","severity":1,"message":"391","line":46,"column":8,"nodeType":"382","endLine":46,"endColumn":21,"suggestions":"392"},{"ruleId":"380","severity":1,"message":"393","line":70,"column":8,"nodeType":"382","endLine":70,"endColumn":23,"suggestions":"394"},{"ruleId":"395","severity":1,"message":"396","line":1,"column":26,"nodeType":"397","messageId":"398","endLine":1,"endColumn":35},{"ruleId":"395","severity":1,"message":"399","line":4,"column":25,"nodeType":"397","messageId":"398","endLine":4,"endColumn":36},{"ruleId":"395","severity":1,"message":"400","line":18,"column":12,"nodeType":"397","messageId":"398","endLine":18,"endColumn":18},{"ruleId":"395","severity":1,"message":"401","line":18,"column":20,"nodeType":"397","messageId":"398","endLine":18,"endColumn":29},{"ruleId":"395","severity":1,"message":"402","line":19,"column":12,"nodeType":"397","messageId":"398","endLine":19,"endColumn":22},{"ruleId":"395","severity":1,"message":"403","line":19,"column":24,"nodeType":"397","messageId":"398","endLine":19,"endColumn":37},{"ruleId":"380","severity":1,"message":"404","line":11,"column":11,"nodeType":"405","endLine":13,"endColumn":6},{"ruleId":"380","severity":1,"message":"406","line":21,"column":8,"nodeType":"382","endLine":21,"endColumn":36,"suggestions":"407"},{"ruleId":"380","severity":1,"message":"408","line":84,"column":8,"nodeType":"382","endLine":84,"endColumn":21,"suggestions":"409"},{"ruleId":"380","severity":1,"message":"410","line":99,"column":8,"nodeType":"382","endLine":99,"endColumn":37,"suggestions":"411"},{"ruleId":"380","severity":1,"message":"412","line":108,"column":8,"nodeType":"382","endLine":108,"endColumn":18,"suggestions":"413"},{"ruleId":"380","severity":1,"message":"414","line":117,"column":8,"nodeType":"382","endLine":117,"endColumn":24,"suggestions":"415"},{"ruleId":"372","replacedBy":"416"},{"ruleId":"374","replacedBy":"417"},{"ruleId":"380","severity":1,"message":"418","line":8,"column":7,"nodeType":"382","endLine":8,"endColumn":12,"suggestions":"419"},{"ruleId":"395","severity":1,"message":"420","line":1,"column":14,"nodeType":"397","messageId":"398","endLine":1,"endColumn":17},{"ruleId":"395","severity":1,"message":"421","line":15,"column":45,"nodeType":"397","messageId":"398","endLine":15,"endColumn":53},{"ruleId":"395","severity":1,"message":"422","line":5,"column":8,"nodeType":"397","messageId":"398","endLine":5,"endColumn":24},{"ruleId":"386","severity":1,"message":"387","line":37,"column":26,"nodeType":"388","endLine":37,"endColumn":79},{"ruleId":"386","severity":1,"message":"387","line":38,"column":30,"nodeType":"388","endLine":38,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":40,"column":15,"nodeType":"388","endLine":40,"endColumn":60},{"ruleId":"395","severity":1,"message":"423","line":25,"column":12,"nodeType":"397","messageId":"398","endLine":25,"endColumn":16},{"ruleId":"395","severity":1,"message":"424","line":25,"column":18,"nodeType":"397","messageId":"398","endLine":25,"endColumn":25},{"ruleId":"376","severity":1,"message":"377","line":138,"column":33,"nodeType":"378","messageId":"379","endLine":138,"endColumn":49},{"ruleId":"425","severity":1,"message":"426","line":3,"column":1,"nodeType":"427","endLine":13,"endColumn":3},{"ruleId":"380","severity":1,"message":"428","line":44,"column":6,"nodeType":"382","endLine":44,"endColumn":46,"suggestions":"429"},{"ruleId":"380","severity":1,"message":"430","line":41,"column":8,"nodeType":"382","endLine":41,"endColumn":133,"suggestions":"431"},{"ruleId":"380","severity":1,"message":"432","line":29,"column":8,"nodeType":"382","endLine":29,"endColumn":23,"suggestions":"433"},{"ruleId":"395","severity":1,"message":"434","line":17,"column":12,"nodeType":"397","messageId":"398","endLine":17,"endColumn":21},{"ruleId":"395","severity":1,"message":"435","line":17,"column":23,"nodeType":"397","messageId":"398","endLine":17,"endColumn":35},{"ruleId":"380","severity":1,"message":"436","line":22,"column":8,"nodeType":"382","endLine":22,"endColumn":10,"suggestions":"437"},{"ruleId":"438","severity":1,"message":"439","line":66,"column":45,"nodeType":"388","endLine":66,"endColumn":105},{"ruleId":"438","severity":1,"message":"439","line":114,"column":45,"nodeType":"388","endLine":114,"endColumn":105},{"ruleId":"380","severity":1,"message":"440","line":14,"column":8,"nodeType":"382","endLine":14,"endColumn":10,"suggestions":"441"},{"ruleId":"395","severity":1,"message":"442","line":1,"column":16,"nodeType":"397","messageId":"398","endLine":1,"endColumn":24},{"ruleId":"395","severity":1,"message":"443","line":15,"column":11,"nodeType":"397","messageId":"398","endLine":15,"endColumn":18},{"ruleId":"395","severity":1,"message":"444","line":16,"column":11,"nodeType":"397","messageId":"398","endLine":16,"endColumn":15},{"ruleId":"380","severity":1,"message":"445","line":40,"column":8,"nodeType":"382","endLine":40,"endColumn":10,"suggestions":"446"},"no-native-reassign",["447"],"no-negated-in-lhs",["448"],"no-control-regex","Unexpected control character(s) in regular expression: \\x00.","Literal","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'switchView'. Either include it or remove the dependency array. If 'switchView' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["449"],"React Hook useEffect has a missing dependency: 'prohibition'. Either include it or remove the dependency array. If 'prohibition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["450"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'start'. Either include it or remove the dependency array.",["451"],"React Hook useEffect has missing dependencies: 'bet', 'course', 'lastSeconds', 'playYouWon', and 'start'. Either include them or remove the dependency array. If 'playYouWon' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["452"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setAdErrors' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'successBtn' is assigned a value but never used.","'setSuccessBtn' is assigned a value but never used.","The 'muted' function makes the dependencies of useEffect Hook (at line 25) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'muted' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'stop'. Either include it or remove the dependency array. If 'stop' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["453"],"React Hook useEffect has missing dependencies: 'gameStart', 'predictSubmit', and 'startGame'. Either include them or remove the dependency array.",["454"],"React Hook useEffect has missing dependencies: 'playBetTimer', 'playGameTimer', 'playTimer', 'playTimer2', 'stopBetTimer', and 'stopGameTimer'. Either include them or remove the dependency array. If 'stopBetTimer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["455"],"React Hook useEffect has missing dependencies: 'closeYourLose' and 'you_lose'. Either include them or remove the dependency array. If 'you_lose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["456"],"React Hook useEffect has missing dependencies: 'closeCongratulation' and 'playYouWon'. Either include them or remove the dependency array. If 'playYouWon' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["457"],["447"],["448"],"React Hook useEffect has a missing dependency: 'geoposition'. Either include it or remove the dependency array. If 'geoposition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["458"],"'Dev' is defined but never used.","'ERROR_AD' is defined but never used.","'imgClickOnWallet' is defined but never used.","'cost' is assigned a value but never used.","'setCost' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'isCorrectDate', 'isStartDate', and 'setIsCorrectDateToStore'. Either include them or remove the dependency array. If 'setIsCorrectDateToStore' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["459"],"React Hook useEffect has missing dependencies: 'ad' and 'props.withDate'. Either include them or remove the dependency array.",["460"],"React Hook useEffect has a missing dependency: 'addCountry'. Either include it or remove the dependency array. If 'addCountry' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["461"],"'totalTime' is assigned a value but never used.","'setTotalTime' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentList' and 'getCurrentList'. Either include them or remove the dependency array. If 'getCurrentList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["462"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'changeDemo' and 'isDemo'. Either include them or remove the dependency array. If 'changeDemo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["463"],"'useState' is defined but never used.","'reducer' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPromoList'. Either include it or remove the dependency array. If 'getPromoList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["464"],"no-global-assign","no-unsafe-negation",{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},"Update the dependencies array to be: [switchView]",{"range":"497","text":"498"},"Update the dependencies array to be: [location.pathname, prohibition]",{"range":"499","text":"500"},"Update the dependencies array to be: [lastSeconds, start]",{"range":"501","text":"502"},"Update the dependencies array to be: [bet, course, currentCourse, lastSeconds, playYouWon, start]",{"range":"503","text":"504"},"Update the dependencies array to be: [param.id, play, handlePlay, stop]",{"range":"505","text":"506"},"Update the dependencies array to be: [gameStart, lastSeconds, predictSubmit, startGame]",{"range":"507","text":"508"},"Update the dependencies array to be: [startGame, timeBet, predict, stopBetTimer, playGameTimer, playTimer, stopGameTimer, playBetTimer, playTimer2]",{"range":"509","text":"510"},"Update the dependencies array to be: [closeYourLose, you_lose, yourlose]",{"range":"511","text":"512"},"Update the dependencies array to be: [closeCongratulation, congratulation, playYouWon]",{"range":"513","text":"514"},"Update the dependencies array to be: [geo, geoposition]",{"range":"515","text":"516"},"Update the dependencies array to be: [dateStart, timeStart, dateEnd, timeEnd, isStartDate, isCorrectDate, setIsCorrectDateToStore]",{"range":"517","text":"518"},"Update the dependencies array to be: [props.start_date, props.start_time, props.end_date, props.end_time, props.image, props.website_url, timezones, props.budget, ad, props.withDate]",{"range":"519","text":"520"},"Update the dependencies array to be: [addCountry, country, zone]",{"range":"521","text":"522"},"Update the dependencies array to be: [currentList, getCurrentList]",{"range":"523","text":"524"},"Update the dependencies array to be: [changeDemo, isDemo]",{"range":"525","text":"526"},"Update the dependencies array to be: [getPromoList]",{"range":"527","text":"528"},[1161,1163],"[switchView]",[2571,2590],"[location.pathname, prohibition]",[1631,1644],"[lastSeconds, start]",[2523,2538],"[bet, course, currentCourse, lastSeconds, playYouWon, start]",[707,735],"[param.id, play, handlePlay, stop]",[2810,2823],"[gameStart, lastSeconds, predictSubmit, startGame]",[3200,3229],"[startGame, timeBet, predict, stopBetTimer, playGameTimer, playTimer, stopGameTimer, playBetTimer, playTimer2]",[3422,3432],"[closeYourLose, you_lose, yourlose]",[3639,3655],"[closeCongratulation, congratulation, playYouWon]",[233,238],"[geo, geoposition]",[1605,1645],"[dateStart, timeStart, dateEnd, timeEnd, isStartDate, isCorrectDate, setIsCorrectDateToStore]",[1207,1332],"[props.start_date, props.start_time, props.end_date, props.end_time, props.image, props.website_url, timezones, props.budget, ad, props.withDate]",[1035,1050],"[addCountry, country, zone]",[884,886],"[currentList, getCurrentList]",[476,478],"[changeDemo, isDemo]",[1413,1415],"[getPromoList]"]

