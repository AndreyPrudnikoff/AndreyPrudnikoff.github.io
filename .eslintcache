
[{"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\index.js":"1","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\App.js":"2","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\reportWebVitals.js":"3","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\store.js":"4","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\gotodesktop.js":"5","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\restore.js":"6","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Support.js":"7","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Reset.js":"8","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Btc.js":"9","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Auth.js":"10","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Refill.js":"11","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Header\\Header.js":"12","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompletePay.js":"13","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Start\\Start.js":"14","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Usd.js":"15","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Invite.js":"16","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Withdraw.js":"17","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompleteWith.js":"18","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\Ads.js":"19","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Playlist.js":"20","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Main.js":"21","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\index.js":"22","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\index.js":"23","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\music.js":"24","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Preloader.js":"25","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Graph.js":"26","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Time.js":"27","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rect\\Rect.js":"28","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\game.js":"29","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\User.js":"30","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\ru.js":"31","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\en.js":"32","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Online.js":"33","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rates.js":"34","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\RightSector.js":"35","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\fireworks.js":"36","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Dashboard.js":"37","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\types.js":"38","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Sound.js":"39","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\game.js":"40","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\sound.js":"41","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\entry.js":"42","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\Api.js":"43","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Timer.js":"44","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Presentation.js":"45","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step1.js":"46","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step3.js":"47","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step5.js":"48","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step4.js":"49","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step2.js":"50","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\index.js":"51","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\index.js":"52","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\ImagePreview.js":"53","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\Tabs.js":"54","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\FormInput.js":"55","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\index.js":"56","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\index.js":"57","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\index.js":"58","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\useImagePreview.js":"59","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\Duration.js":"60","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\Audience.js":"61","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\Footer.js":"62","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\privacy.en.js":"63","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\privacy.ru.js":"64","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\advertising.js":"65","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\ListAds.js":"66","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Wallet.js":"67","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\country\\country.js":"68","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\country\\timezone.js":"69","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\advertising.js":"70","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\MyAd.js":"71","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Promo\\Promo.js":"72"},{"size":591,"mtime":1614091503470,"results":"73","hashOfConfig":"74"},{"size":5570,"mtime":1615203196006,"results":"75","hashOfConfig":"74"},{"size":375,"mtime":1614091503473,"results":"76","hashOfConfig":"74"},{"size":213,"mtime":1614091503473,"results":"77","hashOfConfig":"74"},{"size":703,"mtime":1614077203770,"results":"78","hashOfConfig":"74"},{"size":3887,"mtime":1614675032845,"results":"79","hashOfConfig":"74"},{"size":1878,"mtime":1614853034024,"results":"80","hashOfConfig":"74"},{"size":4643,"mtime":1614267107952,"results":"81","hashOfConfig":"74"},{"size":7009,"mtime":1614788106671,"results":"82","hashOfConfig":"74"},{"size":15884,"mtime":1614869800167,"results":"83","hashOfConfig":"74"},{"size":5161,"mtime":1614949957708,"results":"84","hashOfConfig":"74"},{"size":13916,"mtime":1615295334965,"results":"85","hashOfConfig":"74"},{"size":1440,"mtime":1614266243057,"results":"86","hashOfConfig":"74"},{"size":8949,"mtime":1615200351086,"results":"87","hashOfConfig":"74"},{"size":4384,"mtime":1614266025599,"results":"88","hashOfConfig":"74"},{"size":3532,"mtime":1614265690058,"results":"89","hashOfConfig":"74"},{"size":3638,"mtime":1614266122072,"results":"90","hashOfConfig":"74"},{"size":1581,"mtime":1614266391240,"results":"91","hashOfConfig":"74"},{"size":3427,"mtime":1615287812625,"results":"92","hashOfConfig":"74"},{"size":2345,"mtime":1614949957714,"results":"93","hashOfConfig":"74"},{"size":4663,"mtime":1615195083383,"results":"94","hashOfConfig":"74"},{"size":2275,"mtime":1615195083385,"results":"95","hashOfConfig":"74"},{"size":427,"mtime":1614702894606,"results":"96","hashOfConfig":"74"},{"size":1805,"mtime":1614684182451,"results":"97","hashOfConfig":"74"},{"size":964,"mtime":1614091503410,"results":"98","hashOfConfig":"74"},{"size":10579,"mtime":1614675032846,"results":"99","hashOfConfig":"74"},{"size":973,"mtime":1614610450750,"results":"100","hashOfConfig":"74"},{"size":232,"mtime":1614091503410,"results":"101","hashOfConfig":"74"},{"size":2184,"mtime":1614091503471,"results":"102","hashOfConfig":"74"},{"size":2071,"mtime":1615211469441,"results":"103","hashOfConfig":"74"},{"size":13931,"mtime":1614869800170,"results":"104","hashOfConfig":"74"},{"size":11211,"mtime":1615199874175,"results":"105","hashOfConfig":"74"},{"size":2659,"mtime":1614251434317,"results":"106","hashOfConfig":"74"},{"size":4076,"mtime":1614610450749,"results":"107","hashOfConfig":"74"},{"size":7381,"mtime":1615195083383,"results":"108","hashOfConfig":"74"},{"size":9768,"mtime":1614091503416,"results":"109","hashOfConfig":"74"},{"size":19030,"mtime":1615195083382,"results":"110","hashOfConfig":"74"},{"size":2795,"mtime":1615211469463,"results":"111","hashOfConfig":"74"},{"size":1266,"mtime":1614610450805,"results":"112","hashOfConfig":"74"},{"size":3925,"mtime":1615211469461,"results":"113","hashOfConfig":"74"},{"size":2223,"mtime":1614684241351,"results":"114","hashOfConfig":"74"},{"size":2836,"mtime":1615195083394,"results":"115","hashOfConfig":"74"},{"size":342,"mtime":1614949957703,"results":"116","hashOfConfig":"74"},{"size":1720,"mtime":1614269502354,"results":"117","hashOfConfig":"74"},{"size":904,"mtime":1614593700515,"results":"118","hashOfConfig":"74"},{"size":4032,"mtime":1615197077208,"results":"119","hashOfConfig":"74"},{"size":2768,"mtime":1615197940763,"results":"120","hashOfConfig":"74"},{"size":2774,"mtime":1615198867595,"results":"121","hashOfConfig":"74"},{"size":5096,"mtime":1615200015198,"results":"122","hashOfConfig":"74"},{"size":2857,"mtime":1615200060140,"results":"123","hashOfConfig":"74"},{"size":208,"mtime":1614788106669,"results":"124","hashOfConfig":"74"},{"size":73,"mtime":1614789260782,"results":"125","hashOfConfig":"74"},{"size":2295,"mtime":1615287995607,"results":"126","hashOfConfig":"74"},{"size":3260,"mtime":1615293236220,"results":"127","hashOfConfig":"74"},{"size":5087,"mtime":1615292752093,"results":"128","hashOfConfig":"74"},{"size":39,"mtime":1614330813166,"results":"129","hashOfConfig":"74"},{"size":39,"mtime":1614330813163,"results":"130","hashOfConfig":"74"},{"size":37,"mtime":1614330813168,"results":"131","hashOfConfig":"74"},{"size":272,"mtime":1614330813184,"results":"132","hashOfConfig":"74"},{"size":3315,"mtime":1615202907906,"results":"133","hashOfConfig":"74"},{"size":4356,"mtime":1615291459814,"results":"134","hashOfConfig":"74"},{"size":682,"mtime":1614963307566,"results":"135","hashOfConfig":"74"},{"size":4742,"mtime":1614610450801,"results":"136","hashOfConfig":"74"},{"size":4742,"mtime":1614610450802,"results":"137","hashOfConfig":"74"},{"size":2628,"mtime":1615282343748,"results":"138","hashOfConfig":"74"},{"size":4084,"mtime":1615295310805,"results":"139","hashOfConfig":"74"},{"size":1439,"mtime":1614942328835,"results":"140","hashOfConfig":"74"},{"size":6396,"mtime":1614788106677,"results":"141","hashOfConfig":"74"},{"size":310,"mtime":1614869800169,"results":"142","hashOfConfig":"74"},{"size":2565,"mtime":1615211469458,"results":"143","hashOfConfig":"74"},{"size":6091,"mtime":1615295288768,"results":"144","hashOfConfig":"74"},{"size":4102,"mtime":1615293323315,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"s56myd",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"148"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"148"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"148"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"148"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"148"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"148"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"148"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"148"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"148"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\index.js",[],["303","304"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\App.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\reportWebVitals.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\store.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\gotodesktop.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\restore.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Support.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Reset.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Btc.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Auth.js",["305","306"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport './auth.scss';\r\nimport arrow_btn from \"../../images/arrow-btn.png\";\r\nimport {authorization, betWin, registration, switchStep} from \"../../redux/actions\";\r\nimport {User} from \"../../api/User\";\r\nimport {fireworks, muteToggle, playClick} from \"../../redux/actions/music\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nconst Auth = ({\r\n                  reg,\r\n                  authorization,\r\n                  registration,\r\n                  muteToggle,\r\n                  mute,\r\n                  betWin,\r\n                  fireworks,\r\n                  history,\r\n                  widthMode,\r\n                  currentLang,\r\n                  playClick,\r\n                  switchStep\r\n              }) => {\r\n    const [password, setPassword] = useState(true)\r\n    const [passwordConfirm, setPasswordConfirm] = useState(true)\r\n    const [name, setName] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [confpass, setConfpass] = useState('')\r\n    const [promocode, setPromocode] = useState('')\r\n    const [code, setCode] = useState('')\r\n    const [enterCode, setEnterCode] = useState(false)\r\n    const [err, setErr] = useState('')\r\n    const [privacy, setPrivacy] = useState(false)\r\n    const [country, setCountry] = useState(\"US\")\r\n\r\n    const LANG = currentLang === \"en\" ? EN : RU\r\n\r\n    const phoneRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        fetch('https://extreme-ip-lookup.com/json/')\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                setCountry(response.countryCode);\r\n            })\r\n            .catch((data, status) => {\r\n                console.log('Request failed:', data);\r\n            });\r\n    }, [])\r\n    const moveCaretToEnd = () => {\r\n        if (phoneRef.createTextRange) {\r\n            const r = phoneRef.createTextRange();\r\n            r.collapse(false);\r\n            r.select();\r\n        }\r\n    }\r\n    const clearData = () => {\r\n        setName('');\r\n        setPhone('');\r\n        setEmail('');\r\n        setPass('');\r\n        setConfpass('');\r\n        setErr('');\r\n        setCode('');\r\n        setEnterCode(false);\r\n    }\r\n    const setPhoneNumber = (value) => {\r\n        setPhone(value);\r\n    }\r\n\r\n    const checkForLatin = event => {\r\n        let val = event.replace(/[^\\x00-\\x7F]/ig, '');\r\n        setName(val);\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const body = JSON.stringify({name, phone, email, pass, confpass, promocode});\r\n        if (confpass.length < 8 || confpass.length < 8) {\r\n            setErr('Password length must be 8 characters')\r\n        } else {\r\n            User.register(body)\r\n                .then(data => {\r\n                    if (data.data.status === \"success\") {\r\n                        setEnterCode(true);\r\n                    } else {\r\n                        if (data.data.error) {\r\n                            setErr(data.data.data);\r\n                        } else return false;\r\n                    }\r\n                })\r\n                .catch(error => setErr(error.response.data.data))\r\n        }\r\n    }\r\n    const codeSubmit = (e) => {\r\n        e.preventDefault();\r\n        User.code({code: code})\r\n            .then(res => {\r\n                if (res.data.status === \"success\") {\r\n                    sessionStorage.setItem('token', res.data.data.accessToken);\r\n                    authorization();\r\n                    if(res.data.newUser) {\r\n                        console.log(res.data.newUser)\r\n                        switchStep(1);\r\n                    }\r\n                } else {\r\n                    if (res.data.error) {\r\n                        setErr(res.data.error);\r\n                    } else return false;\r\n                }\r\n            })\r\n            .catch(error => setErr(error.response.data.error))\r\n    }\r\n\r\n    const handleLogin = event => {\r\n        event.preventDefault();\r\n        const body = JSON.stringify({phone, pass});\r\n\r\n        User.login(body)\r\n            .then(res => res)\r\n            .then(data => {\r\n                    if (data.data.status === \"success\") {\r\n                        sessionStorage.setItem('token', data.data.data.accessToken);\r\n                        history.push('/game');\r\n                        if (!mute) {\r\n                            muteToggle()\r\n                        }\r\n                        return authorization();\r\n                    } else if (data.data.error) {\r\n                        return setErr(data.data.error);\r\n                    } else {\r\n                        return setErr('error, try again later')\r\n                    }\r\n                }\r\n            )\r\n            .catch(error => setErr(error.response.data.error));\r\n\r\n    }\r\n    if (reg) {\r\n\r\n        if (enterCode) {\r\n            return (\r\n                <div className=\"round-dark auth\">\r\n                         <span onClick={() => {\r\n                             setEnterCode(false);\r\n                             clearData();\r\n                             playClick()\r\n                         }} className=\"back\">&larr;</span>\r\n                    <h2>Enter code</h2>\r\n                    <form onSubmit={e => codeSubmit(e)}>\r\n                        <div className=\"\">\r\n                            <input value={code} onInput={e => setCode(e.target.value)} id=\"code\" name=\"code\" type=\"text\"\r\n                                   required/>\r\n                        </div>\r\n                        <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                        <button type=\"submit\" onClick={playClick}>SEND</button>\r\n                    </form>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                privacy\r\n                    ? <div style={{display: privacy ? \"block\" : \"none\"}} className=\"round-dark auth privacy-block\">\r\n                        <span onClick={() => {\r\n                            playClick();\r\n                            setPrivacy(false);\r\n                        }} className=\"back\">\r\n                        &larr;\r\n                        </span>\r\n                        <p>\r\n                            <h2>{LANG.Auth.Register.privacy}</h2>\r\n                            {LANG.Auth.Register.text}\r\n                        </p>\r\n                    </div>\r\n                    : <div className=\"round-dark auth\">\r\n\r\n                    <span onClick={() => {\r\n                        registration();\r\n                        clearData();\r\n                        playClick()\r\n                    }} className=\"back\">&larr;</span>\r\n                        <h2 className={currentLang}>{LANG.Auth.Register.title}</h2>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"\">\r\n                                <label className={currentLang} htmlFor=\"name\">{LANG.Auth.Register.nameTitle}</label>\r\n                                <input onChange={e => {\r\n                                    checkForLatin(e.target.value);\r\n                                    // setName(e.target.value);\r\n                                    setErr('');\r\n                                }} value={name}\r\n                                       placeholder={LANG.Auth.Register.name}\r\n                                       id=\"name\" name=\"name\" type=\"text\" required/>\r\n                            </div>\r\n                            <div className=\"\">\r\n                                <label className={currentLang} htmlFor=\"phone\">{LANG.Auth.Register.phoneTitle}</label>\r\n                                <PhoneInput onChange={e => {\r\n                                    setErr('');\r\n                                    setPhoneNumber(e);\r\n                                    moveCaretToEnd();\r\n                                }} id=\"phone\" ref={phoneRef} limitMaxLength={true} placeholder={LANG.Auth.Register.phone}\r\n                                            value={phone} international\r\n                                            defaultCountry={country}\r\n                                            displayInitialValueAsLocalNumber required/>\r\n                            </div>\r\n                            <div className=\"\">\r\n                                <label className={currentLang} htmlFor=\"email\">{LANG.Auth.Register.emailTitle}</label>\r\n                                <input onChange={e => {\r\n                                    setEmail(e.target.value);\r\n                                    setErr('');\r\n                                }}\r\n                                       value={email}\r\n                                       placeholder={LANG.Auth.Register.email}\r\n                                       id=\"email\" name=\"email\" type=\"email\" required/>\r\n                            </div>\r\n                            <div className={password ? 'pass' : 'text'}>\r\n                            <span onClick={() => {\r\n                                setPassword(!password);\r\n                                playClick()\r\n                            }} className=\"eye\"/>\r\n                                <label className={currentLang} htmlFor=\"password\">{LANG.Auth.Register.password}</label>\r\n                                <input min='8' onChange={e => {\r\n                                    setPass(e.target.value);\r\n                                    setErr('');\r\n                                }}\r\n                                       value={pass}\r\n                                       id=\"password\" name=\"password\" type={password ? 'password' : 'text'} required/>\r\n                            </div>\r\n                            <div className={passwordConfirm ? 'pass' : 'text'}>\r\n                            <span onClick={() => {\r\n                                setPasswordConfirm(!passwordConfirm);\r\n                                playClick()\r\n                            }} className=\"eye\"/>\r\n                                <label className={currentLang}\r\n                                       htmlFor=\"passwordConfirm\">{LANG.Auth.Register.passwordRepeat}</label>\r\n                                <input min='8' onChange={e => {\r\n                                    setConfpass(e.target.value);\r\n                                    setErr('');\r\n                                }}\r\n                                       value={confpass}\r\n                                       id=\"passwordConfirm\" name=\"passwordConfirm\"\r\n                                       type={passwordConfirm ? 'password' : 'text'}\r\n                                       required/>\r\n                            </div>\r\n                            <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n\r\n                            <div className='text'>\r\n                                <label className={currentLang}\r\n                                       htmlFor=\"promo\">{LANG.Auth.Register.promo}</label>\r\n\r\n                                <input onChange={(e) => {\r\n                                    setPromocode(e.target.value);\r\n                                    setErr('');\r\n                                }} value={promocode} id=\"promo\" name=\"promo\" type=\"text\"/>\r\n                            </div>\r\n\r\n                            <div className=\"privacy\">\r\n                                <label>\r\n                                    <input type=\"checkbox\" id=\"privacy\" required/>\r\n                                    <span>{LANG.Auth.Register.begin}</span>\r\n\r\n\r\n                                </label>\r\n                                <label className=\"privacy-row\">\r\n                                    <input type=\"checkbox\" id=\"privacy\" required/>\r\n                                    <span onClick={() => setPrivacy(true)}\r\n                                          className=\"gold link\">{LANG.Auth.Register.legal}  <span className=\"and\">{LANG.Auth.Register.and} </span>\r\n                                           {LANG.Auth.Register.privacy}</span>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <button className={currentLang} onClick={playClick}>{LANG.Auth.Register.signUp}</button>\r\n\r\n\r\n                            <Link to='/support' className={currentLang + \" support-link\"}\r\n                                  onClick={playClick}>{LANG.support}</Link>\r\n                        </form>\r\n\r\n                    </div>\r\n            );\r\n        }\r\n    } else {\r\n        return (\r\n            <div className=\"round-dark auth\">\r\n               <span onClick={() => {\r\n                   clearData();\r\n                   playClick()\r\n               }} className=\"back\"><Link to=\"/\">&larr;</Link></span>\r\n                <h2 className={currentLang}>{LANG.Auth.Login.title}</h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"\">\r\n                        <label className={currentLang} htmlFor=\"phone\">{LANG.Auth.Login.phoneTitle}</label>\r\n                        <PhoneInput onChange={e => {\r\n                            setPhone(e);\r\n                            setErr('');\r\n                        }} id=\"phone\" limitMaxLength={true} placeholder={LANG.Auth.Login.phone} value={phone}\r\n                                    international\r\n                                    defaultCountry={country}\r\n                                    displayInitialValueAsLocalNumber required/>\r\n                    </div>\r\n                    <div className={password ? 'pass' : 'text'}>\r\n                        <span onClick={() => {\r\n                            setPassword(!password);\r\n                            playClick()\r\n                        }} className=\"eye\"/>\r\n                        <label className={currentLang} htmlFor=\"password\">{LANG.Auth.Login.password}</label>\r\n                        <input onInput={e => {\r\n                            setPass(e.target.value);\r\n                            setErr('');\r\n                        }} id=\"password\" name=\"password\"\r\n                               type={password ? 'password' : 'text'} required/>\r\n                    </div>\r\n                    <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                    <Link to=\"/restore\" className={currentLang + \" forgot mb-3\"}\r\n                          onClick={playClick}>{LANG.Auth.Login.forgotPassword}</Link>\r\n                    <button className={currentLang} onClick={playClick}>{LANG.Auth.Login.loginIn}</button>\r\n                    <span className={currentLang}>{LANG.Auth.Login.or}</span>\r\n                    <button className={currentLang} onClick={e => {\r\n                        e.preventDefault();\r\n                        registration();\r\n                        clearData();\r\n                        playClick();\r\n                    }}>{LANG.Auth.Login.signUp}\r\n                    </button>\r\n                    <Link to=\"/support\" className={currentLang + \" support-link\"}\r\n                          onClick={playClick}>{LANG.support}</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reg: state.authReducer.reg,\r\n        mute: state.soundReducer.mute,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    authorization,\r\n    registration,\r\n    muteToggle,\r\n    betWin,\r\n    fireworks,\r\n    playClick,\r\n    switchStep\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Refill.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Header\\Header.js",["307","308","309"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompletePay.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Start\\Start.js",["310","311"],"import React, {useState, useEffect} from 'react';\r\nimport './start.scss';\r\nimport Graph from \"../Graph\";\r\nimport Time from \"../Main/Time\";\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport arrowDown from \"../../images/arrowDown.svg\";\r\nimport arrowUp from \"../../images/arrowUp.svg\";\r\nimport bull from \"../../images/bull_start.png\";\r\nimport bear from \"../../images/bear_start.png\";\r\nimport Rect from \"../Main/Rect/Rect\";\r\nimport coin from \"../../images/coin.svg\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport {registration} from \"../../redux/actions\";\r\nimport {playClick, up_down, startWin, muteToggle, playYouWon} from \"../../redux/actions/music\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nconst Start = ({\r\n                   currentCourse,\r\n                   course,\r\n                   history,\r\n                   lastSeconds,\r\n                   userdata,\r\n                   widthMode,\r\n                   registration,\r\n                   currentLang,\r\n                   playClick,\r\n                   up_down,\r\n                   startWin,\r\n                   muteToggle,\r\n                   mute,\r\n                   playYouWon\r\n               }) => {\r\n    const [timeGame, setTimeGame] = useState(false);\r\n    const [start, setStart] = useState(false);\r\n    const [bet, setBet] = useState('');\r\n    const [predict, setPredict] = useState('');\r\n\r\n    const LANG = currentLang === \"en\" ? EN : RU\r\n\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0 && start) {\r\n            setTimeGame(true);\r\n        }\r\n    }, [lastSeconds])\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0 && start) {\r\n            if (bet === 'down' && currentCourse < course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n                playYouWon()\r\n            } else if (bet === 'down' && currentCourse > course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n                playYouWon()\r\n            } else if (bet === 'up' && currentCourse > course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n                playYouWon()\r\n            } else if (bet === 'up' && currentCourse < course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n                playYouWon()\r\n            } else {\r\n                setBet('');\r\n            }\r\n        }\r\n\r\n    }, [currentCourse])\r\n    return (\r\n        <div className=\"start\">\r\n            <div style={{display: predict ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                       <span onClick={() => {\r\n                           setPredict('');\r\n                           setBet('');\r\n                           playClick()\r\n                       }} className=\"chross\">&#10008;</span>\r\n                        <h2 className={currentLang}>{LANG.Main.Modal.title.first}\r\n                            <br/> {currentLang === \"en\" ? LANG.Main.Modal.title.second : null}</h2>\r\n                        {/* <h2>{currentLang === \"en\" ? LANG.Main.Modal.title.first <br/> LANG.Main.Modal.title.second : LANG.Main.Modal.title.first}</h2> */}\r\n                        {/* <h2>You did great! <br/> Join now!</h2> */}\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/login');\r\n                            playClick()\r\n                        }} className={currentLang + \" btn btn-primary\"}>\r\n                            {LANG.Main.Modal.logIn}\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/signup');\r\n                            registration();\r\n                            playClick()\r\n                        }} className={currentLang + \" btn btn-primary\"}>\r\n                            {LANG.Main.Modal.signUp}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`${widthMode}-start round round-dark`}>\r\n                <div className=\"bull-start-mobile\"><img src={bull} width=\"\" alt=\"bull\"/></div>\r\n                <div className=\"bear-start-mobile\"><img src={bear} width=\"\" alt=\"bear\"/></div>\r\n                <div className=\"bull-start\"><img src={bull} alt=\"bull\"/></div>\r\n                <div className=\"bear-start\"><img src={bear} alt=\"bear\"/></div>\r\n                <div className=\"text text-center\">\r\n                    <h2>\r\n                        <span className=\"gold\">BITCY</span>BETS\r\n                    </h2>\r\n                    <p className={currentLang + \" mt-3\"}>{LANG.Main.Start.content}</p>\r\n                </div>\r\n                <div className=\"dark\">\r\n                    <Time/>\r\n                    <div className=\"course\">\r\n                        <h2 style={{opacity: !currentCourse ? 0 : 1}} className=\"text-center\"><img src={bitcoin}\r\n                                                                                                   alt=\"course\"/>\r\n                            {currentCourse} <span>$</span>\r\n                        </h2>\r\n                        <div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: !currentCourse ? \"none\" : \"block\"}} className=\"graph\">\r\n                        <Graph gradient1={20} gradient2={150} chartHeight={widthMode === \"desktop\" ? 200 : 150}/>\r\n                    </div>\r\n                    <div style={{display: currentCourse ? \"none\" : \"block\"}} className=\"load\">\r\n                        <div className=\"wrap-img-preload\">\r\n                            <img className=\"coin1\" src={coin} alt=\"\"/>\r\n                            <img className=\"coin2\" src={coin} alt=\"\"/>\r\n                            <img className=\"coin3\" src={coin} alt=\"\"/>\r\n                            <img className=\"coin4\" src={coin} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"wrap-btn\">\r\n                            <button disabled={bet || !currentCourse} onClick={() => {\r\n                                setBet('down');\r\n                                if (!mute) {\r\n                                    muteToggle()\r\n                                }\r\n                                up_down();\r\n                                setStart(true)\r\n                            }}\r\n                                    className={currentLang + \" btn green green-start predict-btn\"}\r\n                                    id=\"down\">\r\n                                <span className={currentLang + \" green\"}>{LANG.Main.Start.btnUp}</span>\r\n                                <img src={arrowUp} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect start={timeGame} infinite={'infinity'} idButton={'down'}\r\n                                      mode={start ? 'rectUp' : ''}/>\r\n                            </button>\r\n                            <button disabled={bet || !currentCourse} onClick={() => {\r\n                                setBet('up');\r\n                                if (!mute) {\r\n                                    muteToggle()\r\n                                }\r\n                                up_down();\r\n                                setStart(true)\r\n                            }}\r\n                                    className={currentLang + \" btn red red-start predict-btn\"}\r\n                                    id=\"down\">\r\n                                <span className={currentLang + \" red\"}>{LANG.Main.Start.btnDown}</span>\r\n                                <img src={arrowDown} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect infinite={'infinity'} idButton={'down'} mode={start ? 'rectDown' : ''}/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"bg\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        course: state.courseReducer.course,\r\n        lastSeconds: state.courseReducer.lastSeconds,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang,\r\n        mute: state.soundReducer.mute\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    userdata,\r\n    registration,\r\n    playClick,\r\n    up_down,\r\n    startWin,\r\n    muteToggle,\r\n    playYouWon\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Start);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Usd.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Invite.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Withdraw.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompleteWith.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\Ads.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Playlist.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Main.js",["312"],"import React, { useEffect } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './main.scss';\r\nimport bitcoin from '../../images/bitcoin.svg';\r\nimport Graph from \"../Graph\";\r\nimport RightSector from \"./RightSector\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport {closeCongratulation, closeYourLose, createAdProp, logoutQuestion, prohibition, switchView} from \"../../redux/actions\";\r\nimport {money, stop, you_lose, add_to_wallet, playClick} from \"../../redux/actions/music\";\r\nimport Time from \"./Time\";\r\nimport Preloader from \"./Preloader\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport Rates from \"./Rates\";\r\nimport Online from \"./Online\";\r\nimport Presentation from \"../Intro/Presentation\";\r\n\r\nconst Main = ({history, step, view, switchView, course, lastWin, closeCongratulation, congratulation, yourlose, closeYourLose, currentCourse, money, muteToggle, logout, logoutQuestion, prohibition, userdata, lastWinGame, createAd, createAdProp, widthMode, currentLang, you_lose, add_to_wallet, playClick, isPreview}) => {\r\n\r\n    useEffect(() => {\r\n        userdata();\r\n    }, [congratulation, userdata]);\r\n    useEffect(()=> switchView(false), []);\r\n\r\n    let flag = course ? course.length : false;\r\n    return (\r\n        <div className={`${widthMode}-bg main`}>\r\n            <Preloader show={flag}/>\r\n            <div style={{display: createAd ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                        <h2>This feature coming soon</h2>\r\n                        <button onClick={() => {\r\n                            createAdProp();\r\n                            playClick()\r\n                        }} className=\"btn btn-primary\">OK\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <main style={{display: flag ? 'block' : 'none'}}>\r\n                <div className=\"row main\">\r\n                    <Presentation />\r\n                    <div style={{display: widthMode === \"mobile\" && view ? \"none\" : \"flex\"}} className=\"left-sector\">\r\n                        {widthMode === \"mobile\" ? <Rates/> : <></>}\r\n                        <div style={{zIndex: step === 1 ?  \"10\" : \"\" } } className={`${widthMode} round globe`}>\r\n                            {widthMode === \"desktop\" ? <Time/> : <></>}\r\n                            <div>\r\n                                <h2 className=\"text-center\"><img src={bitcoin} className=\"m-2\" alt=\"course\"/>\r\n                                    {currentCourse} <span>$</span>\r\n                                </h2>\r\n                                <div>\r\n                                    {widthMode === \"desktop\" ? <Online/> : <></>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"graph-wrapper\">\r\n                                <div className=\"graph\">\r\n                                    <Graph gradient1={widthMode === \"desktop\" ? undefined : 20}\r\n                                           gradient2={widthMode === \"desktop\" ? undefined : 150}\r\n                                           chartHeight={widthMode === \"desktop\" ? 250 : 150}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Dashboard/>\r\n                    </div>\r\n                    {widthMode === \"desktop\" ? <RightSector/> : <></>}\r\n                    {widthMode === \"mobile\" && view ? <RightSector/> : <></>}\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        course: state.courseReducer.course,\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        lastWin: state.balanceReducer.lastWin,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        congratulation: state.balanceReducer.congratulation,\r\n        yourlose: state.balanceReducer.yourlose,\r\n        logout: state.authReducer.logoutQuestion,\r\n        createAd: state.switchOptions.createAd,\r\n        widthMode: state.switchOptions.widthMode,\r\n        view: state.switchOptions.view,\r\n        currentLang: state.switchOptions.lang,\r\n        step: state.switchOptions.step,\r\n        isPreview: state.adsOptions.isPreview\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    closeCongratulation,\r\n    closeYourLose,\r\n    money,\r\n    stop,\r\n    logoutQuestion,\r\n    prohibition,\r\n    userdata,\r\n    createAdProp,\r\n    you_lose,\r\n    add_to_wallet,\r\n    playClick,\r\n    switchView\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\music.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Preloader.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Graph.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Time.js",["313"],"import React, {useEffect, useState} from 'react';\r\nimport {geoposition} from \"../../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Time = ({geo, geoposition}) => {\r\n    useEffect(() => {\r\n        geoposition()\r\n    },[geo]);\r\n    useEffect(() => {\r\n        const clock = setInterval(() => setTime(new Date().toLocaleTimeString()), 1000);\r\n        return () => clearInterval(clock);\r\n    }, [])\r\n    let [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    return (\r\n        <div className=\"time\">\r\n            <h2 className=\"time-text\">{time.slice(0, 5)}</h2>\r\n            <div className=\"label text-center\">{geo || <span style={{fontSize: \"10px\"}}>Please, allow location access</span>}</div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        geo: state.geoReducer.geoposition,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    geoposition\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Time);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rect\\Rect.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\game.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\User.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\ru.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\en.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Online.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rates.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\RightSector.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\fireworks.js",[],["314","315"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Dashboard.js",["316","317","318","319"],"import React, {useEffect, useState} from 'react';\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport arrowUp from \"../../images/arrowUp.svg\";\r\nimport arrowDown from \"../../images/arrowDown.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport {betLose, betWin, closeCongratulation, closeYourLose} from \"../../redux/actions\";\r\nimport {\r\n    bell,\r\n    click,\r\n    fireworks,\r\n    muteToggle,\r\n    playBetTimer,\r\n    playGameTimer,\r\n    playTimer,\r\n    playTimer2,\r\n    playYouWon,\r\n    stop,\r\n    stopBetTimer,\r\n    stopGameTimer,\r\n    up_down,\r\n    you_lose\r\n} from \"../../redux/actions/music\";\r\nimport Rates from \"./Rates\";\r\nimport {User} from \"../../api/User\";\r\nimport {predictClear, predictDown, predictUp, userdata} from \"../../redux/actions/game\";\r\nimport Rect from \"./Rect/Rect\";\r\nimport Timer from \"./Timer\";\r\nimport Online from \"./Online\";\r\nimport YouWon from '../../images/You_won (2).png';\r\nimport GoldCoins from '../../images/Gold_coins1.png';\r\nimport CoinUpImg from '../../images/coinUp.svg'\r\nimport CoinDownImg from '../../images/coinDown.svg'\r\n\r\n\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\n\r\nconst Dashboard = ({\r\n                       stopBetTimer,\r\n                       stopGameTimer,\r\n                       playBetTimer,\r\n                       playGameTimer,\r\n                       step,\r\n                       predictUp,\r\n                       betWin,\r\n                       betLose,\r\n                       fireworks,\r\n                       userdata,\r\n                       predictClear,\r\n                       predictDown,\r\n                       balance,\r\n                       predict,\r\n                       upBets,\r\n                       downBets,\r\n                       up,\r\n                       down,\r\n                       lastSeconds,\r\n                       widthMode,\r\n                       currentLang,\r\n                       up_down,\r\n                       you_lose,\r\n                       playTimer,\r\n                       playTimer2,\r\n                       stop,\r\n                       play,\r\n                       yourlose,\r\n                       closeYourLose,\r\n                       congratulation,\r\n                       closeCongratulation,\r\n                       playYouWon,\r\n                       lastWinGame\r\n                   }) => {\r\n    const [bet, setBet] = useState(.0001);\r\n    const [gameStart, setGameStart] = useState(undefined);\r\n    const LANG = currentLang === \"en\" ? EN : RU;\r\n    let timeBet = lastSeconds % 20 === 0 || lastSeconds % 20 === 5;\r\n    let startGame = lastSeconds % 20 === 10 || lastSeconds % 20 === 15;\r\n\r\n    useEffect(() => {\r\n        if (startGame && gameStart === undefined) {\r\n            setGameStart(lastSeconds);\r\n            predictSubmit();\r\n        }\r\n\r\n    }, [lastSeconds])\r\n\r\n    useEffect(() => {\r\n        if (startGame && !!predict) {\r\n            stopBetTimer();\r\n            playGameTimer();\r\n            playTimer();\r\n        } else if (timeBet && !!predict) {\r\n            stopGameTimer();\r\n            playBetTimer();\r\n            playTimer2();\r\n        } else {\r\n            stopBetTimer();\r\n            stopGameTimer();\r\n        }\r\n\r\n    }, [startGame, timeBet, predict])\r\n\r\n    useEffect(() => {\r\n        if (yourlose === true) {\r\n            you_lose();\r\n            setTimeout(() => {\r\n                closeYourLose()\r\n            }, 3000);\r\n        }\r\n\r\n    }, [yourlose])\r\n\r\n    useEffect(() => {\r\n        if (congratulation === true) {\r\n            playYouWon();\r\n            setTimeout(() => {\r\n                closeCongratulation()\r\n            }, 4000);\r\n        }\r\n    }, [congratulation])\r\n\r\n    const setBetHandler = (e) => {\r\n        let bet = +e.target.value.slice(0, 5);\r\n        if (!bet) {\r\n            bet = 0.0001;\r\n        }\r\n        if (bet > 1) {\r\n            bet = 1;\r\n        }\r\n        setBet(bet || 0.0001);\r\n    }\r\n    const setBetStep = (bool) => {\r\n        const bets = bool ? +bet + .0001 : +bet - .0001;\r\n        console.log('bet')\r\n        if (!bets || +bets < 0) {\r\n            console.log('false')\r\n            setBet(0.0001);\r\n        } else if (+bets > 1) {\r\n            console.log('true')\r\n            setBet(1);\r\n        } else {\r\n            setBet(+bets.toFixed(4))\r\n        }\r\n    }\r\n\r\n    const betDone = (e) => {\r\n        let rate = e.target.id;\r\n        up_down();\r\n        if (rate === 'up') {\r\n            playBetTimer();\r\n            playGameTimer();\r\n            predictUp({value: bet.toString()});\r\n        } else if (rate === 'down') {\r\n            playBetTimer();\r\n            playGameTimer();\r\n            predictDown({value: bet.toString()});\r\n        }\r\n    }\r\n\r\n    const predictSubmit = () => {\r\n        return setTimeout(() => {\r\n            User.userdata()\r\n                .then(data => {\r\n                    if (+data.data.data.lastWin === 1 && predict !== '') {\r\n                        betWin();\r\n                        // fireworks();\r\n                    } else if (+data.data.data.lastWin === -1 && predict !== '') {\r\n                        you_lose();\r\n                        betLose();\r\n                        userdata();\r\n                    } else if (up > 0 && down > 0) {\r\n                        userdata();\r\n                    } else {\r\n                        userdata();\r\n                    }\r\n                }).catch(e => {\r\n                console.log(e)\r\n            });\r\n            setGameStart(undefined);\r\n            predictClear();\r\n        }, 10000)\r\n    }\r\n\r\n    const btnDownHandler = (e) => {\r\n        e.preventDefault();\r\n        betDone(e);\r\n    }\r\n\r\n    if (congratulation) { // congratulation\r\n        return (\r\n            <div className={`${widthMode} row bottom-container`}>\r\n                {widthMode === \"desktop\" ? <Rates/> : <></>}\r\n                <div style={{zIndex: step === 3 ? \"10\" : \"\"}} className={`${widthMode} round dashboard congratulation`}>\r\n                    <img src={YouWon} className='congratulation__youWon-img' alt=\"win\"/>\r\n                    <img src={GoldCoins} className='congratulation__coins-img' alt=\"win\"/>\r\n                    <p className='congratulation__score'>{lastWinGame} <img className='congratulation__btc'\r\n                                                                            src={bitcoin} alt='btc'/></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (yourlose) {\r\n        return (\r\n            <div className={`${widthMode} row bottom-container`}>\r\n                {widthMode === \"desktop\" ? <Rates/> : <></>}\r\n                <div style={{zIndex: step === 3 ? \"10\" : \"\"}} className={`${widthMode} round dashboard yourLose`}>\r\n                    <h1>You lose</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (startGame) {\r\n        return (\r\n            <div className={`${widthMode} row bottom-container`}>\r\n                {widthMode === \"desktop\" ? <Rates/> : <></>}\r\n                <div style={{zIndex: step === 3 ? \"10\" : \"\"}} className={`${widthMode} round dashboard big-timer`}>\r\n                    <Timer/>\r\n                    {startGame && !predict\r\n                        ? <span style={{display: startGame && !predict ? 'inline' : 'none'}}\r\n                                className=\"off text-center\">All bets are off</span>\r\n                        : <div style={{\r\n                            display: predict === 'up' || !predict ? 'inline' : 'none',\r\n                            transform: startGame && (predict === 'down' || !predict) ? 'scale(0)' : 'scale(1)'\r\n                        }} className=\"up\">\r\n                            <div style={{display: predict === 'down' ? \"none\" : \"inherit\"}} className=\"profit\">\r\n                                                    <span style={{\r\n                                                        fontSize: '21px',\r\n                                                        display: widthMode === \"mobile\" ? \"inline\" : \"inline\"\r\n                                                    }}\r\n                                                          className={currentLang + \" green\"}>{LANG.Training.UsualState.MakeBet.yourProfit} </span>\r\n                                <span style={{fontSize: '21px'}}>\r\n                                                        {up || down ? ((bet / (bet + upBets) * downBets) * 0.97).toFixed(6) : 0}\r\n                                                    </span>\r\n                                <img style={{marginTop: '-5px'}} src={bitcoin} width=\"15\" height=\"21\" alt=\"b\"/>\r\n                                <div className='coinImg'>\r\n                                    <img src={CoinUpImg} alt='coin'/>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                    {startGame && (predict === 'up' || !predict)\r\n                        ? <></>\r\n                        :\r\n                        <div style={{display: (predict === 'down' || !predict) ? 'block' : 'none'}}\r\n                             className=\"down\">\r\n                            <div style={{display: predict === 'up' ? \"none\" : \"inherit\"}} className=\"profit\">\r\n                                                    <span style={{\r\n                                                        fontSize: '21px',\r\n                                                        display: widthMode === \"mobile\" ? \"inline\" : \"inline\"\r\n                                                    }}\r\n                                                          className={currentLang + \" red\"}>{LANG.Training.UsualState.MakeBet.yourProfit} </span>\r\n                                <span\r\n                                    style={{fontSize: '21px'}}>{up || down ? ((bet / (bet + downBets) * upBets) * 0.97).toFixed(6) : 0}\r\n                                                </span>\r\n                                <img style={{marginTop: '-5px'}} src={bitcoin} width=\"15\" height=\"21\" alt=\"b\"/>\r\n                                <div className='coinImg'>\r\n                                    <img src={CoinDownImg} alt='coin'/>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={`${widthMode} row bottom-container`}>\r\n                {widthMode === \"desktop\" ? <Rates/> : <></>}\r\n                <div style={{zIndex: step === 3 ? \"10\" : \"\"}} className={`${widthMode} round dashboard`}>\r\n                    <div className=\"range\">\r\n                        <div className=\"form-label d-flex justify-content-between\">\r\n                            <div className='makeYourBet'>\r\n                                <h2 className={predict || startGame ? \"text-left\" : \"make-bet text-left\"}>\r\n                                    {/* {widthMode === \"desktop\" ? LANG.BettingRealMoney.UsualState.MakeBet.title : \"\"}</h2> */}\r\n                                    {LANG.BettingRealMoney.UsualState.MakeBet.title}</h2>\r\n                                <p className='setSize'>Set bet size</p>\r\n                            </div>\r\n                            <div className=\"balanceInput\">\r\n                                {widthMode === \"mobile\" ? <Online/> : <></>}\r\n                                <span className='balanceBtn minus' onClick={() => setBetStep(false)}>-</span>\r\n                                <span\r\n                                    className={balance - bet >= 0 ? 'balanceInput__balance' : 'balanceInput__balance red'}>\r\n                                    <input id=\"numberBet\" type=\"number\" step=\"0.0001\" min=\"0.0001\" max=\"1\"\r\n                                           className={balance - bet >= 0 ? '' : 'red'}\r\n                                           disabled={predict || !timeBet}\r\n                                           onInput={setBetHandler}\r\n                                           value={bet}/>\r\n                                    <img className=\"numberBet\" width=\"15\" src={bitcoin} alt=\"up\"/>\r\n                                </span>\r\n                                <span className='balanceBtn plus' onClick={() => setBetStep(true)}>+</span>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={e => e.preventDefault()}>\r\n                            <div className=\"form\">\r\n                                <div className=\"bet\">\r\n                                    <input min=\"0.0001\" max=\"1\" step=\"0.0001\"\r\n                                           type=\"range\"\r\n                                           disabled={predict || !timeBet || startGame}\r\n                                           value={bet}\r\n                                           style={{backgroundImage: `linear-gradient(to right, ${balance - bet >= 0 ? '#32D74B' : '#FF453A'} 0%, ${balance - bet >= 0 ? '#32D74B' : '#FF453A'} ${bet * 100}%, #fff ${bet * 100}%, white 100%)`}}\r\n                                           onChange={setBetHandler}\r\n                                           className={balance - bet >= 0 ? 'green-range' : 'red-range'}\r\n                                           id=\"range\"/>\r\n                                </div>\r\n                                <div className='wrap-btn'>\r\n\r\n                                    {startGame && (predict === 'down' || !predict)\r\n                                        ? <span style={{display: startGame && !predict ? 'flex' : 'none'}}\r\n                                                className=\"off\">All bets are off</span>\r\n                                        : <div style={{\r\n                                            display: predict === 'up' || !predict ? 'block' : 'none',\r\n                                            transform: startGame && (predict === 'down' || !predict) ? 'scale(0)' : 'scale(1)'\r\n                                        }} className=\"up\">\r\n                                            <div className=\"profit\">\r\n                                                    <span style={{display: widthMode === \"mobile\" ? \"block\" : \"inline\"}}\r\n                                                          className={\" green\"}>{LANG.BettingRealMoney.UsualState.MakeBet.yourProfit}</span>\r\n                                                <span>\r\n                                                    {up || down ? ((bet / (bet + upBets) * downBets) * 0.97).toFixed(6) : 0}\r\n                                                </span>\r\n                                                <img src={bitcoin} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                            </div>\r\n                                            <button disabled={predict || balance - bet < 0 || !timeBet}\r\n                                                    onClick={(e) => {\r\n                                                        e.preventDefault();\r\n                                                        betDone(e);\r\n                                                    }}\r\n                                                    className={\" btn green predict-btn\"}>{LANG.BettingRealMoney.UsualState.MakeBet.btnUp}\r\n\r\n                                                <img src={arrowUp} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                                <Rect idButton={'up'} mode={timeBet ? 'rectUp' : \"\"}/>\r\n                                            </button>\r\n                                        </div>}\r\n\r\n                                    {startGame && (predict === 'up' || !predict)\r\n                                        ? <></>\r\n                                        :\r\n                                        <div style={{display: (predict === 'down' || !predict) ? 'block' : 'none'}}\r\n                                             className=\"down\">\r\n                                            <div className=\"profit\">\r\n                                                    <span style={{display: widthMode === \"mobile\" ? \"block\" : \"inline\"}}\r\n                                                          className={\" red\"}>{LANG.BettingRealMoney.UsualState.MakeBet.yourProfit}</span>\r\n                                                <span>\r\n                                                    {up || down ? ((bet / (bet + downBets) * upBets) * 0.97).toFixed(6) : 0}\r\n                                                </span>\r\n                                                <img src={bitcoin} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                            </div>\r\n                                            <button disabled={predict || balance - bet < 0 || !timeBet}\r\n                                                    onClick={(e) => {\r\n                                                        btnDownHandler(e)\r\n                                                    }}\r\n                                                    className={\" btn red predict-btn\"}\r\n                                                    id=\"down\">{LANG.BettingRealMoney.UsualState.MakeBet.btnDown}\r\n                                                <img src={arrowDown} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                                <Rect idButton={'down'} mode={timeBet ? 'rectDown' : \"\"}/>\r\n                                            </button>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        balance: state.balanceReducer.balance,\r\n        course: state.courseReducer.course,\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        currentTime: state.courseReducer.currentTime,\r\n        lastSeconds: state.courseReducer.lastSeconds,\r\n        lastWin: state.balanceReducer.lastWin,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        congratulation: state.balanceReducer.congratulation,\r\n        predict: state.balanceReducer.predict,\r\n        yourlose: state.balanceReducer.yourlose,\r\n        downBets: state.balanceReducer.downBets,\r\n        upBets: state.balanceReducer.upBets,\r\n        up: state.balanceReducer.up,\r\n        down: state.balanceReducer.down,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang,\r\n        step: state.switchOptions.step,\r\n        play: state.soundReducer.play,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    betWin,\r\n    betLose,\r\n    predictUp,\r\n    predictDown,\r\n    predictClear,\r\n    click,\r\n    up_down,\r\n    you_lose,\r\n    bell,\r\n    stop,\r\n    playTimer,\r\n    playTimer2,\r\n    fireworks,\r\n    closeCongratulation,\r\n    muteToggle,\r\n    userdata,\r\n    stopBetTimer,\r\n    stopGameTimer,\r\n    playBetTimer,\r\n    playGameTimer,\r\n    closeYourLose,\r\n    playYouWon\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\types.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Sound.js",["320","321"],"import React, {useRef, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {stop} from '../redux/actions/music';\r\n\r\nconst Sound = ({play, param, stop, mute}) => {\r\n\r\n    const audRef = useRef(null);\r\n    const handlePlay = () => {\r\n        audRef.current.play();\r\n    }\r\n    const muted = () => {\r\n        audRef.current.muted = !mute;\r\n    }\r\n    useEffect(() => {\r\n        if (param.id === play) {\r\n            audRef.current.id === 'fireworks' ? audRef.current.volume = 0.3 : audRef.current.volume = 0.7;\r\n            audRef.current.id === 'timer' ? audRef.current.playbackRate = 1.06 : audRef.current.playbackRate = 1.0;\r\n            handlePlay();\r\n        }\r\n        stop();\r\n    }, [param.id, play, handlePlay]);\r\n\r\n    useEffect(() => {\r\n        muted();\r\n    }, [muted]);\r\n\r\n    return (\r\n        <div className=\"sound\">\r\n            <audio ref={audRef} id={param.id} >\r\n                <source src={param.effect} type=\"audio/mpeg\" />\r\n            </audio>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        play: state.soundReducer.play,\r\n        mute: state.soundReducer.mute\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    stop\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sound);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\game.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\sound.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\entry.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\Api.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Timer.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Presentation.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step1.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step3.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step5.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step4.js",["322"],"import React from 'react'\r\nimport imgPerson from '../../images/person x4F 4 1.png'\r\nimport imgArrowRight from '../../images/arrow-right.png';\r\nimport imgArrowLeft from '../../images/arrow-left.png';\r\nimport imgClickOnWallet from '../../images/clickOnWallet.png'\r\nimport {switchStep} from '../../redux/actions/index';\r\nimport {switchView} from \"../../redux/actions\";\r\nimport {playClick} from '../../redux/actions/music';\r\nimport {connect} from 'react-redux';\r\nimport {EN} from '../../languages/en'\r\nimport {RU} from '../../languages/ru'\r\n\r\nconst Step4 = ({playClick, switchStep, currentLang, switchView, widthMode, view}) => {\r\n    const LANG = currentLang === 'en' ? EN : RU;\r\n    const isDesktop = widthMode === \"desktop\";\r\n    if (isDesktop === true || view === true) {\r\n        return (\r\n            <div className=\"step step4\">\r\n                <img className='step-img' src={imgPerson} alt='person'/>\r\n                <div className='step-content'>\r\n                    <ul className='list-lines'>\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                    </ul>\r\n                    <h3 className='step-content__title'>{LANG.Intro.Step4.title}</h3>\r\n                    <p className='step-content__content'>{LANG.Intro.Step4.content}</p>\r\n                    <ul className=\"step-nav\">\r\n                        <li className='step-nav__item' onClick={() => {\r\n                            // switchView(false);\r\n                            isDesktop ? switchStep(3) : switchView(false)\r\n                            playClick()\r\n                        }}>\r\n                            <span>{isDesktop ? LANG.Intro.btnIntro.prev : <img src={imgArrowLeft} alt='arrow-left'/>}</span>\r\n                        </li>\r\n                        <li className='step-nav__item step-nav_btnSkip' onClick={() => {\r\n                            switchStep(0);\r\n                            playClick()\r\n                        }}>\r\n                            <span>{LANG.Intro.btnIntro.skip}</span>\r\n                        </li>\r\n                        <li className='step-nav__item' onClick={() => {\r\n                            switchStep(5);\r\n                            playClick()\r\n                        }}>\r\n                            <span>{isDesktop ? LANG.Intro.btnIntro.next : <img src={imgArrowRight} alt='arrow-right'/>}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n                \r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"step step4 clickOnWallet\" style={{height: '303px'}}>\r\n                {/* <img className='step-img' src={imgClickOnWallet} alt='person'/> */}\r\n                <div className='step-content' style={{marginTop: '115px'}}>\r\n                    <ul className='list-lines'>\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                        <li className=\"list-lines__item\" />\r\n                    </ul>\r\n                    <h3 className='step-content__title'>{LANG.Intro.ClickOnWallet.title}</h3>\r\n                    <p className='step-content__content'>{LANG.Intro.ClickOnWallet.content}</p>\r\n                    <ul className=\"step-nav\">\r\n                        <li className='step-nav__item' onClick={() => {\r\n                            switchStep(3);\r\n                            playClick()\r\n                        }}>\r\n                            <span>{isDesktop ? LANG.Intro.btnIntro.prev : <img src={imgArrowLeft} alt='arrow-left'/>}</span>\r\n                        </li>\r\n                        <li className='step-nav__item step-nav_btnSkip' onClick={() => {\r\n                            switchStep(0);\r\n                            playClick()\r\n                        }}>\r\n                            <span>{LANG.Intro.btnIntro.skip}</span>\r\n                        </li>\r\n                        <li className='step-nav__item' onClick={() => {\r\n                            switchView(true);\r\n                            playClick()\r\n                        }}>\r\n                            <span>{isDesktop ? LANG.Intro.btnIntro.next : <img src={imgArrowRight} alt='arrow-right'/>}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentLang: state.switchOptions.lang,\r\n        widthMode: state.switchOptions.widthMode,\r\n        view: state.switchOptions.view\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    switchStep,\r\n    playClick,\r\n    switchView\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step4)\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step2.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\ImagePreview.js",["323","324"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\Tabs.js",["325","326"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\FormInput.js",["327"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\useImagePreview.js",["328"],"import { useState } from \"react\";\r\n\r\nexport default () => {\r\n  const [image, setImage] = useState(null);\r\n\r\n  const setFile = ({ target }) => {\r\n    const localURL = URL.createObjectURL(target.files[0]);\r\n\r\n    setImage(localURL);\r\n  };\r\n\r\n  return [image, setFile];\r\n};\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\Duration.js",["329"],"import React, { useState, useEffect } from \"react\";\r\nimport dayjs from \"dayjs\";\r\n// components\r\nimport { Tabs, TimeInput, DateInput } from \"./components\";\r\n// style\r\nimport \"./style.scss\";\r\nimport {connect} from \"react-redux\";\r\nimport {setEndDate, setEndTime, setStartDate, setStartTime, setIsCorrectDateToStore} from \"../../../../redux/actions/advertising\";\r\n\r\nconst Duration = ({setStartDate, setStartTime, setEndDate, setEndTime, startTime, setIsCorrectDateToStore, isCorrectDateFromStore}) => {\r\n  const [dateStart, setDateStart] = useState(0);\r\n  const [timeStart, setTimeStart] = useState(0);\r\n  const [dateEnd, setDateEnd] = useState(0);\r\n  const [timeEnd, setTimeEnd] = useState(0);\r\n  const [isStartDate, setIsStartDate] = useState(true);\r\n  const [isCorrectDate, setIsCorrectDate] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const dateNow = dayjs().valueOf(true);\r\n    let enteredStartDate = dayjs(`${dateStart}T${timeStart}`).valueOf(true);\r\n\t  let enteredEndDate = dayjs(`${dateEnd}T${timeEnd}`).valueOf(true);\r\n    if(dateStart !== 0 && timeStart !== 0) {\r\n      if(enteredStartDate > dateNow) {\r\n\t\t  console.log('up')\r\n        setIsStartDate(true)\r\n      } else if (enteredStartDate < dateNow) {\r\n\t\t  console.log('down')\r\n        setIsStartDate(false)\r\n      }\r\n    }\r\n\r\n\tif(dateStart !== 0 && timeStart !== 0 && dateEnd !==0 && timeEnd !== 0) {\r\n\t\tif(enteredEndDate > enteredStartDate) {\r\n\t\t\tsetIsCorrectDate(true)\r\n\t\t} else if (enteredEndDate < enteredStartDate) {\r\n\t\t\tsetIsCorrectDate(false)\r\n\t\t}\r\n\t\t// console.log(isCorrectDate)\r\n\t}\r\n\r\n\tif(isStartDate && isCorrectDate) {\r\n    console.log('y')\r\n\t\tsetIsCorrectDateToStore(true)\r\n\t} else {\r\n    console.log('n')\r\n\t\tsetIsCorrectDateToStore(false)\r\n\t}\r\n    \r\n  }, [dateStart, timeStart, dateEnd, timeEnd])\r\n\r\n  \r\n\r\n  const tabs = [\r\n    {\r\n      id: 0,\r\n      label: \"Choose when this ad ends\",\r\n      content: (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div style={{ display: \"flex\", marginBottom: '20px', justifyContent: 'space-between'}} >\r\n            <DateInput onChange={(e) => {setStartDate(e); setDateStart(e)}} label=\"Start date\" invalid={isStartDate ? false : true} />\r\n            <TimeInput onChange={(e) => {setStartTime(e); setTimeStart(e)}} label=\"Start time\" invalid={isStartDate ? false : true}/>\r\n          </div>\r\n          <div style={{ display: \"flex\", justifyContent: 'space-between' }}>\r\n            <DateInput onChange={(e) => {setEndDate(e); setDateEnd(e)}} label=\"End date\" invalid={isCorrectDate ? false : true} />\r\n            <TimeInput onChange={(e) => {setEndTime(e); setTimeEnd(e)}} label=\"End time\" invalid={isCorrectDate ? false : true} />\r\n          </div>\r\n          \r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: 1,\r\n      label: \"Run this ad continuously\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"duration\">\r\n      <h2>Duration</h2>\r\n\r\n      <Tabs tabs={tabs} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state.adsOptions.isCorrectDate)\r\n  return {\r\n    isCorrectDateFromStore: state.adsOptions.isCorrectDate\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setStartDate,\r\n    setStartTime,\r\n    setEndDate,\r\n    setEndTime,\r\n\tsetIsCorrectDateToStore\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Duration);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\Audience.js",["330","331","332","333"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\Footer.js",["334"],"import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {setIsPreview} from '../../../../redux/actions/advertising'\r\n// styles\r\nimport \"./style.scss\";\r\n\r\n\r\nconst Footer = ({setIsPreview, isCorrectDate}) => {\r\n    let history = useHistory()\r\n\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <button type='submit'>Promote now</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isCorrectDate: state.adsOptions.isCorrectDate\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setIsPreview\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\privacy.en.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\privacy.ru.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\advertising.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\ListAds.js",["335"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Wallet.js",["336"],"import React, {useEffect} from 'react'\r\nimport '../ads.scss'\r\nimport {Link} from 'react-router-dom';\r\nimport deposit from '../../../images/deposit.svg';\r\nimport {playClick} from \"../../../redux/actions/music\";\r\nimport {connect} from 'react-redux';\r\nimport {changeDemo} from \"../../../redux/actions/game\";\r\n\r\nconst Wallet = ({name, balance, playClick, input, isDemo, changeDemo}) => {\r\n    useEffect(() => {\r\n        if (isDemo) {\r\n            changeDemo();\r\n        }\r\n    }, [])\r\n    return (\r\n\r\n        <div className={!input ? 'round-dark wallet' : 'round-dark wallet top'}>\r\n            <div className='wallet__title'>My wallet</div>\r\n            <div className='wallet__name-title'>Name</div>\r\n            <div className='wallet__name'>{name}</div>\r\n            <div className='wallet__balance-title'>Balance</div>\r\n            <div className='wallet__balance'>{balance} &#8383;</div>\r\n            <Link to=\"/refill\" className=\"wallet__deposit btn up\" onClick={playClick}>Deposit\r\n                <img className='deposit' src={deposit} alt=\"deposit\"/>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        balance: state.balanceReducer.balance,\r\n        name: state.balanceReducer.name,\r\n        isDemo: state.balanceReducer.isDemo,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    playClick,\r\n    changeDemo\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet)\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\country\\country.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\country\\timezone.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\advertising.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\MyAd.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Promo\\Promo.js",["337","338","339","340"],{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","severity":1,"message":"346","line":6,"column":8,"nodeType":"347","messageId":"348","endLine":6,"endColumn":17},{"ruleId":"349","severity":1,"message":"350","line":77,"column":33,"nodeType":"351","messageId":"352","endLine":77,"endColumn":49},{"ruleId":"353","severity":1,"message":"354","line":70,"column":8,"nodeType":"355","endLine":70,"endColumn":27,"suggestions":"356"},{"ruleId":"357","severity":1,"message":"358","line":79,"column":29,"nodeType":"359","endLine":79,"endColumn":137},{"ruleId":"360","severity":1,"message":"361","line":107,"column":33,"nodeType":"359","endLine":112,"endColumn":61},{"ruleId":"353","severity":1,"message":"362","line":46,"column":8,"nodeType":"355","endLine":46,"endColumn":21,"suggestions":"363"},{"ruleId":"353","severity":1,"message":"364","line":70,"column":8,"nodeType":"355","endLine":70,"endColumn":23,"suggestions":"365"},{"ruleId":"353","severity":1,"message":"366","line":22,"column":39,"nodeType":"355","endLine":22,"endColumn":41,"suggestions":"367"},{"ruleId":"353","severity":1,"message":"368","line":8,"column":7,"nodeType":"355","endLine":8,"endColumn":12,"suggestions":"369"},{"ruleId":"341","replacedBy":"370"},{"ruleId":"343","replacedBy":"371"},{"ruleId":"353","severity":1,"message":"372","line":86,"column":8,"nodeType":"355","endLine":86,"endColumn":21,"suggestions":"373"},{"ruleId":"353","severity":1,"message":"374","line":102,"column":8,"nodeType":"355","endLine":102,"endColumn":37,"suggestions":"375"},{"ruleId":"353","severity":1,"message":"376","line":112,"column":8,"nodeType":"355","endLine":112,"endColumn":18,"suggestions":"377"},{"ruleId":"353","severity":1,"message":"378","line":121,"column":8,"nodeType":"355","endLine":121,"endColumn":24,"suggestions":"379"},{"ruleId":"353","severity":1,"message":"380","line":11,"column":11,"nodeType":"381","endLine":13,"endColumn":6},{"ruleId":"353","severity":1,"message":"382","line":21,"column":8,"nodeType":"355","endLine":21,"endColumn":36,"suggestions":"383"},{"ruleId":"345","severity":1,"message":"384","line":5,"column":8,"nodeType":"347","messageId":"348","endLine":5,"endColumn":24},{"ruleId":"357","severity":1,"message":"358","line":37,"column":31,"nodeType":"359","endLine":37,"endColumn":77},{"ruleId":"357","severity":1,"message":"358","line":39,"column":15,"nodeType":"359","endLine":39,"endColumn":60},{"ruleId":"345","severity":1,"message":"385","line":25,"column":12,"nodeType":"347","messageId":"348","endLine":25,"endColumn":16},{"ruleId":"345","severity":1,"message":"386","line":25,"column":18,"nodeType":"347","messageId":"348","endLine":25,"endColumn":25},{"ruleId":"349","severity":1,"message":"350","line":142,"column":33,"nodeType":"351","messageId":"352","endLine":142,"endColumn":49},{"ruleId":"387","severity":1,"message":"388","line":3,"column":1,"nodeType":"389","endLine":13,"endColumn":3},{"ruleId":"353","severity":1,"message":"390","line":49,"column":6,"nodeType":"355","endLine":49,"endColumn":46,"suggestions":"391"},{"ruleId":"392","severity":1,"message":"393","line":24,"column":19,"nodeType":"394","messageId":"395","endLine":24,"endColumn":20},{"ruleId":"353","severity":1,"message":"396","line":29,"column":8,"nodeType":"355","endLine":29,"endColumn":23,"suggestions":"397"},{"ruleId":"392","severity":1,"message":"393","line":32,"column":19,"nodeType":"394","messageId":"395","endLine":32,"endColumn":20},{"ruleId":"392","severity":1,"message":"393","line":38,"column":19,"nodeType":"394","messageId":"395","endLine":38,"endColumn":20},{"ruleId":"345","severity":1,"message":"398","line":10,"column":9,"nodeType":"347","messageId":"348","endLine":10,"endColumn":16},{"ruleId":"353","severity":1,"message":"399","line":19,"column":8,"nodeType":"355","endLine":19,"endColumn":10,"suggestions":"400"},{"ruleId":"353","severity":1,"message":"401","line":14,"column":8,"nodeType":"355","endLine":14,"endColumn":10,"suggestions":"402"},{"ruleId":"345","severity":1,"message":"403","line":1,"column":16,"nodeType":"347","messageId":"348","endLine":1,"endColumn":24},{"ruleId":"345","severity":1,"message":"404","line":15,"column":11,"nodeType":"347","messageId":"348","endLine":15,"endColumn":18},{"ruleId":"345","severity":1,"message":"405","line":16,"column":11,"nodeType":"347","messageId":"348","endLine":16,"endColumn":15},{"ruleId":"353","severity":1,"message":"406","line":40,"column":8,"nodeType":"355","endLine":40,"endColumn":10,"suggestions":"407"},"no-native-reassign",["408"],"no-negated-in-lhs",["409"],"no-unused-vars","'arrow_btn' is defined but never used.","Identifier","unusedVar","no-control-regex","Unexpected control character(s) in regular expression: \\x00.","Literal","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prohibition'. Either include it or remove the dependency array. If 'prohibition' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["410"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'start'. Either include it or remove the dependency array.",["411"],"React Hook useEffect has missing dependencies: 'bet', 'course', 'lastSeconds', 'playYouWon', and 'start'. Either include them or remove the dependency array. If 'playYouWon' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["412"],"React Hook useEffect has a missing dependency: 'switchView'. Either include it or remove the dependency array. If 'switchView' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["413"],"React Hook useEffect has a missing dependency: 'geoposition'. Either include it or remove the dependency array. If 'geoposition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["414"],["408"],["409"],"React Hook useEffect has missing dependencies: 'gameStart', 'predictSubmit', and 'startGame'. Either include them or remove the dependency array.",["415"],"React Hook useEffect has missing dependencies: 'playBetTimer', 'playGameTimer', 'playTimer', 'playTimer2', 'stopBetTimer', and 'stopGameTimer'. Either include them or remove the dependency array. If 'stopBetTimer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["416"],"React Hook useEffect has missing dependencies: 'closeYourLose' and 'you_lose'. Either include them or remove the dependency array. If 'you_lose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["417"],"React Hook useEffect has missing dependencies: 'closeCongratulation' and 'playYouWon'. Either include them or remove the dependency array. If 'playYouWon' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["418"],"The 'muted' function makes the dependencies of useEffect Hook (at line 25) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'muted' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'stop'. Either include it or remove the dependency array. If 'stop' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["419"],"'imgClickOnWallet' is defined but never used.","'cost' is assigned a value but never used.","'setCost' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'isCorrectDate', 'isStartDate', and 'setIsCorrectDateToStore'. Either include them or remove the dependency array. If 'setIsCorrectDateToStore' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["420"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'addCountry'. Either include it or remove the dependency array. If 'addCountry' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["421"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCurrentList'. Either include it or remove the dependency array. If 'getCurrentList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["422"],"React Hook useEffect has missing dependencies: 'changeDemo' and 'isDemo'. Either include them or remove the dependency array. If 'changeDemo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["423"],"'useState' is defined but never used.","'reducer' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPromoList'. Either include it or remove the dependency array. If 'getPromoList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["424"],"no-global-assign","no-unsafe-negation",{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},"Update the dependencies array to be: [location.pathname, prohibition]",{"range":"455","text":"456"},"Update the dependencies array to be: [lastSeconds, start]",{"range":"457","text":"458"},"Update the dependencies array to be: [bet, course, currentCourse, lastSeconds, playYouWon, start]",{"range":"459","text":"460"},"Update the dependencies array to be: [switchView]",{"range":"461","text":"462"},"Update the dependencies array to be: [geo, geoposition]",{"range":"463","text":"464"},"Update the dependencies array to be: [gameStart, lastSeconds, predictSubmit, startGame]",{"range":"465","text":"466"},"Update the dependencies array to be: [startGame, timeBet, predict, stopBetTimer, playGameTimer, playTimer, stopGameTimer, playBetTimer, playTimer2]",{"range":"467","text":"468"},"Update the dependencies array to be: [closeYourLose, you_lose, yourlose]",{"range":"469","text":"470"},"Update the dependencies array to be: [closeCongratulation, congratulation, playYouWon]",{"range":"471","text":"472"},"Update the dependencies array to be: [param.id, play, handlePlay, stop]",{"range":"473","text":"474"},"Update the dependencies array to be: [dateStart, timeStart, dateEnd, timeEnd, isStartDate, isCorrectDate, setIsCorrectDateToStore]",{"range":"475","text":"476"},"Update the dependencies array to be: [addCountry, country, zone]",{"range":"477","text":"478"},"Update the dependencies array to be: [getCurrentList]",{"range":"479","text":"480"},"Update the dependencies array to be: [changeDemo, isDemo]",{"range":"481","text":"482"},"Update the dependencies array to be: [getPromoList]",{"range":"483","text":"484"},[2571,2590],"[location.pathname, prohibition]",[1631,1644],"[lastSeconds, start]",[2523,2538],"[bet, course, currentCourse, lastSeconds, playYouWon, start]",[1161,1163],"[switchView]",[233,238],"[geo, geoposition]",[2819,2832],"[gameStart, lastSeconds, predictSubmit, startGame]",[3211,3240],"[startGame, timeBet, predict, stopBetTimer, playGameTimer, playTimer, stopGameTimer, playBetTimer, playTimer2]",[3435,3445],"[closeYourLose, you_lose, yourlose]",[3652,3668],"[closeCongratulation, congratulation, playYouWon]",[707,735],"[param.id, play, handlePlay, stop]",[1730,1770],"[dateStart, timeStart, dateEnd, timeEnd, isStartDate, isCorrectDate, setIsCorrectDateToStore]",[1019,1034],"[addCountry, country, zone]",[769,771],"[getCurrentList]",[476,478],"[changeDemo, isDemo]",[1413,1415],"[getPromoList]"]

