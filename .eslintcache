[{"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\index.js":"1","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\App.js":"2","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\reportWebVitals.js":"3","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\restore.js":"4","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Auth.js":"5","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Header\\Header.js":"6","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Main.js":"7","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Graph.js":"8","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\RightSector.js":"9","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Dashboard.js":"10","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\SelectList.js":"11","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\index.js":"12","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\entry.js":"13","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\index.js":"14","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\store.js":"15","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\types.js":"16","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\api\\User.js":"17","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\api\\Api.js":"18","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\game.js":"19","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Refill.js":"20","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Btc.js":"21","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Usd.js":"22","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\sound\\Sound.js":"23","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\sound\\Playlist.js":"24","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\sound.js":"25","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\music.js":"26","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\fireworks.js":"27","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Time.js":"28","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Rates.js":"29","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Preloader.js":"30","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\game.js":"31","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Rect\\Rect.js":"32","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Start\\Start.js":"33","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Support.js":"34","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Ads\\Ads.js":"35","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Withdraw.js":"36","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\CompleteWith.js":"37","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\CompletePay.js":"38","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Reset.js":"39"},{"size":2975,"mtime":1613139372122,"results":"40","hashOfConfig":"41"},{"size":630,"mtime":1612854454712,"results":"42","hashOfConfig":"41"},{"size":375,"mtime":1610290416137,"results":"43","hashOfConfig":"41"},{"size":3079,"mtime":1613141256004,"results":"44","hashOfConfig":"41"},{"size":10336,"mtime":1613135570834,"results":"45","hashOfConfig":"41"},{"size":4749,"mtime":1612963507881,"results":"46","hashOfConfig":"41"},{"size":5367,"mtime":1612884155531,"results":"47","hashOfConfig":"41"},{"size":9053,"mtime":1613120941932,"results":"48","hashOfConfig":"41"},{"size":6052,"mtime":1613030414405,"results":"49","hashOfConfig":"41"},{"size":14396,"mtime":1612887285439,"results":"50","hashOfConfig":"41"},{"size":2471,"mtime":1612885784124,"results":"51","hashOfConfig":"41"},{"size":1883,"mtime":1613119987924,"results":"52","hashOfConfig":"41"},{"size":2037,"mtime":1612869610959,"results":"53","hashOfConfig":"41"},{"size":367,"mtime":1612277973664,"results":"54","hashOfConfig":"41"},{"size":213,"mtime":1610430156118,"results":"55","hashOfConfig":"41"},{"size":1047,"mtime":1612277683960,"results":"56","hashOfConfig":"41"},{"size":1615,"mtime":1613140263253,"results":"57","hashOfConfig":"41"},{"size":445,"mtime":1612880547242,"results":"58","hashOfConfig":"41"},{"size":3652,"mtime":1612884283428,"results":"59","hashOfConfig":"41"},{"size":4433,"mtime":1613033706111,"results":"60","hashOfConfig":"41"},{"size":4680,"mtime":1613033038335,"results":"61","hashOfConfig":"41"},{"size":3318,"mtime":1611827881603,"results":"62","hashOfConfig":"41"},{"size":1075,"mtime":1611080852912,"results":"63","hashOfConfig":"41"},{"size":733,"mtime":1612869233643,"results":"64","hashOfConfig":"41"},{"size":894,"mtime":1612541452118,"results":"65","hashOfConfig":"41"},{"size":603,"mtime":1610995746811,"results":"66","hashOfConfig":"41"},{"size":9768,"mtime":1611330056829,"results":"67","hashOfConfig":"41"},{"size":970,"mtime":1612964626614,"results":"68","hashOfConfig":"41"},{"size":3558,"mtime":1612886339156,"results":"69","hashOfConfig":"41"},{"size":964,"mtime":1612801428844,"results":"70","hashOfConfig":"41"},{"size":1661,"mtime":1612258289807,"results":"71","hashOfConfig":"41"},{"size":232,"mtime":1612541347388,"results":"72","hashOfConfig":"41"},{"size":6782,"mtime":1612942258241,"results":"73","hashOfConfig":"41"},{"size":1155,"mtime":1612772404298,"results":"74","hashOfConfig":"41"},{"size":883,"mtime":1612952482993,"results":"75","hashOfConfig":"41"},{"size":2902,"mtime":1613035463584,"results":"76","hashOfConfig":"41"},{"size":912,"mtime":1613034086698,"results":"77","hashOfConfig":"41"},{"size":928,"mtime":1613033834804,"results":"78","hashOfConfig":"41"},{"size":3710,"mtime":1613141484378,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"nhk3jc",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\index.js",["166"],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\App.js",[],["167","168"],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\reportWebVitals.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\restore.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Auth.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Header\\Header.js",["169","170"],"import React, {useState, useEffect} from 'react';\r\nimport './header.scss';\r\nimport logo from '../../images/logoLeft.svg';\r\n// import logo2 from '../../images/logoCentre.svg';\r\nimport burger from '../../images/burger.png';\r\nimport refreshIcon from '../../images/refresh.svg';\r\nimport sound from '../../images/volume-up-solid.svg';\r\nimport noSound from '../../images/volume-mute-solid.svg';\r\nimport {connect} from \"react-redux\";\r\nimport {authorization, createAd, logoutQuestion, prohibition, registration} from \"../../redux/actions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {muteToggle} from \"../../redux/actions/music\";\r\n\r\nconst Header = ({auth, reg, mute, muteToggle, logoutQuestion, createAd, logout, registration, prohibition, authorization, history}) => {\r\n    const [menu, setMenu] = useState(false);\r\n    useEffect(() => {\r\n        authorization();\r\n    }, [])\r\n    const handleMute = () => {\r\n        muteToggle();\r\n    }\r\n    const refresh = () => {\r\n        window.location.reload();\r\n    }\r\n    return (\r\n        <div>\r\n            <header className=\"header\">\r\n                <div style={{display: logout ? \"block\" : \"none\"}} className=\"blur\">\r\n                    <div className=\"round-dark win\">\r\n                        <h2>Are you sure?</h2>\r\n                        <div className=\"win-btn\">\r\n                            <button onClick={() => {\r\n                                logoutQuestion();\r\n                                localStorage.removeItem('token');\r\n                                prohibition();\r\n                                window.location.reload();\r\n                            }} className=\"btn btn-primary\"><Link to=\"/\">LOG OUT</Link>\r\n                            </button>\r\n                            <button onClick={() => {\r\n                                logoutQuestion();\r\n                            }} className=\"btn btn-primary\">STAY\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"wrap-header\">\r\n                    <nav className=\"navbar\">\r\n                        <a onClick={refresh} className=\"navbar-brand\">\r\n                            <img src={logo} alt=\"logo\" height=\"23\"/>\r\n                        </a>\r\n                    </nav>\r\n                    <div className=\"header-right\">\r\n                        <img onClick={refresh} style={{marginRight: \"30px\"}} className=\"sound\" height=\"18\" width=\"18\" src={refreshIcon} alt=\"refresh\"/>\r\n                        <img onClick={handleMute} className=\"sound \" src={mute ? sound : noSound} height=\"18\" width=\"18\"\r\n                             alt=\"sound\"/>\r\n                        {!auth ? <div className=\"startHeader\">\r\n                                 <Link onClick={() => {\r\n                                     if(reg) {\r\n                                         registration();\r\n                                     }\r\n                                 }} className=\"login\" to=\"/login\">LOG IN</Link>\r\n                                 <Link onClick={registration} className=\"signup\" to=\"/signup\">SIGN UP</Link>\r\n                             </div> : null }\r\n                        <div onClick={(e) => {\r\n                            setMenu(!menu)\r\n                        }}\r\n                             style={auth ? {display: 'flex'} : {display: 'none'}} className=\"menu\">\r\n                            <img className=\"burger\"\r\n                                 src={burger} alt=\"icon\"/>\r\n                            <ul style={{display: menu ? 'block' : 'none'}} className=\"burger-menu\">\r\n                                {/*<li className=\"burger-menu-item bord\"><Link to=\"/ads\">Create ad</Link></li>*/}\r\n                                <li onClick={createAd} className=\"burger-menu-item bord\">Create ad</li>\r\n                                <li onClick={createAd} className=\"burger-menu-item bord\"><span>My ads</span></li>\r\n                                <li className=\"burger-menu-item\" onClick={() => {\r\n                                    logoutQuestion();\r\n                                }}>Log out</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.authReducer.auth,\r\n        reg: state.authReducer.reg,\r\n        mute: state.soundReducer.mute,\r\n        logout: state.authReducer.logoutQuestion,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    muteToggle,\r\n    logoutQuestion,\r\n    createAd,\r\n    registration,\r\n    prohibition,\r\n    authorization\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Main.js",["171","172"],"import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './main.scss';\r\nimport bitcoin from '../../images/bitcoin.svg';\r\nimport Graph from \"../Graph\";\r\nimport RightSector from \"./RightSector\";\r\nimport Dashboard from \"./Dashboard\";\r\n// import SelectList from \"./SelectList\";\r\nimport {closeCongratulation, createAd, logoutQuestion, prohibition} from \"../../redux/actions\";\r\nimport {money, stop} from \"../../redux/actions/music\";\r\nimport JS_FIREWORKS from \"../fireworks\";\r\nimport Time from \"./Time\";\r\nimport Preloader from \"./Preloader\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SelectList from \"./SelectList\";\r\n\r\nconst fire = () => {\r\n    document.getElementById('fireworks-canvas').style.width = '100%'\r\n    document.getElementById('fireworks-canvas').style.height = '100%'\r\n    const firework = JS_FIREWORKS.Fireworks({\r\n        id: 'fireworks-canvas',\r\n        hue: 120,\r\n        particleCount: 100,\r\n        delay: 0,\r\n        minDelay: 5,\r\n        maxDelay: 10,\r\n        boundaries: {\r\n            top: 50,\r\n            bottom: 240,\r\n            left: 50,\r\n            right: 590\r\n        },\r\n        fireworkSpeed: 2,\r\n        fireworkAcceleration: 1.05,\r\n        particleFriction: .95,\r\n        particleGravity: 1.5\r\n    });\r\n    firework.start();\r\n};\r\n\r\nconst Main = ({history, course, lastWin, closeCongratulation, congratulation, currentCourse, money, muteToggle, logout, logoutQuestion, prohibition, userdata, lastWinGame, createAd, createAdProp}) => {\r\n    useEffect(() => {\r\n        userdata();\r\n        fire();\r\n    }, [congratulation])\r\n    useEffect(() => {\r\n        fire();\r\n    }, [])\r\n    let flag = course ? course.length : false;\r\n    return (\r\n        <div className=\"main\">\r\n            <Preloader show={flag}/>\r\n            <div style={{display: congratulation ? \"block\" : \"none\"}} className=\"blur\">\r\n                <canvas width=\"640\" height=\"480\" id=\"fireworks-canvas\" style={{background: 'rgba(0,0,0, .2)'}}/>\r\n                <div className=\"round-dark win\">\r\n                    <h2>Congratulations</h2>\r\n                    <div className=\"text-center\">You won {lastWinGame || 1} <img src={bitcoin} width=\"15\" alt=\"bit\"/></div>\r\n                    <div className=\"win-btn\">\r\n                        <button onClick={() => {\r\n                            closeCongratulation();\r\n                            userdata();\r\n                            document.getElementById('fireworks').pause();\r\n                            money();\r\n                        }} className=\"btn btn-primary\">ADD TO MY WALLET\r\n                        </button>\r\n                        <button disabled onClick={() => {\r\n                            closeCongratulation();\r\n                            userdata();\r\n                            document.getElementById('fireworks').pause();\r\n                            money();\r\n                        }} className=\"btn btn-primary\">WITHDRAW\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{display: createAdProp ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                        <h2>This feature coming soon</h2>\r\n                        <button onClick={() => {\r\n                            createAd();\r\n                        }} className=\"btn btn-primary\">OK\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <main style={{display: flag ? 'block':'none'}}>\r\n                <div className=\"row main\">\r\n                    <div className=\"left-sector\">\r\n                        <div className=\"round globe\">\r\n                            <Time/>\r\n                            <div>\r\n                                <h2 className=\"text-center\"><img src={bitcoin} className=\"m-2\" alt=\"course\"/>\r\n                                    {currentCourse} <span>$</span>\r\n                                </h2>\r\n                                <div>\r\n                                    <SelectList/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"graph-wrapper\">\r\n                                <div className=\"graph\">\r\n                                    <Graph/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Dashboard/>\r\n                    </div>\r\n                    <RightSector/>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        course: state.courseReducer.course,\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        lastWin: state.balanceReducer.lastWin,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        congratulation: state.balanceReducer.congratulation,\r\n        logout: state.authReducer.logoutQuestion,\r\n        createAdProp: state.switchOptions.createAd\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    closeCongratulation,\r\n    money,\r\n    stop,\r\n    logoutQuestion,\r\n    prohibition,\r\n    userdata,\r\n    createAd\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Graph.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\RightSector.js",["173"],"import React, {useEffect, useState} from 'react';\r\nimport deposit from '../../images/deposit.svg';\r\nimport withdraw from '../../images/withdraw.svg';\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {click} from \"../../redux/actions/music\";\r\nimport switchWallet from \"../../images/switch_wallet.svg\";\r\nimport {changeDemo, userdata} from \"../../redux/actions/game\";\r\nimport {createAd} from \"../../redux/actions\";\r\n\r\nconst RightSector = ({balance, lastWinGame, lastgame, wins, colorBlalance, click, userdata, name, isDemo, threewins, changeDemo, createAd, predict}) => {\r\n    const [switcher, setSwitcher] = useState(false);\r\n    const [banner, setBanner] = useState(\"banner one round-dark\");\r\n    const balanceColor = {color: colorBlalance === 'green' ? '#32D74B' : colorBlalance === 'red' ? '#FF453A' : '#FFFFFF'}\r\n\r\n    useEffect(() => {\r\n        const addBanner = setInterval(() => {\r\n            if(banner === \"banner one round-dark\") {\r\n                setBanner(\"banner three round-dark\");\r\n            // } else if (banner === \"banner two round-dark\") {\r\n            //     setBanner(\"banner three round-dark\");\r\n            } else if(banner === \"banner three round-dark\") {\r\n                setBanner(\"banner one round-dark\");\r\n            }\r\n        }, 30000)\r\n        return () => clearInterval(addBanner)\r\n    }, [banner])\r\n    useEffect(() => {\r\n        userdata();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"right-sector\">\r\n            <div style={{display: switcher ? \"block\" : \"none\"}} className=\"blur\">\r\n                <div className=\"round-dark win\">\r\n                    <h2>My bitcoin wallet</h2>\r\n                    {/*<div className=\"text-center\">You are going to play on real <br/> money. Are you sure? </div>*/}\r\n                    <div className=\"win-btn\">\r\n                        <button onClick={() => {\r\n                            changeDemo();\r\n                            setSwitcher(false);\r\n                        }}\r\n                                className=\"btn btn-primary\">{isDemo ? 'Bet real bitcoin' : 'Demo wallet'}\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            userdata();\r\n                            setSwitcher(false);\r\n                        }} className=\"btn btn-primary\">{!isDemo ? 'Stay my wallet' : 'Continue demo'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"score-wrap round-dark\">\r\n                <h2>{isDemo ? \"Demo wallet\" : \"My wallet\"}\r\n                    <span onClick={() => {\r\n                        if(!predict) {\r\n                            setSwitcher(true)\r\n                        }\r\n                    }} className={isDemo ? \"switch-wrapper demo\" : \"switch-wrapper real\"}\r\n                    style={predict ? {filter: 'grayscale(1)', opacity: .5} : null}>\r\n                    <img src={switchWallet} alt=\"\"/>\r\n                </span></h2>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <div className=\"label\">Name</div>\r\n                            <div className=\"score\" id=\"name\">{name}</div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"label\">Wins</div>\r\n                            <div className=\"score\" id=\"wins\">{wins}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <div className=\"label\">Balance</div>\r\n                            <div style={balanceColor} className=\"score\" id=\"balance\">{balance} BTC</div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"label\">Last Win</div>\r\n                            <div className=\"score\" id=\"lastWin\">{lastWinGame || '0.000'} BTC</div>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                {!isDemo\r\n                    ? <div>\r\n                    <Link to=\"/refill\" className=\"btn money-btn green\">DEPOSIT\r\n                    <img src={deposit} alt=\"deposit\"/>\r\n                    </Link>\r\n                    <Link to=\"/withdraw\" className=\"btn money-btn red\">WITHDRAW\r\n                    <img src={withdraw} alt=\"withdraw\"/>\r\n                    </Link>\r\n                    </div>\r\n                    : <div>\r\n                        <button disabled={predict} onClick={() => {setSwitcher(true)}}  className=\"btn money-btn green\">BET REAL BITCOIN\r\n                            {/*<img src={withdraw} alt=\"withdraw\"/>*/}\r\n                        </button>\r\n                        <button onClick={createAd} className=\"btn money-btn friends\">BETS WITH FRIENDS\r\n                            {/*<img src={deposit} alt=\"deposit\"/>*/}\r\n                        </button>\r\n\r\n                    </div>}\r\n            </div>\r\n            <div onClick={() => {\r\n                window.location.href = 'https://bitrxapp.com/?gb';\r\n            }} className={banner}>\r\n                <button style={{display: banner !== \"banner one round-dark\" ? \"none\" : \"block\"}} className=\"btn learn-more\">Learn more</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        balance: state.balanceReducer.balance,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        lastgame: state.balanceReducer.lastgame,\r\n        colorBlalance: state.balanceReducer.colorBlalance,\r\n        wins: state.balanceReducer.wins,\r\n        name: state.balanceReducer.name,\r\n        threewins: state.balanceReducer['3wins'],\r\n        isDemo: state.balanceReducer.isDemo,\r\n        predict: state.balanceReducer.predict,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    click,\r\n    userdata,\r\n    changeDemo,\r\n    createAd\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSector);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Dashboard.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\SelectList.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\index.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\entry.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\index.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\store.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\types.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\api\\User.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\api\\Api.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\game.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Refill.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Btc.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Usd.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\sound\\Sound.js",["174","175"],"import React, {useRef, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {stop} from '../redux/actions/music';\r\n\r\nconst Sound = ({play, param, stop, mute}) => {\r\n    const audRef = useRef(null);\r\n    const handlePlay = () => {\r\n        audRef.current.play();\r\n    }\r\n    const muted = () => {\r\n        audRef.current.muted = !mute;\r\n    }\r\n    useEffect(() => {\r\n        if (param.id === play) {\r\n            audRef.current.id === 'fireworks' ? audRef.current.volume = 0.3 : audRef.current.volume = 0.7;\r\n            handlePlay();\r\n        }\r\n        stop();\r\n    }, [param.id, play, handlePlay]);\r\n    useEffect(() => {\r\n        muted();\r\n    }, [muted]);\r\n    return (\r\n        <div className=\"sound\">\r\n            <audio ref={audRef} id={param.id} src={param.effect}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        play: state.soundReducer.play,\r\n        mute: state.soundReducer.mute\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    stop\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sound);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\sound\\Playlist.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\sound.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\music.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\fireworks.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Time.js",["176"],"import React, {useEffect, useState} from 'react';\r\nimport {geoposition} from \"../../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Time = ({geo, geoposition}) => {\r\n    useEffect(() => {\r\n        geoposition()\r\n    },[]);\r\n    useEffect(() => {\r\n        const clock = setInterval(() => setTime(new Date().toLocaleTimeString()), 1000);\r\n        return () => clearInterval(clock);\r\n    }, [])\r\n    let [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    return (\r\n        <div className=\"time\">\r\n            <h2 className=\"time-text\">{time.slice(0, 5)}</h2>\r\n            <div className=\"label text-center\">{geo || <span style={{fontSize: \"10px\"}}>Please, allow location access</span>}</div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        geo: state.geoReducer.geoposition,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    geoposition\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Time);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Rates.js",["177","178"],"import React, {useEffect, useState} from 'react';\r\n// import arrup from \"../../images/arrup.png\";\r\nimport person from \"../../images/person.svg\";\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\n// import arrdown from \"../../images/arrdown.png\";\r\nimport {rates} from \"../../redux/actions/game\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Rates = ({rates, down, up, downBets, upBets}) => {\r\n    const bankCoin = new Array(Math.ceil(downBets+upBets)).fill(downBets+upBets);\r\n    const upCoin = new Array(up).fill('up');\r\n    const downCoin = new Array(down).fill('down');\r\n    const fillBank = bankCoin.map((coin, index) => {\r\n        if(index > 9) {return null;}\r\n       return (<div key={index + coin} style={{height: \"34px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>);\r\n    })\r\n    const fillDown = downCoin.map((coin, index) => {\r\n        if(index > 9) {return null;}\r\n        return (<div key={index + coin} style={{height: \"34px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>)\r\n    })\r\n    const fillUp = upCoin.map((coin, index) => {\r\n        if(index > 9) {return null}\r\n        return (<div key={index + coin} style={{height: \"34px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>)\r\n    })\r\n    useEffect(() => {\r\n        const getRates = setInterval(() => {\r\n            rates();\r\n        }, 1000);\r\n        return () => clearInterval(getRates);\r\n    }, [])\r\n    const bank = downBets + upBets;\r\n    // const rateUp = 10 * ((up / down) ? (up / down) : 1);\r\n    // const rateDown = 10 * ((down / up) ? (down / up) : 1);\r\n    return (\r\n        <div className=\"round rates\">\r\n            <h2 className=\"text-center\">Bets in progress</h2>\r\n            <div className=\"wrap-table\">\r\n                <div className=\"rates-col rates-up\">\r\n                    {/*<img className=\"arrow\" src={arrup} alt=\"arrow\"/>*/}\r\n                    {fillUp.length ? fillUp : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 persons\">{up}<img className=\"mb-1\" src={person} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div onClick={rates} className=\"rates-col bank\">\r\n                    {/*<img className=\"arrow middle\" src={bitcoin} alt=\"arrow\"/>*/}\r\n                    {bankCoin[0] > 0 ? fillBank : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 nowrap persons\">{bank.toFixed(3)}<img className=\"bank-img\" width=\"15\"\r\n                                                                                    height=\"20\"\r\n                                                                                    src={bitcoin} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"rates-col rates-down\">\r\n                    {/*<img className=\"arrow\" src={arrdown} alt=\"arrow\"/>*/}\r\n                    {fillDown.length ? fillDown : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 persons\">{down}<img className=\"mb-1\" src={person} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        down: state.balanceReducer.down,\r\n        up: state.balanceReducer.up,\r\n        downBets: state.balanceReducer.downBets,\r\n        upBets: state.balanceReducer.upBets\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    rates\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rates);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Preloader.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\game.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Rect\\Rect.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Start\\Start.js",["179","180","181"],"import React, {useState, useEffect} from 'react';\r\nimport './start.scss';\r\nimport Graph from \"../Graph\";\r\nimport Time from \"../Main/Time\";\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport arrowDown from \"../../images/arrowDown.svg\";\r\nimport arrowUp from \"../../images/arrowUp.svg\";\r\nimport bull from \"../../images/bull_start.png\";\r\nimport bear from \"../../images/bear_start.png\";\r\nimport Rect from \"../Main/Rect/Rect\";\r\nimport Preloader from \"../Main/Preloader\";\r\nimport bitsybets from \"../../images/BITCYBETS.svg\";\r\nimport coin from \"../../images/coin.svg\";\r\n\r\nconst Start = ({currentCourse, course, history, lastSeconds}) => {\r\n    const [timeGame, setTimeGame] = useState(false);\r\n    const [bet, setBet] = useState('');\r\n    const [predict, setPredict] = useState('');\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0) {\r\n            setTimeGame(true);\r\n        }\r\n    }, [lastSeconds])\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0) {\r\n            if (bet === 'down' && currentCourse < course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n            } else if (bet === 'down' && currentCourse > course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n            } else if (bet === 'up' && currentCourse > course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n            } else if (bet === 'up' && currentCourse < course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n            } else {\r\n                setBet('');\r\n            }\r\n        }\r\n\r\n    }, [currentCourse])\r\n    return (\r\n        <div className=\"start\">\r\n            {/*<div style={{display: predict === 'win' ? \"block\" : \"none\"}} className=\"blur soon\">*/}\r\n            {/*    <div className=\"round-dark win\">*/}\r\n            {/*        <div className=\"win-btn\">*/}\r\n            {/*            <h2>Sorry, you're out of luck! <br/> try again!</h2>*/}\r\n            {/*            <button onClick={() => {*/}\r\n            {/*                setPredict('');*/}\r\n            {/*                setBet('');*/}\r\n            {/*            }} className=\"btn btn-primary\">OK*/}\r\n            {/*            </button>*/}\r\n            {/*        </div>*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n            <div style={{display: predict ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                       <span onClick={() => {\r\n                           setPredict('');\r\n                           setBet('');\r\n                       }} className=\"back\">&#10008;</span>\r\n                        <h2>You did great! <br/> Join now!</h2>\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/login')\r\n                        }} className=\"btn btn-primary\">LOG IN\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/signup')\r\n                        }} className=\"btn btn-primary\">SIGN UP\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"round round-dark\">\r\n                <div className=\"bull-start\"><img src={bull} alt=\"bull\"/></div>\r\n                <div className=\"bear-start\"><img src={bear} alt=\"bear\"/></div>\r\n                <div className=\"text text-center\">\r\n                    <span className=\"gold\">Real ICO</span>\r\n                    <h2>\r\n                        <span style={{fontSize: \"48px\", letterSpacing: \"5px\"}} className=\"gold\">BITCY</span>BETS\r\n                    </h2>\r\n                    <p style={{fontSize: \"36px\"}} className=\"mt-3\">Make real Bitcoin bets</p>\r\n                </div>\r\n                <div className=\"dark\">\r\n                    <Time/>\r\n                    <div>\r\n                        <h2 className=\"text-center\"><img src={bitcoin} className=\"m-2\" alt=\"course\"/>\r\n                            {currentCourse} <span>$</span>\r\n                        </h2>\r\n                        <div>\r\n                            {/*<SelectList/>*/}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: !currentCourse ? \"none\" : \"block\"}} className=\"graph\">\r\n                        <Graph gradient1={20} gradient2={150} chartHeight={200}/>\r\n                    </div>\r\n                    <div style={{display: currentCourse ? \"none\" : \"block\"}}  className=\"load\">\r\n                        <div className=\"wrap-img-preload\">\r\n                            <img className=\"coin1\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin2\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin3\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin4\"  src={coin} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"wrap-btn\">\r\n                            <button disabled={bet || !currentCourse} onClick={() => setBet('down')}\r\n                                    className=\"btn green predict-btn\"\r\n                                    id=\"down\">PREDICT UP\r\n                                <img src={arrowUp} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect start={timeGame} infinite={'infinity'} idButton={'down'}\r\n                                      mode={timeGame ? 'rectUp' : ''}/>\r\n                            </button>\r\n                            <button disabled={bet || !currentCourse} onClick={() => setBet('up')}\r\n                                    className=\"btn red predict-btn\"\r\n                                    id=\"down\">PREDICT DOWN\r\n                                <img src={arrowDown} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect infinite={'infinity'} idButton={'down'} mode={timeGame ? 'rectDown' : ''}/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"bg\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        course: state.courseReducer.course,\r\n        lastSeconds: state.courseReducer.lastSeconds\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Start);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Support.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Ads\\Ads.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Withdraw.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\CompleteWith.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\CompletePay.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Reset.js",[],{"ruleId":"182","severity":1,"message":"183","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":11},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":18,"column":8,"nodeType":"192","endLine":18,"endColumn":10,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":48,"column":25,"nodeType":"196","endLine":48,"endColumn":71},{"ruleId":"182","severity":1,"message":"197","line":15,"column":9,"nodeType":"184","messageId":"185","endLine":15,"endColumn":13},{"ruleId":"190","severity":1,"message":"198","line":46,"column":8,"nodeType":"192","endLine":46,"endColumn":24,"suggestions":"199"},{"ruleId":"190","severity":1,"message":"198","line":30,"column":8,"nodeType":"192","endLine":30,"endColumn":10,"suggestions":"200"},{"ruleId":"190","severity":1,"message":"201","line":10,"column":11,"nodeType":"202","endLine":12,"endColumn":6},{"ruleId":"190","severity":1,"message":"203","line":19,"column":8,"nodeType":"192","endLine":19,"endColumn":36,"suggestions":"204"},{"ruleId":"190","severity":1,"message":"205","line":8,"column":7,"nodeType":"192","endLine":8,"endColumn":9,"suggestions":"206"},{"ruleId":"182","severity":1,"message":"207","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":35},{"ruleId":"190","severity":1,"message":"208","line":30,"column":8,"nodeType":"192","endLine":30,"endColumn":10,"suggestions":"209"},{"ruleId":"182","severity":1,"message":"210","line":12,"column":8,"nodeType":"184","messageId":"185","endLine":12,"endColumn":17},{"ruleId":"182","severity":1,"message":"211","line":13,"column":8,"nodeType":"184","messageId":"185","endLine":13,"endColumn":17},{"ruleId":"190","severity":1,"message":"212","line":44,"column":8,"nodeType":"192","endLine":44,"endColumn":23,"suggestions":"213"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["214"],"no-negated-in-lhs",["215"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authorization'. Either include it or remove the dependency array. If 'authorization' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["216"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'userdata'. Either include it or remove the dependency array. If 'userdata' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["217"],["218"],"The 'muted' function makes the dependencies of useEffect Hook (at line 22) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'muted' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'stop'. Either include it or remove the dependency array. If 'stop' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["219"],"React Hook useEffect has a missing dependency: 'geoposition'. Either include it or remove the dependency array. If 'geoposition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["220"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'rates'. Either include it or remove the dependency array. If 'rates' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["221"],"'Preloader' is defined but never used.","'bitsybets' is defined but never used.","React Hook useEffect has missing dependencies: 'bet', 'course', and 'lastSeconds'. Either include them or remove the dependency array.",["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [authorization]",{"range":"237","text":"238"},"Update the dependencies array to be: [congratulation, userdata]",{"range":"239","text":"240"},"Update the dependencies array to be: [userdata]",{"range":"241","text":"242"},"Update the dependencies array to be: [param.id, play, handlePlay, stop]",{"range":"243","text":"244"},"Update the dependencies array to be: [geoposition]",{"range":"245","text":"246"},"Update the dependencies array to be: [rates]",{"range":"247","text":"248"},"Update the dependencies array to be: [bet, course, currentCourse, lastSeconds]",{"range":"249","text":"250"},[870,872],"[authorization]",[1620,1636],"[congratulation, userdata]",[1422,1424],"[userdata]",[588,616],"[param.id, play, handlePlay, stop]",[233,235],"[geoposition]",[1415,1417],"[rates]",[1695,1710],"[bet, course, currentCourse, lastSeconds]"]