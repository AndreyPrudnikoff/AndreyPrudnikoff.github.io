[{"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\index.js":"1","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\App.js":"2","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\reportWebVitals.js":"3","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\store.js":"4","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\gotodesktop.js":"5","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\restore.js":"6","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Support.js":"7","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Reset.js":"8","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Btc.js":"9","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Auth.js":"10","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Refill.js":"11","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Header\\Header.js":"12","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompletePay.js":"13","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Start\\Start.js":"14","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Usd.js":"15","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Invite.js":"16","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Withdraw.js":"17","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompleteWith.js":"18","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\Ads.js":"19","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Playlist.js":"20","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Main.js":"21","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\index.js":"22","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\index.js":"23","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\music.js":"24","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Preloader.js":"25","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Graph.js":"26","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Time.js":"27","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rect\\Rect.js":"28","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\game.js":"29","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\User.js":"30","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\ru.js":"31","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\en.js":"32","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Online.js":"33","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rates.js":"34","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\RightSector.js":"35","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\fireworks.js":"36","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Dashboard.js":"37","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\types.js":"38","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Sound.js":"39","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\game.js":"40","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\sound.js":"41","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\entry.js":"42","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\Api.js":"43","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Timer.js":"44","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Presentation.js":"45","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step1.js":"46","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step3.js":"47","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step5.js":"48","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step4.js":"49","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step2.js":"50","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\index.js":"51","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\index.js":"52","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\ImagePreview.js":"53","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\Tabs.js":"54","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\FormInput.js":"55","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\index.js":"56","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\index.js":"57","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\index.js":"58","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\index.js":"59","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\useImagePreview.js":"60","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\Duration.js":"61","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\Method.js":"62","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\Audience.js":"63","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\Footer.js":"64","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\components\\index.js":"65","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\components\\RadioButtonBlock.js":"66"},{"size":591,"mtime":1614091503470,"results":"67","hashOfConfig":"68"},{"size":4832,"mtime":1614330813142,"results":"69","hashOfConfig":"68"},{"size":375,"mtime":1614091503473,"results":"70","hashOfConfig":"68"},{"size":213,"mtime":1614091503473,"results":"71","hashOfConfig":"68"},{"size":703,"mtime":1614077203770,"results":"72","hashOfConfig":"68"},{"size":3941,"mtime":1614267299832,"results":"73","hashOfConfig":"68"},{"size":1879,"mtime":1614266148398,"results":"74","hashOfConfig":"68"},{"size":4643,"mtime":1614267107952,"results":"75","hashOfConfig":"68"},{"size":7011,"mtime":1614268919723,"results":"76","hashOfConfig":"68"},{"size":12459,"mtime":1614269045034,"results":"77","hashOfConfig":"68"},{"size":5208,"mtime":1614265868722,"results":"78","hashOfConfig":"68"},{"size":10048,"mtime":1614330813177,"results":"79","hashOfConfig":"68"},{"size":1440,"mtime":1614266243057,"results":"80","hashOfConfig":"68"},{"size":8619,"mtime":1614329064985,"results":"81","hashOfConfig":"68"},{"size":4384,"mtime":1614266025599,"results":"82","hashOfConfig":"68"},{"size":3532,"mtime":1614265690058,"results":"83","hashOfConfig":"68"},{"size":3638,"mtime":1614266122072,"results":"84","hashOfConfig":"68"},{"size":1581,"mtime":1614266391240,"results":"85","hashOfConfig":"68"},{"size":601,"mtime":1614330813150,"results":"86","hashOfConfig":"68"},{"size":1652,"mtime":1614333619701,"results":"87","hashOfConfig":"68"},{"size":7656,"mtime":1614267463726,"results":"88","hashOfConfig":"68"},{"size":2400,"mtime":1614091503472,"results":"89","hashOfConfig":"68"},{"size":367,"mtime":1614091503473,"results":"90","hashOfConfig":"68"},{"size":1301,"mtime":1614333559549,"results":"91","hashOfConfig":"68"},{"size":964,"mtime":1614091503410,"results":"92","hashOfConfig":"68"},{"size":10631,"mtime":1614091503408,"results":"93","hashOfConfig":"68"},{"size":970,"mtime":1614091503411,"results":"94","hashOfConfig":"68"},{"size":232,"mtime":1614091503410,"results":"95","hashOfConfig":"68"},{"size":2184,"mtime":1614091503471,"results":"96","hashOfConfig":"68"},{"size":1631,"mtime":1614091503405,"results":"97","hashOfConfig":"68"},{"size":11082,"mtime":1614330813186,"results":"98","hashOfConfig":"68"},{"size":8900,"mtime":1614275433423,"results":"99","hashOfConfig":"68"},{"size":2659,"mtime":1614251434317,"results":"100","hashOfConfig":"68"},{"size":3986,"mtime":1614246553795,"results":"101","hashOfConfig":"68"},{"size":7505,"mtime":1614331725228,"results":"102","hashOfConfig":"68"},{"size":9768,"mtime":1614091503416,"results":"103","hashOfConfig":"68"},{"size":17917,"mtime":1614334002172,"results":"104","hashOfConfig":"68"},{"size":1639,"mtime":1614333441228,"results":"105","hashOfConfig":"68"},{"size":1192,"mtime":1614333168639,"results":"106","hashOfConfig":"68"},{"size":3814,"mtime":1614091503472,"results":"107","hashOfConfig":"68"},{"size":1594,"mtime":1614333475327,"results":"108","hashOfConfig":"68"},{"size":2595,"mtime":1614274924099,"results":"109","hashOfConfig":"68"},{"size":445,"mtime":1614091503405,"results":"110","hashOfConfig":"68"},{"size":1720,"mtime":1614269502354,"results":"111","hashOfConfig":"68"},{"size":627,"mtime":1614276407235,"results":"112","hashOfConfig":"68"},{"size":1878,"mtime":1614275433411,"results":"113","hashOfConfig":"68"},{"size":1987,"mtime":1614275433412,"results":"114","hashOfConfig":"68"},{"size":165,"mtime":1614275433413,"results":"115","hashOfConfig":"68"},{"size":163,"mtime":1614275433412,"results":"116","hashOfConfig":"68"},{"size":2284,"mtime":1614275433412,"results":"117","hashOfConfig":"68"},{"size":255,"mtime":1614330813174,"results":"118","hashOfConfig":"68"},{"size":73,"mtime":1614330813166,"results":"119","hashOfConfig":"68"},{"size":958,"mtime":1614330813168,"results":"120","hashOfConfig":"68"},{"size":1589,"mtime":1614330813165,"results":"121","hashOfConfig":"68"},{"size":3764,"mtime":1614330928404,"results":"122","hashOfConfig":"68"},{"size":39,"mtime":1614330813166,"results":"123","hashOfConfig":"68"},{"size":39,"mtime":1614330813163,"results":"124","hashOfConfig":"68"},{"size":37,"mtime":1614330813171,"results":"125","hashOfConfig":"68"},{"size":37,"mtime":1614330813168,"results":"126","hashOfConfig":"68"},{"size":272,"mtime":1614330813184,"results":"127","hashOfConfig":"68"},{"size":939,"mtime":1614330813164,"results":"128","hashOfConfig":"68"},{"size":1050,"mtime":1614330813169,"results":"129","hashOfConfig":"68"},{"size":933,"mtime":1614330813163,"results":"130","hashOfConfig":"68"},{"size":266,"mtime":1614330813167,"results":"131","hashOfConfig":"68"},{"size":67,"mtime":1614330813170,"results":"132","hashOfConfig":"68"},{"size":497,"mtime":1614330813169,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1cuy0ak",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"136"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"136"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"136"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"136"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\index.js",[],["277","278"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\App.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\reportWebVitals.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\store.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\gotodesktop.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\restore.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Support.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Reset.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Btc.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Auth.js",["279"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport './auth.scss';\r\nimport {authorization, betWin, registration} from \"../../redux/actions\";\r\nimport {User} from \"../../api/User\";\r\nimport {fireworks, muteToggle, playClick} from \"../../redux/actions/music\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nconst Auth = ({reg, authorization, registration, muteToggle, mute, betWin, fireworks, history, widthMode, currentLang, playClick}) => {\r\n    const [password, setPassword] = useState(true)\r\n    const [passwordConfirm, setPasswordConfirm] = useState(true)\r\n    const [name, setName] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [confpass, setConfpass] = useState('')\r\n    const [code, setCode] = useState('')\r\n    const [enterCode, setEnterCode] = useState(false)\r\n    const [err, setErr] = useState('')\r\n\r\n    const LANG = currentLang === \"en\" ? EN : RU\r\n\r\n    const phoneRef = useRef(null);\r\n    const moveCaretToEnd = () => {\r\n        if (phoneRef.createTextRange) {\r\n            const r = phoneRef.createTextRange();\r\n            r.collapse(false);\r\n            r.select();\r\n        }\r\n    }\r\n    const clearData = () => {\r\n        setName('');\r\n        setPhone('');\r\n        setEmail('');\r\n        setPass('');\r\n        setConfpass('');\r\n        setErr('');\r\n        setCode('');\r\n        setEnterCode(false);\r\n    }\r\n    const setPhoneNumber = (value) => {\r\n        setPhone(value);\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const body = JSON.stringify({name, phone, email, pass, confpass});\r\n        if (confpass.length < 8 || confpass.length < 8) {\r\n            setErr('Password length must be 8 characters')\r\n        } else {\r\n            User.register(body)\r\n                .then(data => {\r\n                    if (data.data.status === \"success\") {\r\n                        setEnterCode(true);\r\n                    } else {\r\n                        if (data.data.error) {\r\n                            setErr(data.data.error);\r\n                        } else return false;\r\n                    }\r\n                })\r\n                .catch(error => setErr(error.response.data.error))\r\n        }\r\n    }\r\n    const codeSubmit = (e) => {\r\n        e.preventDefault();\r\n        User.code({code: code})\r\n            .then(res => {\r\n                if (res.data.status === \"success\") {\r\n                    if (widthMode === \"desktop\") {\r\n                        sessionStorage.setItem('token', res.data.data.accessToken);\r\n                        authorization();\r\n                        history.push('/game');\r\n                        if (!mute) {\r\n                            muteToggle();\r\n                        }\r\n                        betWin();\r\n                        fireworks();\r\n                    } else {\r\n                        history.push(\"/gotodesktop\")\r\n                    }\r\n                } else {\r\n                    if (res.data.error) {\r\n                        setErr(res.data.error);\r\n                    } else return false;\r\n                }\r\n            })\r\n            .catch(error => setErr(error.response.data.error))\r\n    }\r\n\r\n    const handleLogin = event => {\r\n        event.preventDefault();\r\n        const body = JSON.stringify({phone, pass});\r\n\r\n        User.login(body)\r\n            .then(res => res)\r\n            .then(data => {\r\n                    // if (widthMode === \"desktop\") {\r\n                        if (data.data.status === \"success\") {\r\n                            sessionStorage.setItem('token', data.data.data.accessToken);\r\n                            history.push('/game');\r\n                            return authorization();\r\n                        } else if (data.data.error) {\r\n                            return setErr(data.data.error);\r\n                        } else {\r\n                            return setErr('error, try again later')\r\n                        }\r\n                    // } else {\r\n                    //     history.push(\"/gotodesktop\")\r\n                    // }\r\n                }\r\n            )\r\n            .catch(error => setErr(error.response.data.error));\r\n        // authorization();\r\n    }\r\n    if (reg) {\r\n\r\n        if (enterCode) {\r\n            return (\r\n                <div className=\"round-dark auth\">\r\n                         <span onClick={() => {\r\n                             setEnterCode(false);\r\n                             clearData();\r\n                             playClick()\r\n                         }} className=\"back\">&larr;</span>\r\n                    <h2>Enter code</h2>\r\n                    <form onSubmit={e => codeSubmit(e)}>\r\n                        <div className=\"\">\r\n                            <input value={code} onInput={e => setCode(e.target.value)} id=\"code\" name=\"code\" type=\"text\"\r\n                                   required/>\r\n                        </div>\r\n                        <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                        <button type=\"submit\" onClick={playClick}>SEND</button>\r\n                    </form>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"round-dark auth\">\r\n                <span onClick={() => {\r\n                    registration();\r\n                    clearData();\r\n                    playClick()\r\n                }} className=\"back\">&larr;</span>\r\n                    <h2 className={currentLang}>{LANG.Auth.Register.title}</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"\">\r\n                            <label className={currentLang} htmlFor=\"name\">{LANG.Auth.Register.nameTitle}</label>\r\n                            <input onChange={e => {\r\n                                setName(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={name}\r\n                                   placeholder={LANG.Auth.Register.name}\r\n                                   id=\"name\" name=\"name\" type=\"text\" required/>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label className={currentLang} htmlFor=\"phone\">{LANG.Auth.Register.phoneTitle}</label>\r\n                            <PhoneInput onChange={e => {\r\n                                setErr('');\r\n                                setPhoneNumber(e);\r\n                                moveCaretToEnd();\r\n                            }} id=\"phone\" ref={phoneRef} limitMaxLength={true} placeholder={LANG.Auth.Register.phone}\r\n                                        value={phone} international\r\n                                        displayInitialValueAsLocalNumber required/>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label className={currentLang} htmlFor=\"email\">{LANG.Auth.Register.emailTitle}</label>\r\n                            <input onChange={e => {\r\n                                setEmail(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={email}\r\n                                   placeholder={LANG.Auth.Register.email}\r\n                                   id=\"email\" name=\"email\" type=\"email\" required/>\r\n                        </div>\r\n                        <div className={password ? 'pass' : 'text'}>\r\n                            <span onClick={() => {setPassword(!password); playClick()}} className=\"eye\"/>\r\n                            <label className={currentLang} htmlFor=\"password\">{LANG.Auth.Register.password}</label>\r\n                            <input min='8' onChange={e => {\r\n                                setPass(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={pass}\r\n                                   id=\"password\" name=\"password\" type={password ? 'password' : 'text'} required/>\r\n                        </div>\r\n                        <div className={passwordConfirm ? 'pass' : 'text'}>\r\n                            <span onClick={() => {setPasswordConfirm(!passwordConfirm); playClick()}} className=\"eye\"/>\r\n                            <label className={currentLang} htmlFor=\"passwordConfirm\">{LANG.Auth.Register.passwordRepeat}</label>\r\n                            <input min='8' onChange={e => {\r\n                                setConfpass(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={confpass}\r\n                                   id=\"passwordConfirm\" name=\"passwordConfirm\"\r\n                                   type={passwordConfirm ? 'password' : 'text'}\r\n                                   required/>\r\n                        </div>\r\n                        <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                        <button className={currentLang} onClick={playClick}>{LANG.Auth.Register.signUp}</button>\r\n                        <Link to='/support' className={currentLang + \" support-link\"} onClick={playClick}>{LANG.support}</Link>\r\n                    </form>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    } else {\r\n        return (\r\n            <div className=\"round-dark auth\">\r\n               <span onClick={() => {\r\n                   clearData();\r\n                   playClick()\r\n               }} className=\"back\"><Link to=\"/\">&larr;</Link></span>\r\n                <h2 className={currentLang}>{LANG.Auth.Login.title}</h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"\">\r\n                        <label className={currentLang} htmlFor=\"phone\">{LANG.Auth.Login.phoneTitle}</label>\r\n                        <PhoneInput onChange={e => {\r\n                            setPhone(e);\r\n                            setErr('');\r\n                        }} id=\"phone\" limitMaxLength={true} placeholder={LANG.Auth.Login.phone} value={phone} international\r\n                                    displayInitialValueAsLocalNumber required/>\r\n                    </div>\r\n                    <div className={password ? 'pass' : 'text'}>\r\n                        <span onClick={() => {setPassword(!password); playClick()}} className=\"eye\"/>\r\n                        <label className={currentLang} htmlFor=\"password\">{LANG.Auth.Login.password}</label>\r\n                        <input onInput={e => {\r\n                            setPass(e.target.value);\r\n                            setErr('');\r\n                        }} id=\"password\" name=\"password\"\r\n                               type={password ? 'password' : 'text'} required/>\r\n                    </div>\r\n                    <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                    <Link to=\"/restore\" className={currentLang + \" forgot mb-3\"} onClick={playClick}>{LANG.Auth.Login.forgotPassword}</Link>\r\n                    <button className={currentLang} onClick={playClick}>{LANG.Auth.Login.loginIn}</button>\r\n                    <span className={currentLang}>{LANG.Auth.Login.or}</span>\r\n                    <button className={currentLang} onClick={e => {\r\n                        e.preventDefault();\r\n                        registration();\r\n                        clearData();\r\n                        playClick();\r\n                    }}>{LANG.Auth.Login.signUp}\r\n                    </button>\r\n                    <Link to=\"/support\" className={currentLang + \" support-link\"} onClick={playClick}>{LANG.support}</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reg: state.authReducer.reg,\r\n        mute: state.soundReducer.mute,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    authorization,\r\n    registration,\r\n    muteToggle,\r\n    betWin,\r\n    fireworks,\r\n    playClick\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Refill.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Header\\Header.js",["280","281","282","283"],"import React, {useState, useEffect} from 'react';\r\nimport './header.scss';\r\nimport logo from '../../images/logoLeft.svg';\r\nimport burger from '../../images/burger.png';\r\nimport refreshIcon from '../../images/refresh.svg';\r\nimport sound from '../../images/volume-up-solid.svg';\r\nimport noSound from '../../images/volume-mute-solid.svg';\r\nimport signup from '../../images/user_plus.svg';\r\nimport login from '../../images/sign_in.svg';\r\nimport caret from '../../images/lang.svg';\r\nimport russian from '../../images/russian.png';\r\nimport british from '../../images/british.png';\r\nimport bets from '../../images/bets.png';\r\nimport wallet from '../../images/wallet.png';\r\nimport {connect} from \"react-redux\";\r\nimport {playClick} from \"../../redux/actions/music\";\r\nimport {authorization, chooseLang, createAd, logoutQuestion, prohibition, registration, switchView} from \"../../redux/actions\";\r\nimport {Link, useLocation, useHistory} from \"react-router-dom\";\r\nimport {muteToggle} from \"../../redux/actions/music\";\r\n\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\n\r\nconst Header = ({auth, reg, mute, muteToggle, logoutQuestion, createAd, logout, registration, prohibition, authorization, unauthorized, predict, refresh, view, switchView, widthMode, currentLang, chooseLang, playClick}) => {\r\n\r\n    const [menu, setMenu] = useState(false);\r\n    const [showLang, setShowLang] = useState(true);\r\n    const LANG = currentLang === \"en\" ? EN : RU;\r\n    const switchLang = () => setShowLang(!showLang);\r\n    useEffect(() => {\r\n        authorization();\r\n    }, [])\r\n    const handleMute = () => {\r\n        muteToggle();\r\n    }\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n    let isGame = location.pathname === \"/game\";\r\n    const chooseLanguages = () => {\r\n        if (currentLang === \"en\") {\r\n            chooseLang(\"ru\")\r\n        } else {\r\n            chooseLang(\"en\")\r\n        }\r\n        switchLang();\r\n    }\r\n    useEffect(() => {\r\n        if (location.pathname === \"/\" || location.pathname === \"/login\") {\r\n            prohibition();\r\n\r\n        }\r\n    }, [location.pathname])\r\n    return (\r\n        <div>\r\n            <header className=\"header\">\r\n                <div style={{display: logout ? \"block\" : \"none\"}} className=\"blur\">\r\n                    <div className=\"round-dark win\">\r\n                        <h2 className={currentLang}>{LANG.ModalWindows.LogOut.title}</h2>\r\n                        <div className=\"win-btn\">\r\n                            <button onClick={() => {\r\n                                logoutQuestion();\r\n                                sessionStorage.removeItem('token');\r\n                                prohibition();\r\n                                window.location.reload();\r\n                                playClick()\r\n                            }} className=\"btn btn-primary\"><Link to=\"/\" onClick={playClick}>{LANG.ModalWindows.LogOut.btnLogOut}</Link>\r\n                            </button>\r\n                            <button onClick={() => {\r\n                                logoutQuestion();\r\n                                playClick()\r\n                            }} className={currentLang + \" btn btn-primary\"} onClick={playClick}>{LANG.ModalWindows.LogOut.btnContunue}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"wrap-header\">\r\n                    <nav className=\"navbar\">\r\n                        <a onClick={() => {\r\n                            sessionStorage.setItem(\"saveReload\", \"0\");\r\n                            sessionStorage.removeItem('token');\r\n                            window.location.reload();\r\n                            playClick()\r\n                        }} className=\"navbar-brand\">\r\n                            <img src={logo} alt=\"logo\" height=\"23\"/>\r\n                        </a>\r\n                    </nav>\r\n                    <div className=\"header-right\">\r\n                        <div className=\"flag-wrapper\">\r\n                            <img onClick={() => {switchLang(); playClick()}} className=\"flag\"\r\n                                 src={currentLang === \"en\" ? british : russian} width=\"30\" alt=\"lang\"/>\r\n                            <img onClick={() => {chooseLanguages(); playClick()}} style={{display: showLang ? \"none\" : \"inline\"}}\r\n                                 className=\"flag hide-flag\" src={currentLang === \"ru\" ? british : russian} width=\"30\"\r\n                                 alt=\"lang\"/>\r\n                            <img style={{transform: showLang ? \"none\" : \"rotate(180deg)\"}} onClick={() => {switchLang(); playClick()}}\r\n                                 className=\"sound \"\r\n                                 src={caret}\r\n                                 height=\"18\" width=\"18\"\r\n                                 alt=\"lang\"/>\r\n                        </div>\r\n\r\n                        <img onClick={() => {\r\n                            if (sessionStorage.getItem(\"token\")) {\r\n                                sessionStorage.setItem(\"saveReload\", \"1\");\r\n                            }\r\n                            window.location.reload();\r\n                            playClick()\r\n                        }} style={{marginRight: \"30px\"}} className=\"sound reload\" height=\"18\" width=\"18\"\r\n                             src={refreshIcon}\r\n                             alt=\"refresh\"/>\r\n                        <img onClick={() => {handleMute(); playClick()}} className=\"sound \" src={mute ? sound : noSound} height=\"18\" width=\"18\"\r\n                             alt=\"sound\"/>\r\n                        {!auth ? <div className=\"startHeader\">\r\n                            <Link onClick={() => {\r\n                                if (reg) {\r\n                                    registration();\r\n                                }\r\n                                playClick()\r\n                            }} className={currentLang + \" login auth-header\"}\r\n                                  to=\"/login\">{LANG.Auth.Login.loginIn}</Link>\r\n                            <Link onClick={() => {\r\n                                playClick()\r\n                                if (reg) {\r\n                                    registration();\r\n                                }\r\n                            }} className=\"login auth-header-icon\" to=\"/login\">\r\n                                <img width={18} src={login} alt=\"signin\"/>\r\n                            </Link>\r\n                            <Link onClick={() => {registration(); playClick()}} className={currentLang + \" signup auth-header\"}\r\n                                  to=\"/signup\">{LANG.Auth.Login.signUp}</Link>\r\n                            <Link onClick={() => {registration(); playClick()}} className=\"signup auth-header-icon\" to=\"/signup\">\r\n                                <img width={18} src={signup} alt=\"signup\"/></Link>\r\n                        </div> : null}\r\n                        <div onClick={(e) => {\r\n                            playClick()\r\n                            setMenu(!menu)\r\n                        }}\r\n                             style={{\r\n                                 display: auth && isGame ? 'flex' : 'none',\r\n                                 pointerEvents: predict ? \"none\" : \"auto\"\r\n                             }}\r\n                             className=\"menu\">\r\n                            <img className=\"burger\"\r\n                                 src={burger} alt=\"icon\"/>\r\n                            <ul style={{display: menu ? 'block' : 'none'}} className=\"burger-menu\">\r\n                                {/*<li className=\"burger-menu-item bord\"><Link to=\"/ads\">Create ad</Link></li>*/}\r\n\r\n                                <li onClick={() => {createAd(); playClick()}} className=\"burger-menu-item bord\">{LANG.Menu.first}</li>\r\n                                <li onClick={() => {createAd(); playClick()}} className=\"burger-menu-item bord\"><span>{LANG.Menu.second}</span></li>\r\n                                 <li onClick={()=>history.push(\"/intro/1\")} className=\"burger-menu-item bord\"><span>{LANG.Menu.third}</span></li>\r\n                                   \r\n                                <li className=\"burger-menu-item\" onClick={() => {\r\n                                    playClick();\r\n                                    logoutQuestion();\r\n                                }}>{LANG.Menu.exit}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={{display: isGame && widthMode !== \"desktop\" ? \"block\" : \"none\"}} className=\"tabs\">\r\n                    <div className=\"wrap-tabs\">\r\n                        <div onClick={() => {switchView(false); playClick()}} className={view ? \"tab bets\" : \"tab bets active\"}>\r\n                            <img src={bets} alt=\"tab\"/>\r\n                        </div>\r\n                        <div onClick={() => {switchView(true); playClick()}} className={!view ? \"tab wallet\" : \"tab wallet active\"}>\r\n                            <img src={wallet} alt=\"tab\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.authReducer.auth,\r\n        reg: state.authReducer.reg,\r\n        mute: state.soundReducer.mute,\r\n        logout: state.authReducer.logoutQuestion,\r\n        unauthorized: state.authReducer.unauthorized,\r\n        predict: state.balanceReducer.predict,\r\n        widthMode: state.switchOptions.widthMode,\r\n        view: state.switchOptions.view,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    muteToggle,\r\n    logoutQuestion,\r\n    createAd,\r\n    registration,\r\n    prohibition,\r\n    authorization,\r\n    switchView,\r\n    chooseLang,\r\n    playClick\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompletePay.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Start\\Start.js",["284","285","286"],"import React, {useState, useEffect} from 'react';\r\nimport './start.scss';\r\nimport Graph from \"../Graph\";\r\nimport Time from \"../Main/Time\";\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport arrowDown from \"../../images/arrowDown.svg\";\r\nimport arrowUp from \"../../images/arrowUp.svg\";\r\nimport bull from \"../../images/bull_start.png\";\r\nimport bear from \"../../images/bear_start.png\";\r\nimport Rect from \"../Main/Rect/Rect\";\r\nimport Preloader from \"../Main/Preloader\";\r\nimport bitsybets from \"../../images/BITCYBETS.svg\";\r\nimport coin from \"../../images/coin.svg\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport {registration} from \"../../redux/actions\";\r\nimport {playClick, up_down, startWin} from \"../../redux/actions/music\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nconst Start = ({currentCourse, course, history, lastSeconds, userdata, widthMode, registration, currentLang, playClick, up_down, startWin}) => {\r\n    const [timeGame, setTimeGame] = useState(false);\r\n    const [bet, setBet] = useState('');\r\n    const [predict, setPredict] = useState('');\r\n\r\n    const LANG = currentLang === \"en\" ? EN : RU\r\n\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0) {\r\n            setTimeGame(true);\r\n        }\r\n    }, [lastSeconds])\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0) {\r\n            if (bet === 'down' && currentCourse < course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n                startWin()\r\n            } else if (bet === 'down' && currentCourse > course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n                startWin()\r\n            } else if (bet === 'up' && currentCourse > course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n                startWin()\r\n            } else if (bet === 'up' && currentCourse < course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n                startWin()\r\n            } else {\r\n                setBet('');\r\n            }\r\n        }\r\n\r\n    }, [currentCourse])\r\n    return (\r\n        <div  className=\"start\">\r\n            {/*<div style={{display: predict === 'win' ? \"block\" : \"none\"}} className=\"blur soon\">*/}\r\n            {/*    <div className=\"round-dark win\">*/}\r\n            {/*        <div className=\"win-btn\">*/}\r\n            {/*            <h2>Sorry, you're out of luck! <br/> try again!</h2>*/}\r\n            {/*            <button onClick={() => {*/}\r\n            {/*                setPredict('');*/}\r\n            {/*                setBet('');*/}\r\n            {/*            }} className=\"btn btn-primary\">OK*/}\r\n            {/*            </button>*/}\r\n            {/*        </div>*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n            \r\n            \r\n            <div style={{display: predict ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                       <span onClick={() => {\r\n                           setPredict('');\r\n                           setBet('');\r\n                           playClick()\r\n                       }} className=\"chross\">&#10008;</span>\r\n                        <h2 className={currentLang}>{LANG.Main.Modal.title.first} <br/> {currentLang === \"en\" ? LANG.Main.Modal.title.second : null}</h2>\r\n                        {/* <h2>{currentLang === \"en\" ? LANG.Main.Modal.title.first <br/> LANG.Main.Modal.title.second : LANG.Main.Modal.title.first}</h2> */}\r\n                        {/* <h2>You did great! <br/> Join now!</h2> */}\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/login');\r\n                            playClick()\r\n                        }} className={currentLang + \" btn btn-primary\"}>\r\n                            {LANG.Main.Modal.logIn}\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/signup');\r\n                            registration();\r\n                            playClick()\r\n                        }} className={currentLang + \" btn btn-primary\"}>\r\n                            {LANG.Main.Modal.signUp}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`${widthMode}-start round round-dark`}>\r\n                <div className=\"bull-start-mobile\"><img src={bull} width=\"\" alt=\"bull\"/></div>\r\n                <div className=\"bear-start-mobile\"><img src={bear} width=\"\" alt=\"bear\"/></div>\r\n                <div className=\"bull-start\"><img src={bull} alt=\"bull\"/></div>\r\n                <div className=\"bear-start\"><img src={bear} alt=\"bear\"/></div>\r\n                <div className=\"text text-center\">\r\n                    <h2>\r\n                        <span className=\"gold\">BITCY</span>BETS     \r\n                    </h2>\r\n                    <p className={currentLang + \" mt-3\"}>{LANG.Main.Start.content}</p>\r\n                </div>\r\n                <div className=\"dark\">\r\n                    <Time/>\r\n                    <div className=\"course\">\r\n                        <h2 style={{opacity: !currentCourse ? 0 : 1}} className=\"text-center\"><img src={bitcoin} alt=\"course\"/>\r\n                            {currentCourse} <span>$</span>\r\n                        </h2>\r\n                        <div>\r\n                            {/*<SelectList/>*/}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: !currentCourse ? \"none\" : \"block\"}} className=\"graph\">\r\n                        <Graph gradient1={20} gradient2={150} chartHeight={widthMode === \"desktop\" ? 200 : 150}/>\r\n                    </div>\r\n                    <div style={{display: currentCourse ? \"none\" : \"block\"}}  className=\"load\">\r\n                        <div className=\"wrap-img-preload\">\r\n                            <img className=\"coin1\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin2\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin3\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin4\"  src={coin} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"wrap-btn\">\r\n                            <button disabled={bet || !currentCourse} onClick={() => {setBet('down'); up_down()}}\r\n                                    className={currentLang + \" btn green green-start predict-btn\"}\r\n                                    id=\"down\">\r\n                                        <span className={currentLang + \" green\"}>{LANG.Main.Start.btnUp}</span>\r\n                                <img src={arrowUp} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect start={timeGame} infinite={'infinity'} idButton={'down'}\r\n                                      mode={timeGame ? 'rectUp' : ''}/>\r\n                            </button>\r\n                            <button disabled={bet || !currentCourse} onClick={() => {setBet('up'); up_down()}}\r\n                                    className={currentLang + \" btn red red-start predict-btn\"}\r\n                                    id=\"down\">\r\n                                        <span className={currentLang + \" red\"}>{LANG.Main.Start.btnDown}</span>\r\n                                <img src={arrowDown} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect infinite={'infinity'} idButton={'down'} mode={timeGame ? 'rectDown' : ''}/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"bg\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        course: state.courseReducer.course,\r\n        lastSeconds: state.courseReducer.lastSeconds,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    userdata,\r\n    registration,\r\n    playClick,\r\n    up_down,\r\n    startWin\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Start);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Usd.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Invite.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Withdraw.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompleteWith.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\Ads.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Playlist.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Main.js",["287","288"],"import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './main.scss';\r\nimport bitcoin from '../../images/bitcoin.svg';\r\nimport Graph from \"../Graph\";\r\nimport RightSector from \"./RightSector\";\r\nimport Dashboard from \"./Dashboard\";\r\n// import SelectList from \"./SelectList\";\r\nimport {closeCongratulation, closeYourLose, createAd, logoutQuestion, prohibition, switchView} from \"../../redux/actions\";\r\nimport {money, stop, you_lose, add_to_wallet, playClick} from \"../../redux/actions/music\";\r\nimport JS_FIREWORKS from \"../fireworks\";\r\nimport Time from \"./Time\";\r\nimport Preloader from \"./Preloader\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport Rates from \"./Rates\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\nimport Online from \"./Online\";\r\n\r\nconst fire = () => {\r\n    document.getElementById('fireworks-canvas').style.width = '100%'\r\n    document.getElementById('fireworks-canvas').style.height = '100%'\r\n    const firework = JS_FIREWORKS.Fireworks({\r\n        id: 'fireworks-canvas',\r\n        hue: 120,\r\n        particleCount: 100,\r\n        delay: 0,\r\n        minDelay: 5,\r\n        maxDelay: 10,\r\n        boundaries: {\r\n            top: 50,\r\n            bottom: 240,\r\n            left: 50,\r\n            right: 590\r\n        },\r\n        fireworkSpeed: 2,\r\n        fireworkAcceleration: 1.05,\r\n        particleFriction: .95,\r\n        particleGravity: 1.5\r\n    });\r\n    firework.start();\r\n};\r\n\r\nconst Main = ({history, view, switchView, course, lastWin, closeCongratulation, congratulation, yourlose, closeYourLose, currentCourse, money, muteToggle, logout, logoutQuestion, prohibition, userdata, lastWinGame, createAd, createAdProp, widthMode, currentLang, you_lose, add_to_wallet, playClick}) => {\r\n    useEffect(() => {\r\n        userdata();\r\n        fire();\r\n    }, [congratulation])\r\n    useEffect(() => {\r\n        fire();\r\n    }, [])\r\n    useEffect(()=> switchView(false), [])\r\n    const LANG = currentLang === \"en\" ? EN : RU;\r\n    let flag = course ? course.length : false;\r\n    return (\r\n        <div className={`${widthMode}-bg main`}>\r\n            <Preloader show={flag}/>\r\n            <div style={{display: congratulation ? \"block\" : \"none\"}} className=\"blur\">\r\n                <canvas width=\"640\" height=\"480\" id=\"fireworks-canvas\" style={{background: 'rgba(0,0,0, .2)'}}/>\r\n                <div className=\"round-dark win\">\r\n                    <h2 className=\"currentLang\">{LANG.BettingRealMoney.WinningAndLosing.Winning.title}</h2>\r\n                    <div className={currentLang + \" text-center\"}>{LANG.BettingRealMoney.WinningAndLosing.Winning.youWon} {lastWinGame || 1} <img src={bitcoin} width=\"15\" alt=\"bit\"/>\r\n                    </div>\r\n                    <div className=\"win-btn\">\r\n                        <button onClick={() => {\r\n                            closeCongratulation();\r\n                            userdata();\r\n                            document.getElementById('fireworks').pause();\r\n\r\n                            // money();\r\n                            add_to_wallet();\r\n                        }} className={currentLang + \" btn btn-primary\"}>{LANG.BettingRealMoney.WinningAndLosing.Winning.btnAddToWallet}\r\n                        </button>\r\n                        <button disabled onClick={() => {\r\n                            closeCongratulation();\r\n                            userdata();\r\n                            playClick()\r\n                            document.getElementById('fireworks').pause();\r\n                            // money();\r\n                        }} className={currentCourse + \" btn btn-primary\"}>{LANG.BettingRealMoney.WinningAndLosing.Winning.btnWithdraw}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div style={{display: \"block\"}} className=\"blur\" onClick={() => you_lose()}> */}\r\n            <div style={{display: yourlose ? \"block\" : \"none\"}} className=\"blur\">\r\n                <div className=\"round-dark win\">\r\n                    <h2>Your lose</h2>\r\n                    <div className=\"win-btn\">\r\n                        <button onClick={() => {\r\n                            closeYourLose();\r\n                            userdata();\r\n                            playClick()\r\n                        }} className=\"btn btn-primary\">Bet again\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{display: createAdProp ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                        <h2>This feature coming soon</h2>\r\n                        <button onClick={() => {\r\n                            createAd();\r\n                            playClick()\r\n                        }} className=\"btn btn-primary\">OK\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <main style={{display: flag ? 'block' : 'none'}}>\r\n                <div className=\"row main\">\r\n                    <div style={{display: widthMode === \"mobile\" && view ? \"none\" : \"flex\"}} className=\"left-sector\">\r\n                        {widthMode === \"mobile\" ? <Rates/> : <></>}\r\n                        <div className={`${widthMode} round globe`}>\r\n                            {widthMode === \"desktop\" ? <Time/> : <></>}\r\n                            <div>\r\n                                <h2 className=\"text-center\"><img src={bitcoin} className=\"m-2\" alt=\"course\"/>\r\n                                    {currentCourse} <span>$</span>\r\n                                </h2>\r\n                                <div>\r\n                                    {widthMode === \"desktop\" ? <Online/> : <></>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"graph-wrapper\">\r\n                                <div className=\"graph\">\r\n                                    <Graph gradient1={widthMode === \"desktop\" ? undefined : 20}\r\n                                           gradient2={widthMode === \"desktop\" ? undefined : 150}\r\n                                           chartHeight={widthMode === \"desktop\" ? 250 : 150}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Dashboard/>\r\n                    </div>\r\n                    {widthMode === \"desktop\" ? <RightSector/> : <></>}\r\n                    {widthMode === \"mobile\" && view ? <RightSector/> : <></>}\r\n\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        course: state.courseReducer.course,\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        lastWin: state.balanceReducer.lastWin,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        congratulation: state.balanceReducer.congratulation,\r\n        yourlose: state.balanceReducer.yourlose,\r\n        logout: state.authReducer.logoutQuestion,\r\n        createAdProp: state.switchOptions.createAd,\r\n        widthMode: state.switchOptions.widthMode,\r\n        view: state.switchOptions.view,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    closeCongratulation,\r\n    closeYourLose,\r\n    money,\r\n    stop,\r\n    logoutQuestion,\r\n    prohibition,\r\n    userdata,\r\n    createAd,\r\n    you_lose,\r\n    add_to_wallet,\r\n    playClick,\r\n    switchView\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\music.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Preloader.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Graph.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Time.js",["289"],"import React, {useEffect, useState} from 'react';\r\nimport {geoposition} from \"../../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Time = ({geo, geoposition}) => {\r\n    useEffect(() => {\r\n        geoposition()\r\n    },[]);\r\n    useEffect(() => {\r\n        const clock = setInterval(() => setTime(new Date().toLocaleTimeString()), 1000);\r\n        return () => clearInterval(clock);\r\n    }, [])\r\n    let [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    return (\r\n        <div className=\"time\">\r\n            <h2 className=\"time-text\">{time.slice(0, 5)}</h2>\r\n            <div className=\"label text-center\">{geo || <span style={{fontSize: \"10px\"}}>Please, allow location access</span>}</div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        geo: state.geoReducer.geoposition,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    geoposition\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Time);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rect\\Rect.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\game.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\User.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\ru.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\en.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Online.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rates.js",["290","291"],"import React, {useEffect, useState} from 'react';\r\nimport person from \"../../images/person.svg\";\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport {rates} from \"../../redux/actions/game\";\r\nimport {connect} from \"react-redux\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nconst Rates = ({rates, down, up, downBets, upBets, widthMode, currentLang}) => {\r\n    const mobile = widthMode === \"mobile\";\r\n    const LANG = currentLang === \"en\" ? EN : RU\r\n    const bankCoin = new Array(Math.ceil(downBets+upBets)).fill(downBets+upBets);\r\n    const upCoin = new Array(up).fill('up');\r\n    const downCoin = new Array(down).fill('down');\r\n    const fillBank = bankCoin.map((coin, index) => {\r\n        if(index > 9 && !mobile) {return null;}\r\n        if(index > 1 && mobile) {return null;}\r\n       return (<div key={index + coin} style={{height: \"36px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>);\r\n    })\r\n    const fillDown = downCoin.map((coin, index) => {\r\n        if(index > 9 && !mobile) {return null;}\r\n        if(index > 1 && mobile) {return null;}\r\n        return (<div key={index + coin} style={{height: \"36px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>)\r\n    })\r\n    const fillUp = upCoin.map((coin, index) => {\r\n        if(index > 9 && !mobile) {return null}\r\n        if(index > 1 && mobile) {return null}\r\n        return (<div key={index + coin} style={{height: \"36px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>)\r\n    })\r\n    useEffect(() => {\r\n        const getRates = setInterval(() => {\r\n            rates();\r\n        }, 1000);\r\n        return () => clearInterval(getRates);\r\n    }, [])\r\n    const bank = downBets + upBets;\r\n    // const rateUp = 10 * ((up / down) ? (up / down) : 1);\r\n    // const rateDown = 10 * ((down / up) ? (down / up) : 1);\r\n    return (\r\n        <div className=\"round rates\">\r\n            <h2 className={currentLang + \" text-center\"}>{LANG.BettingRealMoney.UsualState.BetsInProgress.title}</h2>\r\n            <div className=\"wrap-table\">\r\n                <div className=\"rates-col rates-up\">\r\n                    {/*<img className=\"arrow\" src={arrup} alt=\"arrow\"/>*/}\r\n                    {fillUp.length ? fillUp : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 persons\">{up}<img className=\"mb-1\" src={person} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div onClick={rates} className=\"rates-col bank\">\r\n                    {/*<img className=\"arrow middle\" src={bitcoin} alt=\"arrow\"/>*/}\r\n                    {bankCoin[0] > 0 ? fillBank : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 nowrap persons\">{bank.toFixed(4)}<img className=\"bank-img\" width=\"15\"\r\n                                                                                    height=\"20\"\r\n                                                                                    src={bitcoin} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"rates-col rates-down\">\r\n                    {/*<img className=\"arrow\" src={arrdown} alt=\"arrow\"/>*/}\r\n                    {fillDown.length ? fillDown : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 persons\">{down}<img className=\"mb-1\" src={person} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        down: state.balanceReducer.down,\r\n        up: state.balanceReducer.up,\r\n        downBets: state.balanceReducer.downBets,\r\n        upBets: state.balanceReducer.upBets,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    rates\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rates);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\RightSector.js",["292"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\fireworks.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Dashboard.js",["293","294"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\types.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Sound.js",["295","296"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\game.js",["297"],"import {\r\n    BET_LOSE,\r\n    BET_WIN, CHANGE_DEMO,\r\n    CLEAR_BET,\r\n    CLOSE_CONGRATULATION, CLOSE_YOURLOSE,\r\n    GET_RATES,\r\n    GET_USER_DATA, GOAWAY,\r\n    SET_BET_DOWN,\r\n    SET_BET_UP\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    balance: 0,\r\n    lastWin: 0,\r\n    lastWinGame: 0,\r\n    lastgame: 0,\r\n    wins: 0,\r\n    '3wins': false,\r\n    btcWallet: '',\r\n    isDemo: undefined,\r\n    congratulation: false,\r\n    predict: '',\r\n    colorBlalance: 'white',\r\n    down: 0,\r\n    up: 0,\r\n    upBets: 0,\r\n    downBets: 0,\r\n    online: 0,\r\n    yourlose: false\r\n\r\n}\r\nexport const balanceReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case CHANGE_DEMO:\r\n            return {\r\n                ...state,\r\n                isDemo: !state.isDemo\r\n            };\r\n        case GET_USER_DATA:\r\n            if (action.payload.isDemo) {\r\n                return {\r\n                    ...state,\r\n                    '3wins': action.payload['3wins'],\r\n                    balance: action.payload.demoBalance,\r\n                    btcWallet: action.payload.btcWallet,\r\n                    wins: action.payload.wins,\r\n                    lastWin: action.payload.lastWin,\r\n                    lastWinGame: action.payload.lastWinGame,\r\n                    lastgame: action.payload.lastgame,\r\n                    name: action.payload.name,\r\n                    online: action.payload.online,\r\n                    isDemo: action.payload.isDemo\r\n                };\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    '3wins': action.payload['3wins'],\r\n                    balance: action.payload.balance,\r\n                    btcWallet: action.payload.btcWallet,\r\n                    wins: action.payload.wins,\r\n                    lastWin: action.payload.lastWin,\r\n                    lastWinGame: action.payload.lastWinGame,\r\n                    lastgame: action.payload.lastgame,\r\n                    name: action.payload.name,\r\n                    online: action.payload.online,\r\n                    isDemo: action.payload.isDemo\r\n                };\r\n            }\r\n        case GET_RATES:\r\n            if (state.isDemo) {\r\n                return {\r\n                    ...state,\r\n                    down: action.payload.demo.down.peoples,\r\n                    up: action.payload.demo.up.peoples,\r\n                    upBets: action.payload.demo.up.bitcoins,\r\n                    downBets: action.payload.demo.down.bitcoins,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    down: action.payload.real.down.peoples,\r\n                    up: action.payload.real.up.peoples,\r\n                    upBets: action.payload.real.up.bitcoins,\r\n                    downBets: action.payload.real.down.bitcoins,\r\n                }\r\n            }\r\n        case BET_WIN:\r\n            return {\r\n                ...state,\r\n                congratulation: true,\r\n                colorBlalance: 'green'\r\n            };\r\n        case BET_LOSE:\r\n            return {\r\n                ...state,\r\n                colorBlalance: 'red',\r\n                yourlose: true\r\n            };\r\n        case SET_BET_UP:\r\n            return {\r\n                ...state,\r\n                predict: 'up'\r\n            };\r\n        case SET_BET_DOWN:\r\n            return {\r\n                ...state,\r\n                predict: 'down'\r\n            };\r\n        case CLEAR_BET:\r\n            return {\r\n                ...state,\r\n                predict: ''\r\n            };\r\n        case CLOSE_CONGRATULATION:\r\n            return {...state, congratulation: false};\r\n        case CLOSE_YOURLOSE:\r\n            return {...state, yourlose: false};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\sound.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\entry.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\Api.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Timer.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Presentation.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step1.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step3.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step5.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step4.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step2.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\ImagePreview.js",["298"],"import React from \"react\";\r\n// hooks\r\nimport useImagePreview from \"../../useImagePreview\";\r\n\r\nconst ImagePreview = () => {\r\n  const [image, setFile] = useImagePreview();\r\n\r\n  return (\r\n    <div>\r\n      <h2>Ad creative</h2>\r\n\r\n      <div className=\"wrapper-input-file\">\r\n        <div className=\"label-file\">\r\n          Select a banner to add <br />\r\n          275 x 270 px\r\n        </div>\r\n\r\n        <div className=\"wrap-input\">\r\n          <label className=\"dashed\" htmlFor=\"ad-file\">\r\n            {image ? (\r\n              <img className=\"image-preview\" src={image} />\r\n            ) : (\r\n              <div className=\"description\">Drag and drop file here or</div>\r\n            )}\r\n            <input onChange={setFile} type=\"file\" id=\"ad-file\" />\r\n          </label>\r\n\r\n          <label htmlFor=\"ad-file\" className=\"btn-file\">\r\n            Choose file\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagePreview;\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\Tabs.js",["299","300"],"import React, { useState } from \"react\";\r\n// components\r\nimport { RangeInput } from \"./FormInput\";\r\n// styles\r\nimport \"./style.scss\";\r\n// images\r\nimport bitcoin from \"../../../../../images/bitcoin.svg\";\r\nimport dollar from \"../../../../../images/dollar.svg\";\r\n\r\nconst Tabs = ({ tabs }) => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  return (\r\n    <div className=\"tabsContainer\">\r\n      <div className=\"tabs\">\r\n        {tabs.map(({ id, label }) => (\r\n          <div\r\n            key={id}\r\n            className={activeTab === id ? \"activeTab\" : \"tab\"}\r\n            onClick={() => setActiveTab(id)}\r\n          >\r\n            {label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"daily\">\r\n        <span>Daily budget</span>\r\n        <span>Actual amount spend daily may vary</span>\r\n      </div>\r\n\r\n      <div className=\"estimated\">\r\n        <div className=\"estimated-perDay\">\r\n          <div style={{ textAlign: \"left\" }}>\r\n            Estimated 1K – 1,5K people <br />\r\n            reached per day\r\n          </div>\r\n\r\n          <div className=\"amount\">\r\n            <div className=\"amount-btc\">\r\n              0.0353 <img src={bitcoin} />\r\n            </div>\r\n\r\n            <div className=\"amount-dollar\">\r\n              <div className=\"dollarContainer\">1200</div>\r\n              <img src={dollar} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <RangeInput withError min={0} max={10000} balance={7500} />\r\n      </div>\r\n\r\n      <div className=\"content\">{tabs[activeTab]?.content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\FormInput.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\useImagePreview.js",["301"],"import { useState } from \"react\";\r\n\r\nexport default () => {\r\n  const [image, setImage] = useState(null);\r\n\r\n  const setFile = ({ target }) => {\r\n    const localURL = URL.createObjectURL(target.files[0]);\r\n\r\n    setImage(localURL);\r\n  };\r\n\r\n  return [image, setFile];\r\n};\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\Duration.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\Method.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\Audience.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\Footer.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\components\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\components\\RadioButtonBlock.js",[],{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","severity":1,"message":"307","line":1,"column":26,"nodeType":"308","messageId":"309","endLine":1,"endColumn":35},{"ruleId":"310","severity":1,"message":"311","line":31,"column":8,"nodeType":"312","endLine":31,"endColumn":10,"suggestions":"313"},{"ruleId":"310","severity":1,"message":"314","line":50,"column":8,"nodeType":"312","endLine":50,"endColumn":27,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":69,"column":77,"nodeType":"318","endLine":69,"endColumn":96},{"ruleId":"319","severity":1,"message":"320","line":76,"column":25,"nodeType":"321","endLine":81,"endColumn":53},{"ruleId":"306","severity":1,"message":"322","line":12,"column":8,"nodeType":"308","messageId":"309","endLine":12,"endColumn":17},{"ruleId":"306","severity":1,"message":"323","line":13,"column":8,"nodeType":"308","messageId":"309","endLine":13,"endColumn":17},{"ruleId":"310","severity":1,"message":"324","line":56,"column":8,"nodeType":"312","endLine":56,"endColumn":23,"suggestions":"325"},{"ruleId":"310","severity":1,"message":"326","line":48,"column":8,"nodeType":"312","endLine":48,"endColumn":24,"suggestions":"327"},{"ruleId":"310","severity":1,"message":"328","line":52,"column":39,"nodeType":"312","endLine":52,"endColumn":41,"suggestions":"329"},{"ruleId":"310","severity":1,"message":"330","line":8,"column":7,"nodeType":"312","endLine":8,"endColumn":9,"suggestions":"331"},{"ruleId":"306","severity":1,"message":"332","line":1,"column":27,"nodeType":"308","messageId":"309","endLine":1,"endColumn":35},{"ruleId":"310","severity":1,"message":"333","line":35,"column":8,"nodeType":"312","endLine":35,"endColumn":10,"suggestions":"334"},{"ruleId":"310","severity":1,"message":"326","line":33,"column":8,"nodeType":"312","endLine":33,"endColumn":10,"suggestions":"335"},{"ruleId":"310","severity":1,"message":"336","line":35,"column":8,"nodeType":"312","endLine":35,"endColumn":21,"suggestions":"337"},{"ruleId":"310","severity":1,"message":"338","line":45,"column":8,"nodeType":"312","endLine":45,"endColumn":28,"suggestions":"339"},{"ruleId":"310","severity":1,"message":"340","line":10,"column":11,"nodeType":"341","endLine":12,"endColumn":6},{"ruleId":"310","severity":1,"message":"342","line":20,"column":8,"nodeType":"312","endLine":20,"endColumn":36,"suggestions":"343"},{"ruleId":"306","severity":1,"message":"344","line":7,"column":20,"nodeType":"308","messageId":"309","endLine":7,"endColumn":26},{"ruleId":"345","severity":1,"message":"346","line":21,"column":15,"nodeType":"321","endLine":21,"endColumn":60},{"ruleId":"345","severity":1,"message":"346","line":40,"column":22,"nodeType":"321","endLine":40,"endColumn":43},{"ruleId":"345","severity":1,"message":"346","line":45,"column":15,"nodeType":"321","endLine":45,"endColumn":35},{"ruleId":"347","severity":1,"message":"348","line":3,"column":1,"nodeType":"349","endLine":13,"endColumn":3},"no-native-reassign",["350"],"no-negated-in-lhs",["351"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authorization'. Either include it or remove the dependency array. If 'authorization' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["352"],"React Hook useEffect has a missing dependency: 'prohibition'. Either include it or remove the dependency array. If 'prohibition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["353"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Preloader' is defined but never used.","'bitsybets' is defined but never used.","React Hook useEffect has missing dependencies: 'bet', 'course', 'lastSeconds', and 'startWin'. Either include them or remove the dependency array. If 'startWin' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["354"],"React Hook useEffect has a missing dependency: 'userdata'. Either include it or remove the dependency array. If 'userdata' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["355"],"React Hook useEffect has a missing dependency: 'switchView'. Either include it or remove the dependency array. If 'switchView' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["356"],"React Hook useEffect has a missing dependency: 'geoposition'. Either include it or remove the dependency array. If 'geoposition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["357"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'rates'. Either include it or remove the dependency array. If 'rates' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["358"],["359"],"React Hook useEffect has missing dependencies: 'gameStart', 'predictSubmit', and 'startGame'. Either include them or remove the dependency array.",["360"],"React Hook useEffect has missing dependencies: 'playTimer' and 'playTimer2'. Either include them or remove the dependency array. If 'playTimer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["361"],"The 'muted' function makes the dependencies of useEffect Hook (at line 23) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'muted' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'stop'. Either include it or remove the dependency array. If 'stop' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["362"],"'GOAWAY' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},"Update the dependencies array to be: [authorization]",{"range":"385","text":"386"},"Update the dependencies array to be: [location.pathname, prohibition]",{"range":"387","text":"388"},"Update the dependencies array to be: [bet, course, currentCourse, lastSeconds, startWin]",{"range":"389","text":"390"},"Update the dependencies array to be: [congratulation, userdata]",{"range":"391","text":"392"},"Update the dependencies array to be: [switchView]",{"range":"393","text":"394"},"Update the dependencies array to be: [geoposition]",{"range":"395","text":"396"},"Update the dependencies array to be: [rates]",{"range":"397","text":"398"},"Update the dependencies array to be: [userdata]",{"range":"399","text":"400"},"Update the dependencies array to be: [gameStart, lastSeconds, predictSubmit, startGame]",{"range":"401","text":"402"},"Update the dependencies array to be: [playTimer, playTimer2, startGame, timeBet]",{"range":"403","text":"404"},"Update the dependencies array to be: [param.id, play, handlePlay, stop]",{"range":"405","text":"406"},[1573,1575],"[authorization]",[2064,2083],"[location.pathname, prohibition]",[2194,2209],"[bet, course, currentCourse, lastSeconds, startWin]",[1848,1864],"[congratulation, userdata]",[1957,1959],"[switchView]",[233,235],"[geoposition]",[1688,1690],"[rates]",[1597,1599],"[userdata]",[1602,1615],"[gameStart, lastSeconds, predictSubmit, startGame]",[1836,1856],"[playTimer, playTimer2, startGame, timeBet]",[705,733],"[param.id, play, handlePlay, stop]"]