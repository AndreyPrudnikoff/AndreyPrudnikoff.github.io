[{"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\index.js":"1","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\App.js":"2","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\reportWebVitals.js":"3","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\store.js":"4","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\gotodesktop.js":"5","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\restore.js":"6","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Support.js":"7","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Reset.js":"8","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Btc.js":"9","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Auth.js":"10","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Refill.js":"11","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Header\\Header.js":"12","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompletePay.js":"13","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Start\\Start.js":"14","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Usd.js":"15","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Invite.js":"16","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Withdraw.js":"17","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompleteWith.js":"18","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\Ads.js":"19","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Playlist.js":"20","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Main.js":"21","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\index.js":"22","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\index.js":"23","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\music.js":"24","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Preloader.js":"25","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Graph.js":"26","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Time.js":"27","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rect\\Rect.js":"28","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\game.js":"29","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\User.js":"30","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\ru.js":"31","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\en.js":"32","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Online.js":"33","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rates.js":"34","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\RightSector.js":"35","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\fireworks.js":"36","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Dashboard.js":"37","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\types.js":"38","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Sound.js":"39","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\game.js":"40","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\sound.js":"41","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\entry.js":"42","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\Api.js":"43","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Timer.js":"44","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Presentation.js":"45","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step1.js":"46","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step3.js":"47","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step5.js":"48","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step4.js":"49","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step2.js":"50","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\index.js":"51","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\index.js":"52","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\ImagePreview.js":"53","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\Tabs.js":"54","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\FormInput.js":"55","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\index.js":"56","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\index.js":"57","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\index.js":"58","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\index.js":"59","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\useImagePreview.js":"60","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\Duration.js":"61","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\Method.js":"62","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\Audience.js":"63","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\Footer.js":"64","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\components\\index.js":"65","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\components\\RadioButtonBlock.js":"66"},{"size":591,"mtime":1614091503470,"results":"67","hashOfConfig":"68"},{"size":4837,"mtime":1614335223357,"results":"69","hashOfConfig":"68"},{"size":375,"mtime":1614091503473,"results":"70","hashOfConfig":"68"},{"size":213,"mtime":1614091503473,"results":"71","hashOfConfig":"68"},{"size":703,"mtime":1614077203770,"results":"72","hashOfConfig":"68"},{"size":3941,"mtime":1614267299832,"results":"73","hashOfConfig":"68"},{"size":1879,"mtime":1614266148398,"results":"74","hashOfConfig":"68"},{"size":4643,"mtime":1614267107952,"results":"75","hashOfConfig":"68"},{"size":7011,"mtime":1614268919723,"results":"76","hashOfConfig":"68"},{"size":12692,"mtime":1614360025345,"results":"77","hashOfConfig":"68"},{"size":3568,"mtime":1614586636062,"results":"78","hashOfConfig":"68"},{"size":10111,"mtime":1614586636060,"results":"79","hashOfConfig":"68"},{"size":1440,"mtime":1614266243057,"results":"80","hashOfConfig":"68"},{"size":8619,"mtime":1614329064985,"results":"81","hashOfConfig":"68"},{"size":4384,"mtime":1614266025599,"results":"82","hashOfConfig":"68"},{"size":3532,"mtime":1614265690058,"results":"83","hashOfConfig":"68"},{"size":3638,"mtime":1614266122072,"results":"84","hashOfConfig":"68"},{"size":1581,"mtime":1614266391240,"results":"85","hashOfConfig":"68"},{"size":601,"mtime":1614330813150,"results":"86","hashOfConfig":"68"},{"size":1987,"mtime":1614360025394,"results":"87","hashOfConfig":"68"},{"size":7744,"mtime":1614360025348,"results":"88","hashOfConfig":"68"},{"size":2201,"mtime":1614360025350,"results":"89","hashOfConfig":"68"},{"size":367,"mtime":1614091503473,"results":"90","hashOfConfig":"68"},{"size":1718,"mtime":1614360025355,"results":"91","hashOfConfig":"68"},{"size":964,"mtime":1614091503410,"results":"92","hashOfConfig":"68"},{"size":10631,"mtime":1614091503408,"results":"93","hashOfConfig":"68"},{"size":970,"mtime":1614091503411,"results":"94","hashOfConfig":"68"},{"size":232,"mtime":1614091503410,"results":"95","hashOfConfig":"68"},{"size":2184,"mtime":1614091503471,"results":"96","hashOfConfig":"68"},{"size":1631,"mtime":1614091503405,"results":"97","hashOfConfig":"68"},{"size":12475,"mtime":1614359131437,"results":"98","hashOfConfig":"68"},{"size":9857,"mtime":1614357530567,"results":"99","hashOfConfig":"68"},{"size":2659,"mtime":1614251434317,"results":"100","hashOfConfig":"68"},{"size":4090,"mtime":1614344185504,"results":"101","hashOfConfig":"68"},{"size":7607,"mtime":1614344185504,"results":"102","hashOfConfig":"68"},{"size":9768,"mtime":1614091503416,"results":"103","hashOfConfig":"68"},{"size":18740,"mtime":1614360025347,"results":"104","hashOfConfig":"68"},{"size":1915,"mtime":1614360025382,"results":"105","hashOfConfig":"68"},{"size":1198,"mtime":1614360025407,"results":"106","hashOfConfig":"68"},{"size":3814,"mtime":1614091503472,"results":"107","hashOfConfig":"68"},{"size":2120,"mtime":1614360025381,"results":"108","hashOfConfig":"68"},{"size":2734,"mtime":1614360025355,"results":"109","hashOfConfig":"68"},{"size":445,"mtime":1614091503405,"results":"110","hashOfConfig":"68"},{"size":1720,"mtime":1614269502354,"results":"111","hashOfConfig":"68"},{"size":904,"mtime":1614593700515,"results":"112","hashOfConfig":"68"},{"size":3894,"mtime":1614600557735,"results":"113","hashOfConfig":"68"},{"size":2330,"mtime":1614359788595,"results":"114","hashOfConfig":"68"},{"size":2303,"mtime":1614360025347,"results":"115","hashOfConfig":"68"},{"size":2329,"mtime":1614359787730,"results":"116","hashOfConfig":"68"},{"size":2279,"mtime":1614359641461,"results":"117","hashOfConfig":"68"},{"size":255,"mtime":1614330813174,"results":"118","hashOfConfig":"68"},{"size":73,"mtime":1614330813166,"results":"119","hashOfConfig":"68"},{"size":958,"mtime":1614330813168,"results":"120","hashOfConfig":"68"},{"size":1589,"mtime":1614330813165,"results":"121","hashOfConfig":"68"},{"size":3764,"mtime":1614330928404,"results":"122","hashOfConfig":"68"},{"size":39,"mtime":1614330813166,"results":"123","hashOfConfig":"68"},{"size":39,"mtime":1614330813163,"results":"124","hashOfConfig":"68"},{"size":37,"mtime":1614330813171,"results":"125","hashOfConfig":"68"},{"size":37,"mtime":1614330813168,"results":"126","hashOfConfig":"68"},{"size":272,"mtime":1614330813184,"results":"127","hashOfConfig":"68"},{"size":939,"mtime":1614330813164,"results":"128","hashOfConfig":"68"},{"size":1050,"mtime":1614330813169,"results":"129","hashOfConfig":"68"},{"size":933,"mtime":1614330813163,"results":"130","hashOfConfig":"68"},{"size":266,"mtime":1614330813167,"results":"131","hashOfConfig":"68"},{"size":67,"mtime":1614330813170,"results":"132","hashOfConfig":"68"},{"size":497,"mtime":1614330813169,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1cuy0ak",{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"136"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"136"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"136"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"136"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"136"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"136"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"136"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"136"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"136"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"136"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"136"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"136"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"136"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\index.js",[],["283","284"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\App.js",["285"],"import React from \"react\";\r\nimport {BrowserRouter as Router, Redirect, Route} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Main from \"./components/Main/Main\";\r\nimport Auth from \"./components/Auth/Auth\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Playlist from \"./sound/Playlist\";\r\nimport Start from \"./components/Start/Start\";\r\nimport Restore from \"./components/Auth/restore\";\r\nimport Reset from \"./components/Auth/Reset\";\r\nimport Refill from \"./components/Refill/Refill\";\r\nimport Btc from \"./components/Refill/Btc\";\r\nimport Usd from \"./components/Refill/Usd\";\r\nimport Support from \"./components/Auth/Support\";\r\nimport Ads from \"./components/Ads/Ads\";\r\nimport CompletePay from \"./components/Refill/CompletePay\";\r\nimport CompleteWith from \"./components/Refill/CompleteWith\";\r\nimport Withdraw from \"./components/Refill/Withdraw\";\r\nimport Invite from \"./components/Refill/Invite\";\r\nimport gotodesktop from \"./components/Auth/gotodesktop\";\r\nimport Presentation from \"./components/Intro/Presentation\";\r\nimport {prohibition, resizeScreen, switchView} from \"./redux/actions\";\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    if (!sessionStorage.getItem(\"saveReload\")) {\r\n        sessionStorage.removeItem(\"token\");\r\n    } else {\r\n        sessionStorage.removeItem(\"saveReload\");\r\n    }\r\n})\r\n\r\n\r\nconst routing = [\r\n    {path: \"/\", component: Start},\r\n    // {path: \"/intro/:number\", component: Presentation},\r\n    {path: \"/game\", component: Main},\r\n    {path: \"/restore\", component: Restore},\r\n    {path: \"/reset\", component: Reset},\r\n    {path: \"/refill\", component: Refill},\r\n    {path: \"/invite\", component: Invite},\r\n    {path: \"/refill/btc\", component: Btc},\r\n    {path: \"/refill/usd\", component: Usd},\r\n    {path: \"/support\", component: Support},\r\n    {path: \"/login\", component: Auth},\r\n    {path: \"/signup\", component: Auth},\r\n    {path: \"/ads\", component: Ads},\r\n    {path: \"/complete/pay\", component: CompletePay},\r\n    {path: \"/complete/withdraw\", component: CompleteWith},\r\n    {path: \"/withdraw\", component: Withdraw},\r\n    {path: \"/gotodesktop\", component: gotodesktop},\r\n]\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    refresh() {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.unauthorized) {\r\n            this.props.prohibition();\r\n        }\r\n        window.addEventListener(\"resize\", () => {\r\n            if (window.outerWidth < 768) {\r\n                this.props.resizeScreen(\"mobile\");\r\n            } else if (window.outerWidth >= 768) {\r\n                this.props.resizeScreen(\"desktop\");\r\n            }\r\n        })\r\n\r\n        let start = \"\";\r\n        let end = \"\";\r\n        document.addEventListener(\"touchstart\", (e) => {\r\n            start = e.changedTouches[0].screenX;\r\n            document.addEventListener(\"touchend\", (e) => {\r\n                if (e.path[0].id === \"range\") {\r\n                    document.removeEventListener(\"touchend\", () => {\r\n                    }, false);\r\n                    document.removeEventListener(\"touchstart\", () => {\r\n                    }, false);\r\n                } else if (e.path[0].id !== \"range\") {\r\n                    end = e.changedTouches[0].screenX;\r\n                    if (start - end > 100) {\r\n                        this.props.switchView(false);\r\n                    } else if (start - end < -100) {\r\n                        this.props.switchView(true);\r\n                    }\r\n                    document.removeEventListener(\"touchstart\", () => {\r\n                    }, false);\r\n                    document.removeEventListener(\"touchend\", () => {\r\n                    }, false);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", () => {\r\n        }, false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router className={this.props.currentLang}>\r\n                <Header refresh={this.refresh}/>\r\n                <Playlist/>\r\n                {routing.map((content, index) => {\r\n                    return <Route key={index} exact path={content.path} component={content.component}/>\r\n                })}\r\n                <Redirect from=\"*\" to={sessionStorage.getItem('token') ? \"/game\" : \"/\"}/>\r\n                {this.props.unauthorized ? <Redirect to='/'/> : null}\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.authReducer.auth,\r\n        unauthorized: state.authReducer.unauthorized,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    prohibition,\r\n    resizeScreen,\r\n    switchView\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\reportWebVitals.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\store.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\gotodesktop.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\restore.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Support.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Reset.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Btc.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Auth\\Auth.js",["286"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport './auth.scss';\r\nimport {authorization, betWin, registration} from \"../../redux/actions\";\r\nimport {User} from \"../../api/User\";\r\nimport {fireworks, muteToggle, playClick} from \"../../redux/actions/music\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nconst Auth = ({reg, authorization, registration, muteToggle, mute, betWin, fireworks, history, widthMode, currentLang, playClick}) => {\r\n    const [password, setPassword] = useState(true)\r\n    const [passwordConfirm, setPasswordConfirm] = useState(true)\r\n    const [name, setName] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [confpass, setConfpass] = useState('')\r\n    const [code, setCode] = useState('')\r\n    const [enterCode, setEnterCode] = useState(false)\r\n    const [err, setErr] = useState('')\r\n\r\n    const LANG = currentLang === \"en\" ? EN : RU\r\n\r\n    const phoneRef = useRef(null);\r\n    const moveCaretToEnd = () => {\r\n        if (phoneRef.createTextRange) {\r\n            const r = phoneRef.createTextRange();\r\n            r.collapse(false);\r\n            r.select();\r\n        }\r\n    }\r\n    const clearData = () => {\r\n        setName('');\r\n        setPhone('');\r\n        setEmail('');\r\n        setPass('');\r\n        setConfpass('');\r\n        setErr('');\r\n        setCode('');\r\n        setEnterCode(false);\r\n    }\r\n    const setPhoneNumber = (value) => {\r\n        setPhone(value);\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const body = JSON.stringify({name, phone, email, pass, confpass});\r\n        if (confpass.length < 8 || confpass.length < 8) {\r\n            setErr('Password length must be 8 characters')\r\n        } else {\r\n            User.register(body)\r\n                .then(data => {\r\n                    if (data.data.status === \"success\") {\r\n                        setEnterCode(true);\r\n                    } else {\r\n                        if (data.data.error) {\r\n                            setErr(data.data.error);\r\n                        } else return false;\r\n                    }\r\n                })\r\n                .catch(error => setErr(error.response.data.error))\r\n        }\r\n    }\r\n    const codeSubmit = (e) => {\r\n        e.preventDefault();\r\n        User.code({code: code})\r\n            .then(res => {\r\n                if (res.data.status === \"success\") {\r\n                    if (widthMode === \"desktop\") {\r\n                        sessionStorage.setItem('token', res.data.data.accessToken);\r\n                        authorization();\r\n                        history.push('/game');\r\n                        if (!mute) {\r\n                            muteToggle();\r\n                        }\r\n                        betWin();\r\n                        fireworks();\r\n                    } else {\r\n                        history.push(\"/gotodesktop\")\r\n                    }\r\n                } else {\r\n                    if (res.data.error) {\r\n                        setErr(res.data.error);\r\n                    } else return false;\r\n                }\r\n            })\r\n            .catch(error => setErr(error.response.data.error))\r\n    }\r\n\r\n    const handleLogin = event => {\r\n        event.preventDefault();\r\n        const body = JSON.stringify({phone, pass});\r\n\r\n        User.login(body)\r\n            .then(res => res)\r\n            .then(data => {\r\n                    // if (widthMode === \"desktop\") {\r\n                        if (data.data.status === \"success\") {\r\n                            sessionStorage.setItem('token', data.data.data.accessToken);\r\n                            history.push('/game');\r\n                            return authorization();\r\n                        } else if (data.data.error) {\r\n                            return setErr(data.data.error);\r\n                        } else {\r\n                            return setErr('error, try again later')\r\n                        }\r\n                    // } else {\r\n                    //     history.push(\"/gotodesktop\")\r\n                    // }\r\n                }\r\n            )\r\n            .catch(error => setErr(error.response.data.error));\r\n        // authorization();\r\n    }\r\n    if (reg) {\r\n\r\n        if (enterCode) {\r\n            return (\r\n                <div className=\"round-dark auth\">\r\n                         <span onClick={() => {\r\n                             setEnterCode(false);\r\n                             clearData();\r\n                             playClick()\r\n                         }} className=\"back\">&larr;</span>\r\n                    <h2>Enter code</h2>\r\n                    <form onSubmit={e => codeSubmit(e)}>\r\n                        <div className=\"\">\r\n                            <input value={code} onInput={e => setCode(e.target.value)} id=\"code\" name=\"code\" type=\"text\"\r\n                                   required/>\r\n                        </div>\r\n                        <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                        <button type=\"submit\" onClick={playClick}>SEND</button>\r\n                    </form>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"round-dark auth\">\r\n                <span onClick={() => {\r\n                    registration();\r\n                    clearData();\r\n                    playClick()\r\n                }} className=\"back\">&larr;</span>\r\n                    <h2 className={currentLang}>{LANG.Auth.Register.title}</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"\">\r\n                            <label className={currentLang} htmlFor=\"name\">{LANG.Auth.Register.nameTitle}</label>\r\n                            <input onChange={e => {\r\n                                setName(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={name}\r\n                                   placeholder={LANG.Auth.Register.name}\r\n                                   id=\"name\" name=\"name\" type=\"text\" required/>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label className={currentLang} htmlFor=\"phone\">{LANG.Auth.Register.phoneTitle}</label>\r\n                            <PhoneInput onChange={e => {\r\n                                setErr('');\r\n                                setPhoneNumber(e);\r\n                                moveCaretToEnd();\r\n                            }} id=\"phone\" ref={phoneRef} limitMaxLength={true} placeholder={LANG.Auth.Register.phone}\r\n                                        value={phone} international\r\n                                        displayInitialValueAsLocalNumber required/>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label className={currentLang} htmlFor=\"email\">{LANG.Auth.Register.emailTitle}</label>\r\n                            <input onChange={e => {\r\n                                setEmail(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={email}\r\n                                   placeholder={LANG.Auth.Register.email}\r\n                                   id=\"email\" name=\"email\" type=\"email\" required/>\r\n                        </div>\r\n                        <div className={password ? 'pass' : 'text'}>\r\n                            <span onClick={() => {setPassword(!password); playClick()}} className=\"eye\"/>\r\n                            <label className={currentLang} htmlFor=\"password\">{LANG.Auth.Register.password}</label>\r\n                            <input min='8' onChange={e => {\r\n                                setPass(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={pass}\r\n                                   id=\"password\" name=\"password\" type={password ? 'password' : 'text'} required/>\r\n                        </div>\r\n                        <div className={passwordConfirm ? 'pass' : 'text'}>\r\n                            <span onClick={() => {setPasswordConfirm(!passwordConfirm); playClick()}} className=\"eye\"/>\r\n                            <label className={currentLang} htmlFor=\"passwordConfirm\">{LANG.Auth.Register.passwordRepeat}</label>\r\n                            <input min='8' onChange={e => {\r\n                                setConfpass(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={confpass}\r\n                                   id=\"passwordConfirm\" name=\"passwordConfirm\"\r\n                                   type={passwordConfirm ? 'password' : 'text'}\r\n                                   required/>\r\n                        </div>\r\n                        <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                        <button className={currentLang} onClick={playClick}>{LANG.Auth.Register.signUp}</button>\r\n                        <Link to='/support' className={currentLang + \" support-link\"} onClick={playClick}>{LANG.support}</Link>\r\n                    </form>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    } else {\r\n        return (\r\n            <div className=\"round-dark auth\">\r\n               <span onClick={() => {\r\n                   clearData();\r\n                   playClick()\r\n               }} className=\"back\"><Link to=\"/\">&larr;</Link></span>\r\n                <h2 className={currentLang}>{LANG.Auth.Login.title}</h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"\">\r\n                        <label className={currentLang} htmlFor=\"phone\">{LANG.Auth.Login.phoneTitle}</label>\r\n                        <PhoneInput onChange={e => {\r\n                            setPhone(e);\r\n                            setErr('');\r\n                        }} id=\"phone\" limitMaxLength={true} placeholder={LANG.Auth.Login.phone} value={phone} international\r\n                                    displayInitialValueAsLocalNumber required/>\r\n                    </div>\r\n                    <div className={password ? 'pass' : 'text'}>\r\n                        <span onClick={() => {setPassword(!password); playClick()}} className=\"eye\"/>\r\n                        <label className={currentLang} htmlFor=\"password\">{LANG.Auth.Login.password}</label>\r\n                        <input onInput={e => {\r\n                            setPass(e.target.value);\r\n                            setErr('');\r\n                        }} id=\"password\" name=\"password\"\r\n                               type={password ? 'password' : 'text'} required/>\r\n                    </div>\r\n                    <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                    <Link to=\"/restore\" className={currentLang + \" forgot mb-3\"} onClick={playClick}>{LANG.Auth.Login.forgotPassword}</Link>\r\n                    <button className={currentLang} onClick={playClick}>{LANG.Auth.Login.loginIn}</button>\r\n                    <span className={currentLang}>{LANG.Auth.Login.or}</span>\r\n                    <button className={currentLang} onClick={e => {\r\n                        e.preventDefault();\r\n                        registration();\r\n                        clearData();\r\n                        playClick();\r\n                    }}>{LANG.Auth.Login.signUp}\r\n                    </button>\r\n                    <Link to=\"/support\" className={currentLang + \" support-link\"} onClick={playClick}>{LANG.support}</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reg: state.authReducer.reg,\r\n        mute: state.soundReducer.mute,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    authorization,\r\n    registration,\r\n    muteToggle,\r\n    betWin,\r\n    fireworks,\r\n    playClick\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Refill.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Header\\Header.js",["287","288","289","290"],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompletePay.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Start\\Start.js",["291","292","293"],"import React, {useState, useEffect} from 'react';\r\nimport './start.scss';\r\nimport Graph from \"../Graph\";\r\nimport Time from \"../Main/Time\";\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport arrowDown from \"../../images/arrowDown.svg\";\r\nimport arrowUp from \"../../images/arrowUp.svg\";\r\nimport bull from \"../../images/bull_start.png\";\r\nimport bear from \"../../images/bear_start.png\";\r\nimport Rect from \"../Main/Rect/Rect\";\r\nimport Preloader from \"../Main/Preloader\";\r\nimport bitsybets from \"../../images/BITCYBETS.svg\";\r\nimport coin from \"../../images/coin.svg\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport {registration} from \"../../redux/actions\";\r\nimport {playClick, up_down, startWin} from \"../../redux/actions/music\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nconst Start = ({currentCourse, course, history, lastSeconds, userdata, widthMode, registration, currentLang, playClick, up_down, startWin}) => {\r\n    const [timeGame, setTimeGame] = useState(false);\r\n    const [bet, setBet] = useState('');\r\n    const [predict, setPredict] = useState('');\r\n\r\n    const LANG = currentLang === \"en\" ? EN : RU\r\n\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0) {\r\n            setTimeGame(true);\r\n        }\r\n    }, [lastSeconds])\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0) {\r\n            if (bet === 'down' && currentCourse < course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n                startWin()\r\n            } else if (bet === 'down' && currentCourse > course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n                startWin()\r\n            } else if (bet === 'up' && currentCourse > course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n                startWin()\r\n            } else if (bet === 'up' && currentCourse < course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n                startWin()\r\n            } else {\r\n                setBet('');\r\n            }\r\n        }\r\n\r\n    }, [currentCourse])\r\n    return (\r\n        <div  className=\"start\">\r\n            {/*<div style={{display: predict === 'win' ? \"block\" : \"none\"}} className=\"blur soon\">*/}\r\n            {/*    <div className=\"round-dark win\">*/}\r\n            {/*        <div className=\"win-btn\">*/}\r\n            {/*            <h2>Sorry, you're out of luck! <br/> try again!</h2>*/}\r\n            {/*            <button onClick={() => {*/}\r\n            {/*                setPredict('');*/}\r\n            {/*                setBet('');*/}\r\n            {/*            }} className=\"btn btn-primary\">OK*/}\r\n            {/*            </button>*/}\r\n            {/*        </div>*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n            \r\n            \r\n            <div style={{display: predict ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                       <span onClick={() => {\r\n                           setPredict('');\r\n                           setBet('');\r\n                           playClick()\r\n                       }} className=\"chross\">&#10008;</span>\r\n                        <h2 className={currentLang}>{LANG.Main.Modal.title.first} <br/> {currentLang === \"en\" ? LANG.Main.Modal.title.second : null}</h2>\r\n                        {/* <h2>{currentLang === \"en\" ? LANG.Main.Modal.title.first <br/> LANG.Main.Modal.title.second : LANG.Main.Modal.title.first}</h2> */}\r\n                        {/* <h2>You did great! <br/> Join now!</h2> */}\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/login');\r\n                            playClick()\r\n                        }} className={currentLang + \" btn btn-primary\"}>\r\n                            {LANG.Main.Modal.logIn}\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/signup');\r\n                            registration();\r\n                            playClick()\r\n                        }} className={currentLang + \" btn btn-primary\"}>\r\n                            {LANG.Main.Modal.signUp}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`${widthMode}-start round round-dark`}>\r\n                <div className=\"bull-start-mobile\"><img src={bull} width=\"\" alt=\"bull\"/></div>\r\n                <div className=\"bear-start-mobile\"><img src={bear} width=\"\" alt=\"bear\"/></div>\r\n                <div className=\"bull-start\"><img src={bull} alt=\"bull\"/></div>\r\n                <div className=\"bear-start\"><img src={bear} alt=\"bear\"/></div>\r\n                <div className=\"text text-center\">\r\n                    <h2>\r\n                        <span className=\"gold\">BITCY</span>BETS     \r\n                    </h2>\r\n                    <p className={currentLang + \" mt-3\"}>{LANG.Main.Start.content}</p>\r\n                </div>\r\n                <div className=\"dark\">\r\n                    <Time/>\r\n                    <div className=\"course\">\r\n                        <h2 style={{opacity: !currentCourse ? 0 : 1}} className=\"text-center\"><img src={bitcoin} alt=\"course\"/>\r\n                            {currentCourse} <span>$</span>\r\n                        </h2>\r\n                        <div>\r\n                            {/*<SelectList/>*/}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: !currentCourse ? \"none\" : \"block\"}} className=\"graph\">\r\n                        <Graph gradient1={20} gradient2={150} chartHeight={widthMode === \"desktop\" ? 200 : 150}/>\r\n                    </div>\r\n                    <div style={{display: currentCourse ? \"none\" : \"block\"}}  className=\"load\">\r\n                        <div className=\"wrap-img-preload\">\r\n                            <img className=\"coin1\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin2\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin3\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin4\"  src={coin} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"wrap-btn\">\r\n                            <button disabled={bet || !currentCourse} onClick={() => {setBet('down'); up_down()}}\r\n                                    className={currentLang + \" btn green green-start predict-btn\"}\r\n                                    id=\"down\">\r\n                                        <span className={currentLang + \" green\"}>{LANG.Main.Start.btnUp}</span>\r\n                                <img src={arrowUp} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect start={timeGame} infinite={'infinity'} idButton={'down'}\r\n                                      mode={timeGame ? 'rectUp' : ''}/>\r\n                            </button>\r\n                            <button disabled={bet || !currentCourse} onClick={() => {setBet('up'); up_down()}}\r\n                                    className={currentLang + \" btn red red-start predict-btn\"}\r\n                                    id=\"down\">\r\n                                        <span className={currentLang + \" red\"}>{LANG.Main.Start.btnDown}</span>\r\n                                <img src={arrowDown} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect infinite={'infinity'} idButton={'down'} mode={timeGame ? 'rectDown' : ''}/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"bg\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        course: state.courseReducer.course,\r\n        lastSeconds: state.courseReducer.lastSeconds,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    userdata,\r\n    registration,\r\n    playClick,\r\n    up_down,\r\n    startWin\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Start);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Usd.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Invite.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\Withdraw.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Refill\\CompleteWith.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\Ads.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Playlist.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Main.js",["294","295","296"],"import React, { useState, useEffect } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './main.scss';\r\nimport bitcoin from '../../images/bitcoin.svg';\r\nimport Graph from \"../Graph\";\r\nimport RightSector from \"./RightSector\";\r\nimport Dashboard from \"./Dashboard\";\r\n// import SelectList from \"./SelectList\";\r\nimport {closeCongratulation, closeYourLose, createAd, logoutQuestion, prohibition, switchView} from \"../../redux/actions\";\r\nimport {money, stop, you_lose, add_to_wallet, playClick} from \"../../redux/actions/music\";\r\nimport JS_FIREWORKS from \"../fireworks\";\r\nimport Time from \"./Time\";\r\nimport Preloader from \"./Preloader\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport Rates from \"./Rates\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\nimport Online from \"./Online\";\r\nimport Presentation from \"../Intro/Presentation\";\r\n\r\nconst fire = () => {\r\n    document.getElementById('fireworks-canvas').style.width = '100%'\r\n    document.getElementById('fireworks-canvas').style.height = '100%'\r\n    const firework = JS_FIREWORKS.Fireworks({\r\n        id: 'fireworks-canvas',\r\n        hue: 120,\r\n        particleCount: 100,\r\n        delay: 0,\r\n        minDelay: 5,\r\n        maxDelay: 10,\r\n        boundaries: {\r\n            top: 50,\r\n            bottom: 240,\r\n            left: 50,\r\n            right: 590\r\n        },\r\n        fireworkSpeed: 2,\r\n        fireworkAcceleration: 1.05,\r\n        particleFriction: .95,\r\n        particleGravity: 1.5\r\n    });\r\n    firework.start();\r\n};\r\n\r\nconst Main = ({history, step, view, switchView, course, lastWin, closeCongratulation, congratulation, yourlose, closeYourLose, currentCourse, money, muteToggle, logout, logoutQuestion, prohibition, userdata, lastWinGame, createAd, createAdProp, widthMode, currentLang, you_lose, add_to_wallet, playClick}) => {\r\n\r\n    useEffect(() => {\r\n        userdata();\r\n        fire();\r\n    }, [congratulation]);\r\n    useEffect(() => {fire()}, []);\r\n    useEffect(()=> switchView(false), []);\r\n\r\n    const LANG = currentLang === \"en\" ? EN : RU;\r\n    let flag = course ? course.length : false;\r\n    return (\r\n        <div className={`${widthMode}-bg main`}>\r\n            <Preloader show={flag}/>\r\n            <div style={{display: congratulation ? \"block\" : \"none\"}} className=\"blur\">\r\n                <canvas width=\"640\" height=\"480\" id=\"fireworks-canvas\" style={{background: 'rgba(0,0,0, .2)'}}/>\r\n                <div className=\"round-dark win\">\r\n                    <h2 className=\"currentLang\">{LANG.BettingRealMoney.WinningAndLosing.Winning.title}</h2>\r\n                    <div className={currentLang + \" text-center\"}>{LANG.BettingRealMoney.WinningAndLosing.Winning.youWon} {lastWinGame || 1} <img src={bitcoin} width=\"15\" alt=\"bit\"/>\r\n                    </div>\r\n                    <div className=\"win-btn\">\r\n                        <button onClick={() => {\r\n                            closeCongratulation();\r\n                            userdata();\r\n                            document.getElementById('fireworks').pause();\r\n\r\n                            // money();\r\n                            add_to_wallet();\r\n                        }} className={currentLang + \" btn btn-primary\"}>{LANG.BettingRealMoney.WinningAndLosing.Winning.btnAddToWallet}\r\n                        </button>\r\n                        <button disabled onClick={() => {\r\n                            closeCongratulation();\r\n                            userdata();\r\n                            playClick()\r\n                            document.getElementById('fireworks').pause();\r\n                            // money();\r\n                        }} className={currentCourse + \" btn btn-primary\"}>{LANG.BettingRealMoney.WinningAndLosing.Winning.btnWithdraw}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{display: yourlose ? \"block\" : \"none\"}} className=\"blur\">\r\n                <div className=\"round-dark win\">\r\n                    <h2>Your lose</h2>\r\n                    <div className=\"win-btn\">\r\n                        <button onClick={() => {\r\n                            closeYourLose();\r\n                            userdata();\r\n                            playClick()\r\n                        }} className=\"btn btn-primary\">Bet again\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{display: createAdProp ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                        <h2>This feature coming soon</h2>\r\n                        <button onClick={() => {\r\n                            createAd();\r\n                            playClick()\r\n                        }} className=\"btn btn-primary\">OK\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <main style={{display: flag ? 'block' : 'none'}}>\r\n                <div className=\"row main\">\r\n                    <Presentation />\r\n                    <div style={{display: widthMode === \"mobile\" && view ? \"none\" : \"flex\"}} className=\"left-sector\">\r\n                        {widthMode === \"mobile\" ? <Rates/> : <></>}\r\n                        <div style={{zIndex: step === 1 ?  \"10\" : \"\" } } className={`${widthMode} round globe`}>\r\n                            {widthMode === \"desktop\" ? <Time/> : <></>}\r\n                            <div>\r\n                                <h2 className=\"text-center\"><img src={bitcoin} className=\"m-2\" alt=\"course\"/>\r\n                                    {currentCourse} <span>$</span>\r\n                                </h2>\r\n                                <div>\r\n                                    {widthMode === \"desktop\" ? <Online/> : <></>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"graph-wrapper\">\r\n                                <div className=\"graph\">\r\n                                    <Graph gradient1={widthMode === \"desktop\" ? undefined : 20}\r\n                                           gradient2={widthMode === \"desktop\" ? undefined : 150}\r\n                                           chartHeight={widthMode === \"desktop\" ? 250 : 150}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Dashboard/>\r\n                    </div>\r\n                    {widthMode === \"desktop\" ? <RightSector/> : <></>}\r\n                    {widthMode === \"mobile\" && view ? <RightSector/> : <></>}\r\n\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        course: state.courseReducer.course,\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        lastWin: state.balanceReducer.lastWin,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        congratulation: state.balanceReducer.congratulation,\r\n        yourlose: state.balanceReducer.yourlose,\r\n        logout: state.authReducer.logoutQuestion,\r\n        createAdProp: state.switchOptions.createAd,\r\n        widthMode: state.switchOptions.widthMode,\r\n        view: state.switchOptions.view,\r\n        currentLang: state.switchOptions.lang,\r\n        step: state.switchOptions.step\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    closeCongratulation,\r\n    closeYourLose,\r\n    money,\r\n    stop,\r\n    logoutQuestion,\r\n    prohibition,\r\n    userdata,\r\n    createAd,\r\n    you_lose,\r\n    add_to_wallet,\r\n    playClick,\r\n    switchView\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\music.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Preloader.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Graph.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Time.js",["297"],"import React, {useEffect, useState} from 'react';\r\nimport {geoposition} from \"../../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Time = ({geo, geoposition}) => {\r\n    useEffect(() => {\r\n        geoposition()\r\n    },[]);\r\n    useEffect(() => {\r\n        const clock = setInterval(() => setTime(new Date().toLocaleTimeString()), 1000);\r\n        return () => clearInterval(clock);\r\n    }, [])\r\n    let [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    return (\r\n        <div className=\"time\">\r\n            <h2 className=\"time-text\">{time.slice(0, 5)}</h2>\r\n            <div className=\"label text-center\">{geo || <span style={{fontSize: \"10px\"}}>Please, allow location access</span>}</div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        geo: state.geoReducer.geoposition,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    geoposition\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Time);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rect\\Rect.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\actions\\game.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\User.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\ru.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\languages\\en.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Online.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Rates.js",["298","299"],"import React, {useEffect, useState} from 'react';\r\nimport person from \"../../images/person.svg\";\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport {rates} from \"../../redux/actions/game\";\r\nimport {connect} from \"react-redux\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nconst Rates = ({rates, down, up, downBets, upBets, widthMode, currentLang}) => {\r\n    const mobile = widthMode === \"mobile\";\r\n    const LANG = currentLang === \"en\" ? EN : RU\r\n    const bankCoin = new Array(Math.ceil(downBets+upBets)).fill(downBets+upBets);\r\n    const upCoin = new Array(up).fill('up');\r\n    const downCoin = new Array(down).fill('down');\r\n    const fillBank = bankCoin.map((coin, index) => {\r\n        if(index > 9 && !mobile) {return null;}\r\n        if(index > 1 && mobile) {return null;}\r\n       return (<div key={index + coin} style={{height: \"36px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>);\r\n    })\r\n    const fillDown = downCoin.map((coin, index) => {\r\n        if(index > 9 && !mobile) {return null;}\r\n        if(index > 1 && mobile) {return null;}\r\n        return (<div key={index + coin} style={{height: \"36px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>)\r\n    })\r\n    const fillUp = upCoin.map((coin, index) => {\r\n        if(index > 9 && !mobile) {return null}\r\n        if(index > 1 && mobile) {return null}\r\n        return (<div key={index + coin} style={{height: \"36px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>)\r\n    })\r\n    useEffect(() => {\r\n        const getRates = setInterval(() => {\r\n            rates();\r\n        }, 1000);\r\n        return () => clearInterval(getRates);\r\n    }, [])\r\n    const bank = downBets + upBets;\r\n    // const rateUp = 10 * ((up / down) ? (up / down) : 1);\r\n    // const rateDown = 10 * ((down / up) ? (down / up) : 1);\r\n    return (\r\n        <div className=\"round rates\">\r\n            <h2 className={currentLang + \" text-center\"}>{LANG.BettingRealMoney.UsualState.BetsInProgress.title}</h2>\r\n            <div className=\"wrap-table\">\r\n                <div className=\"rates-col rates-up\">\r\n                    {/*<img className=\"arrow\" src={arrup} alt=\"arrow\"/>*/}\r\n                    {fillUp.length ? fillUp : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 persons\">{up}<img className=\"mb-1\" src={person} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div onClick={rates} className=\"rates-col bank\">\r\n                    {/*<img className=\"arrow middle\" src={bitcoin} alt=\"arrow\"/>*/}\r\n                    {bankCoin[0] > 0 ? fillBank : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 nowrap persons\">{bank.toFixed(4)}<img className=\"bank-img\" width=\"15\"\r\n                                                                                    height=\"20\"\r\n                                                                                    src={bitcoin} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"rates-col rates-down\">\r\n                    {/*<img className=\"arrow\" src={arrdown} alt=\"arrow\"/>*/}\r\n                    {fillDown.length ? fillDown : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 persons\">{down}<img className=\"mb-1\" src={person} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        down: state.balanceReducer.down,\r\n        up: state.balanceReducer.up,\r\n        downBets: state.balanceReducer.downBets,\r\n        upBets: state.balanceReducer.upBets,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    rates\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rates);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\RightSector.js",["300"],"import React, {useEffect, useState} from 'react';\r\nimport deposit from '../../images/deposit.svg';\r\nimport withdraw from '../../images/withdraw.svg';\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {playClick, transition} from \"../../redux/actions/music\";\r\nimport switchWallet from \"../../images/switch_wallet.svg\";\r\nimport {changeDemo, userdata} from \"../../redux/actions/game\";\r\nimport {createAd} from \"../../redux/actions\";\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\nconst RightSector = ({balance, lastWinGame, lastgame, wins, colorBlalance, userdata, name, isDemo, threewins, changeDemo, createAd, predict, currentLang, playClick, transition}) => {\r\n    const [switcher, setSwitcher] = useState(false);\r\n    const [banner, setBanner] = useState(\"banner one round-dark\");\r\n    const LANG = currentLang === \"en\" ? EN : RU;\r\n    const balanceColor = {color: colorBlalance === 'green' ? '#32D74B' : colorBlalance === 'red' ? '#FF453A' : '#FFFFFF'}\r\n\r\n    useEffect(() => {\r\n        const addBanner = setInterval(() => {\r\n            if(banner === \"banner one round-dark\") {\r\n                setBanner(\"banner three round-dark\");\r\n            // } else if (banner === \"banner two round-dark\") {\r\n            //     setBanner(\"banner three round-dark\");\r\n            } else if(banner === \"banner three round-dark\") {\r\n                setBanner(\"banner one round-dark\");\r\n            }\r\n        }, 30000)\r\n        return () => clearInterval(addBanner)\r\n    }, [banner])\r\n    useEffect(() => {\r\n        userdata();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"right-sector\">\r\n            <div style={{display: switcher ? \"block\" : \"none\"}} className=\"blur\">\r\n                <div className=\"round-dark win\">\r\n                    <h2 className=\"curremtLang\">{LANG.Training.UsualState.SwitchingToReal.title}</h2>\r\n                    {/*<div className=\"text-center\">You are going to play on real <br/> money. Are you sure? </div>*/}\r\n                    <div className=\"win-btn\">\r\n                        <button onClick={() => {\r\n                            playClick();\r\n                            changeDemo();\r\n                            setSwitcher(false);\r\n                        }}\r\n                                className={currentLang + \" btn btn-primary\"}>{isDemo ? LANG.Training.UsualState.SwitchingToReal.btnSwitchToReal : LANG.Training.UsualState.SwitchingToDemo.btnSwitchToDemo}\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            playClick();\r\n                            userdata();\r\n                            setSwitcher(false);\r\n                        }} className={currentLang + \" btn btn-primary\"}>{!isDemo ? LANG.Training.UsualState.SwitchingToDemo.btnContinueReal : LANG.Training.UsualState.SwitchingToReal.btnContinueDemo}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"score-wrap round-dark\">\r\n                <h2 className=\"currentLang\">{isDemo ? LANG.Training.UsualState.DemoWallet.title : LANG.BettingRealMoney.UsualState.MyWallet.title}\r\n                    <span onClick={() => {\r\n                        if(!predict) {\r\n                            setSwitcher(true)\r\n                        }\r\n                        transition()\r\n                    }} className={isDemo ? \"switch-wrapper demo\" : \"switch-wrapper real\"}\r\n                    style={predict ? {filter: 'grayscale(1)', opacity: .5} : null}>\r\n                    <img src={switchWallet} alt=\"\"/>\r\n                </span></h2>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <div className={currentLang + \" label\"}>{LANG.BettingRealMoney.UsualState.MyWallet.nameTitle}</div>\r\n                            <div className=\"score\" id=\"name\">{name}</div>\r\n                        </td>\r\n                        <td>\r\n                            <div className={currentLang + \" label\"}>{LANG.BettingRealMoney.UsualState.MyWallet.winsTitle}</div>\r\n                            <div className=\"score\" id=\"wins\">{wins}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <div className={currentLang + \" label\"}>{LANG.BettingRealMoney.UsualState.MyWallet.balanceTitle}</div>\r\n                            <div style={balanceColor} className=\"score\" id=\"balance\">{balance} BTC</div>\r\n                        </td>\r\n                        <td>\r\n                            <div className={currentLang + \" label\"}>{LANG.BettingRealMoney.UsualState.MyWallet.lastWinTitle}</div>\r\n                            <div className=\"score\" id=\"lastWin\">{lastWinGame || '0.000'} BTC</div>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                {!isDemo\r\n                    ? <div>\r\n                    <Link to=\"/refill\" style={{pointerEvents: predict ? \"none\" : \"auto\"}} className={currentLang + \" btn money-btn green\"} onClick={playClick}>{LANG.BettingRealMoney.UsualState.MyWallet.btnDeposit}\r\n                    <img src={deposit} alt=\"deposit\"/>\r\n                    </Link>\r\n                    <Link to=\"/withdraw\" style={{pointerEvents: predict ? \"none\" : \"auto\"}} className={currentLang + \" btn money-btn red\"} onClick={playClick}>{LANG.BettingRealMoney.UsualState.MyWallet.btnWithdraw}\r\n                    <img src={withdraw} alt=\"withdraw\"/>\r\n                    </Link>\r\n                    </div>\r\n                    : <div>\r\n                        <button disabled={predict} onClick={() => {setSwitcher(true); playClick()}}  className={currentLang + \" btn money-btn green\"}>{LANG.Training.UsualState.DemoWallet.btnBetBitcoin}\r\n                            {/*<img src={withdraw} alt=\"withdraw\"/>*/}\r\n                        </button>\r\n                        <Link to=\"/invite\" style={{pointerEvents: predict ? \"none\" : \"auto\"}} className={currentLang + \" btn money-btn friends\"} onClick={playClick}>{LANG.Training.UsualState.DemoWallet.btnPlayWithFriends}\r\n                            {/*<img src={deposit} alt=\"deposit\"/>*/}\r\n                        </Link>\r\n\r\n                    </div>}\r\n            </div>\r\n            <div onClick={() => {\r\n                window.open('https://bitrxapp.com/?gb', '_blank')\r\n            }} className={banner}>\r\n                <button style={{display: banner !== \"banner one round-dark\" ? \"none\" : \"block\"}} className=\"btn learn-more\" onClick={playClick}>Learn more</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        balance: state.balanceReducer.balance,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        lastgame: state.balanceReducer.lastgame,\r\n        colorBlalance: state.balanceReducer.colorBlalance,\r\n        wins: state.balanceReducer.wins,\r\n        name: state.balanceReducer.name,\r\n        threewins: state.balanceReducer['3wins'],\r\n        isDemo: state.balanceReducer.isDemo,\r\n        predict: state.balanceReducer.predict,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    // click,\r\n    userdata,\r\n    changeDemo,\r\n    createAd,\r\n    playClick,\r\n    transition\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSector);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\fireworks.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Dashboard.js",["301","302"],"import React, {useState, useEffect} from 'react';\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport arrowUp from \"../../images/arrowUp.svg\";\r\nimport arrowDown from \"../../images/arrowDown.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport {betLose, betWin, closeCongratulation} from \"../../redux/actions\";\r\nimport {bell, click, up_down, fireworks, you_lose, muteToggle, playTimer, playTimer2} from \"../../redux/actions/music\";\r\nimport Rates from \"./Rates\";\r\nimport {User} from \"../../api/User\";\r\nimport {predictClear, predictDown, predictUp, userdata} from \"../../redux/actions/game\";\r\nimport Rect from \"./Rect/Rect\";\r\nimport Timer from \"./Timer\";\r\nimport Online from \"./Online\";\r\n\r\nimport {EN} from \"../../languages/en\";\r\nimport {RU} from \"../../languages/ru\";\r\n\r\n\r\nconst Dashboard = ({predictUp, betWin, betLose, fireworks, userdata, predictClear, predictDown, balance, predict, upBets, downBets, up, down, lastSeconds, widthMode, currentLang, up_down, you_lose, playTimer, playTimer2}) => {\r\n    const [bet, setBet] = useState(.0001);\r\n    const [counter, setCounter] = useState(10);\r\n    const [gameStart, setGameStart] = useState(undefined);\r\n    const LANG = currentLang === \"en\" ? EN : RU;\r\n    const time = 10;\r\n    const initialOffset = 440;\r\n    const i = 10 - counter || 1;\r\n    let timeBet = lastSeconds % 20 === 0 || lastSeconds % 20 === 5;\r\n    let startGame = lastSeconds % 20 === 10 || lastSeconds % 20 === 15;\r\n\r\n    useEffect(() => {\r\n        if (startGame && gameStart === undefined) {\r\n            setGameStart(lastSeconds);\r\n            predictSubmit();\r\n        }\r\n\r\n    }, [lastSeconds])\r\n    useEffect(() => {\r\n        if(startGame) {\r\n            console.log('use');\r\n            playTimer();\r\n        }\r\n        if (timeBet) {\r\n            console.log('no');\r\n            playTimer2()\r\n        }\r\n    }, [startGame, timeBet])\r\n\r\n    const setBetHandler = (e) => {\r\n        let bet = +e.target.value.slice(0, 5);\r\n        if (!bet) {\r\n            bet = 0.0001;\r\n        }\r\n        if (bet > 1) {\r\n            bet = 1;\r\n        }\r\n        setBet(bet || 0.0001);\r\n    }\r\n\r\n    const betDone = (e) => {\r\n        let rate = e.target.id;\r\n        up_down();\r\n        if (rate === 'up') {\r\n            predictUp({value: bet.toString()});\r\n        } else if (rate === 'down') {\r\n            predictDown({value: bet.toString()});\r\n        }\r\n    }\r\n\r\n    const predictSubmit = () => {\r\n        const timer = setInterval(() => {\r\n            setCounter(counter - 1);\r\n        }, 1000)\r\n        return setTimeout(() => {\r\n            clearInterval(timer);\r\n            setCounter(10);\r\n            User.userdata()\r\n                .then(data => {\r\n                    if (+data.data.data.lastWin === 1 && predict !== '') {\r\n                        betWin();\r\n                        fireworks();\r\n                    } else if (+data.data.data.lastWin === -1 && predict !== '') {\r\n                        you_lose();\r\n                        betLose();\r\n                        userdata();\r\n                    } else if (up > 0 && down > 0) {\r\n                        userdata();\r\n                    } else {\r\n                        userdata();\r\n                    }\r\n                }).catch(e => {console.log(e)});\r\n            setGameStart(undefined);\r\n            predictClear();\r\n        }, 10000)\r\n    }\r\n\r\n    const btnDownHandler = (e) => {\r\n        e.preventDefault();\r\n        betDone(e);\r\n    }\r\n\r\n    if (startGame) {\r\n        return (\r\n            <div className={`${widthMode} row bottom-container`}>\r\n                {widthMode === \"desktop\" ? <Rates/> : <></>}\r\n                <div className={`${widthMode} round dashboard big-timer`}>\r\n                    <Timer/>\r\n                    {startGame && !predict\r\n                        ? <span style={{display: startGame && !predict ? 'inline' : 'none'}}\r\n                                className=\"off text-center\">All bets are off</span>\r\n                        : <div style={{\r\n                            display: predict === 'up' || !predict ? 'inline' : 'none',\r\n                            transform: startGame && (predict === 'down' || !predict) ? 'scale(0)' : 'scale(1)'\r\n                        }} className=\"up\">\r\n                            <div style={{display: predict === 'down' ? \"none\" : \"inherit\"}} className=\"profit\">\r\n                                                    <span style={{\r\n                                                        fontSize: '21px',\r\n                                                        display: widthMode === \"mobile\" ? \"inline\" : \"inline\"\r\n                                                    }}\r\n                                                          className={currentLang + \" green\"}>{LANG.Training.UsualState.MakeBet.yourProfit} </span>\r\n                                <span style={{fontSize: '21px'}}>\r\n                                                    {up || down ? ((bet / (bet + upBets) * downBets) * 0.97).toFixed(6) : 0}\r\n                                                </span>\r\n                                <img style={{marginTop: '-5px'}} src={bitcoin} width=\"15\" height=\"21\" alt=\"b\"/>\r\n                            </div>\r\n                        </div>}\r\n                    {startGame && (predict === 'up' || !predict)\r\n                        ? <></>\r\n                        :\r\n                        <div style={{display: (predict === 'down' || !predict) ? 'block' : 'none'}}\r\n                             className=\"down\">\r\n                            <div style={{display: predict === 'up' ? \"none\" : \"inherit\"}} className=\"profit\">\r\n                                                    <span style={{\r\n                                                        fontSize: '21px',\r\n                                                        display: widthMode === \"mobile\" ? \"inline\" : \"inline\"\r\n                                                    }}\r\n                                                          className={currentLang + \" red\"}>{LANG.Training.UsualState.MakeBet.yourProfit} </span>\r\n                                <span\r\n                                    style={{fontSize: '21px'}}>{up || down ? ((bet / (bet + downBets) * upBets) * 0.97).toFixed(6) : 0}\r\n                                                </span>\r\n                                <img style={{marginTop: '-5px'}} src={bitcoin} width=\"15\" height=\"21\" alt=\"b\"/>\r\n                            </div>\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={`${widthMode} row bottom-container`}>\r\n                {widthMode === \"desktop\" ? <Rates/> : <></>}\r\n                <div className={`${widthMode} round dashboard`}>\r\n                    <div className=\"range\">\r\n                        <div className=\"form-label d-flex justify-content-between\">\r\n                            <div>\r\n                                <h2 className={predict || startGame ? \"text-left\" : \"make-bet text-left\"}>{LANG.BettingRealMoney.UsualState.MakeBet.title}</h2>\r\n                                {/*<span className=\"time-bet\">{timeBet ? counterBet : ''}</span>*/}\r\n                            </div>\r\n                            <div>\r\n                                {widthMode === \"mobile\" ? <Online/> : <></>}\r\n                                <span className={balance - bet >= 0 ? '' : 'red'}>\r\n                                <input id=\"numberBet\" type=\"number\" step=\"0.0001\" min=\"0.0001\" max=\"1\"\r\n                                       className={balance - bet >= 0 ? '' : 'red'}\r\n                                       disabled={predict || !timeBet}\r\n                                       onInput={setBetHandler}\r\n                                       value={bet}/>\r\n                                <img className=\"numberBet\" width=\"15\" src={bitcoin} alt=\"up\"/>\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={e => e.preventDefault()}>\r\n                            <div className=\"form\">\r\n                                <div className=\"bet\">\r\n                                    <input min=\"0.0001\" max=\"1\" step=\"0.0001\"\r\n                                           type=\"range\"\r\n                                           disabled={predict || !timeBet || startGame}\r\n                                           value={bet}\r\n                                           style={{backgroundImage: `linear-gradient(to right, ${balance - bet >= 0 ? '#32D74B' : '#FF453A'} 0%, ${balance - bet >= 0 ? '#32D74B' : '#FF453A'} ${bet * 100}%, #fff ${bet * 100}%, white 100%)`}}\r\n                                           onChange={setBetHandler}\r\n                                           className={balance - bet >= 0 ? 'green-range' : 'red-range'}\r\n                                           id=\"range\"/>\r\n                                </div>\r\n                                <div className='wrap-btn'>\r\n\r\n                                    {startGame && (predict === 'down' || !predict)\r\n                                        ? <span style={{display: startGame && !predict ? 'flex' : 'none'}}\r\n                                                className=\"off\">All bets are off</span>\r\n                                        : <div style={{\r\n                                            display: predict === 'up' || !predict ? 'block' : 'none',\r\n                                            transform: startGame && (predict === 'down' || !predict) ? 'scale(0)' : 'scale(1)'\r\n                                        }} className=\"up\">\r\n                                            <div className=\"profit\">\r\n                                                    <span style={{display: widthMode === \"mobile\" ? \"block\" : \"inline\"}}\r\n                                                          className={\" green\"}>{LANG.BettingRealMoney.UsualState.MakeBet.yourProfit}</span>\r\n                                                <span> <br/>\r\n                                                    {up || down ? ((bet / (bet + upBets) * downBets) * 0.97).toFixed(6) : 0}\r\n                                                </span>\r\n                                                <img src={bitcoin} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                            </div>\r\n                                            <button disabled={predict || balance - bet < 0 || !timeBet}\r\n                                                    onClick={(e) => {\r\n                                                        e.preventDefault();\r\n                                                        betDone(e);\r\n                                                    }}\r\n                                                    className={\" btn green predict-btn\"}>{LANG.BettingRealMoney.UsualState.MakeBet.btnUp}\r\n\r\n                                                <img src={arrowUp} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                                <Rect idButton={'up'} mode={timeBet ? 'rectUp' : \"\"}/>\r\n                                            </button>\r\n                                        </div>}\r\n\r\n                                    <p\r\n                                        style={{\r\n                                            display: startGame && predict === 'up' ? 'flex' : 'none'\r\n                                        }}\r\n                                        id=\"predict\"\r\n                                        className=\"btn bet-btn col-sm-4\">\r\n                                            <span className=\"gold\">{counter}\r\n                                                <span className='circle'>\r\n                                                    <svg width=\"160\" height=\"160\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <g>\r\n                                                        <title>Layer 1</title>\r\n                                                        <circle\r\n                                                            strokeDasharray={440}\r\n                                                            strokeDashoffset={counter === 10 ? -2 * initialOffset : ((i + 1) * (initialOffset / time)) - 2 * initialOffset}\r\n                                                            id=\"circle\" className=\"circle_animation\" r=\"69.85699\"\r\n                                                            cy=\"81\"\r\n                                                            cx=\"81\" strokeWidth=\"6\"\r\n                                                            stroke=\"#F7931A\" fill=\"none\"/>\r\n                                                    </g>\r\n                                                </svg>\r\n                                                </span>\r\n                                            </span>\r\n                                    </p>\r\n\r\n                                    <p style={{\r\n                                        display: startGame && (predict === 'down' || !predict) ? 'flex' : 'none'\r\n                                    }}\r\n                                       id=\"predict\"\r\n                                       className=\"btn bet-btn col-sm-4\">\r\n                                            <span className=\"gold\">{counter}\r\n                                                <span className='circle'>\r\n                                                    <svg width=\"160\" height=\"160\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <g>\r\n                                                        <title>Layer 1</title>\r\n                                                        <circle\r\n                                                            strokeDasharray={440}\r\n                                                            strokeDashoffset={counter === 10 ? -2 * initialOffset : ((i + 1) * (initialOffset / time)) - 2 * initialOffset}\r\n                                                            id=\"circle\" className=\"circle_animation\" r=\"69.85699\"\r\n                                                            cy=\"81\"\r\n                                                            cx=\"81\" strokeWidth=\"6\"\r\n                                                            stroke=\"#F7931A\" fill=\"none\"/>\r\n                                                    </g>\r\n                                                </svg>\r\n                                                </span>\r\n                                            </span>\r\n                                    </p>\r\n\r\n                                    {startGame && (predict === 'up' || !predict)\r\n                                        ? <></>\r\n                                        :\r\n                                        <div style={{display: (predict === 'down' || !predict) ? 'block' : 'none'}}\r\n                                             className=\"down\">\r\n                                            <div className=\"profit\">\r\n                                                    <span style={{display: widthMode === \"mobile\" ? \"block\" : \"inline\"}}\r\n                                                          className={\" red\"}>{LANG.BettingRealMoney.UsualState.MakeBet.yourProfit}</span>\r\n                                                <span> <br/>\r\n                                                    {up || down ? ((bet / (bet + downBets) * upBets) * 0.97).toFixed(6) : 0}\r\n                                                </span>\r\n                                                <img src={bitcoin} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                            </div>\r\n                                            <button disabled={predict || balance - bet < 0 || !timeBet}\r\n                                                // onClick={() => up_down()}\r\n                                                    onClick={(e) => {\r\n                                                        btnDownHandler(e)\r\n                                                    }}\r\n                                                    className={\" btn red predict-btn\"}\r\n                                                    id=\"down\">{LANG.BettingRealMoney.UsualState.MakeBet.btnDown}\r\n                                                <img src={arrowDown} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                                <Rect idButton={'down'} mode={timeBet ? 'rectDown' : \"\"}/>\r\n                                            </button>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        balance: state.balanceReducer.balance,\r\n        congratulation: state.balanceReducer.congratulation,\r\n        course: state.courseReducer.course,\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        currentTime: state.courseReducer.currentTime,\r\n        lastSeconds: state.courseReducer.lastSeconds,\r\n        lastWin: state.balanceReducer.lastWin,\r\n        predict: state.balanceReducer.predict,\r\n        downBets: state.balanceReducer.downBets,\r\n        upBets: state.balanceReducer.upBets,\r\n        up: state.balanceReducer.up,\r\n        down: state.balanceReducer.down,\r\n        widthMode: state.switchOptions.widthMode,\r\n        currentLang: state.switchOptions.lang\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    betWin,\r\n    betLose,\r\n    predictUp,\r\n    predictDown,\r\n    predictClear,\r\n    click,\r\n    up_down,\r\n    you_lose,\r\n    bell,\r\n    playTimer,\r\n    playTimer2,\r\n    fireworks,\r\n    closeCongratulation,\r\n    muteToggle,\r\n    userdata\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\types.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\sound\\Sound.js",["303","304"],"import React, {useRef, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {stop} from '../redux/actions/music';\r\n\r\nconst Sound = ({play, param, stop, mute}) => {\r\n    const audRef = useRef(null);\r\n    const handlePlay = () => {\r\n        audRef.current.play();\r\n    }\r\n    const muted = () => {\r\n        audRef.current.muted = !mute;\r\n    }\r\n    useEffect(() => {\r\n        if (param.id === play) {\r\n            audRef.current.id === 'fireworks' ? audRef.current.volume = 0.3 : audRef.current.volume = 0.7;\r\n            audRef.current.id === 'timer' ? audRef.current.playbackRate = 1.06 : audRef.current.playbackRate = 1.0;\r\n            handlePlay();\r\n        }\r\n        stop();\r\n    }, [param.id, play, handlePlay]);\r\n    useEffect(() => {\r\n        muted();\r\n    }, [muted]);\r\n    return (\r\n        <div className=\"sound\">\r\n            <audio ref={audRef} id={param.id} src={param.effect}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        play: state.soundReducer.play,\r\n        mute: state.soundReducer.mute\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    stop\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sound);\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\game.js",["305"],"import {\r\n    BET_LOSE,\r\n    BET_WIN, CHANGE_DEMO,\r\n    CLEAR_BET,\r\n    CLOSE_CONGRATULATION, CLOSE_YOURLOSE,\r\n    GET_RATES,\r\n    GET_USER_DATA, GOAWAY,\r\n    SET_BET_DOWN,\r\n    SET_BET_UP\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    balance: 0,\r\n    lastWin: 0,\r\n    lastWinGame: 0,\r\n    lastgame: 0,\r\n    wins: 0,\r\n    '3wins': false,\r\n    btcWallet: '',\r\n    isDemo: undefined,\r\n    congratulation: false,\r\n    predict: '',\r\n    colorBlalance: 'white',\r\n    down: 0,\r\n    up: 0,\r\n    upBets: 0,\r\n    downBets: 0,\r\n    online: 0,\r\n    yourlose: false\r\n\r\n}\r\nexport const balanceReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case CHANGE_DEMO:\r\n            return {\r\n                ...state,\r\n                isDemo: !state.isDemo\r\n            };\r\n        case GET_USER_DATA:\r\n            if (action.payload.isDemo) {\r\n                return {\r\n                    ...state,\r\n                    '3wins': action.payload['3wins'],\r\n                    balance: action.payload.demoBalance,\r\n                    btcWallet: action.payload.btcWallet,\r\n                    wins: action.payload.wins,\r\n                    lastWin: action.payload.lastWin,\r\n                    lastWinGame: action.payload.lastWinGame,\r\n                    lastgame: action.payload.lastgame,\r\n                    name: action.payload.name,\r\n                    online: action.payload.online,\r\n                    isDemo: action.payload.isDemo\r\n                };\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    '3wins': action.payload['3wins'],\r\n                    balance: action.payload.balance,\r\n                    btcWallet: action.payload.btcWallet,\r\n                    wins: action.payload.wins,\r\n                    lastWin: action.payload.lastWin,\r\n                    lastWinGame: action.payload.lastWinGame,\r\n                    lastgame: action.payload.lastgame,\r\n                    name: action.payload.name,\r\n                    online: action.payload.online,\r\n                    isDemo: action.payload.isDemo\r\n                };\r\n            }\r\n        case GET_RATES:\r\n            if (state.isDemo) {\r\n                return {\r\n                    ...state,\r\n                    down: action.payload.demo.down.peoples,\r\n                    up: action.payload.demo.up.peoples,\r\n                    upBets: action.payload.demo.up.bitcoins,\r\n                    downBets: action.payload.demo.down.bitcoins,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    down: action.payload.real.down.peoples,\r\n                    up: action.payload.real.up.peoples,\r\n                    upBets: action.payload.real.up.bitcoins,\r\n                    downBets: action.payload.real.down.bitcoins,\r\n                }\r\n            }\r\n        case BET_WIN:\r\n            return {\r\n                ...state,\r\n                congratulation: true,\r\n                colorBlalance: 'green'\r\n            };\r\n        case BET_LOSE:\r\n            return {\r\n                ...state,\r\n                colorBlalance: 'red',\r\n                yourlose: true\r\n            };\r\n        case SET_BET_UP:\r\n            return {\r\n                ...state,\r\n                predict: 'up'\r\n            };\r\n        case SET_BET_DOWN:\r\n            return {\r\n                ...state,\r\n                predict: 'down'\r\n            };\r\n        case CLEAR_BET:\r\n            return {\r\n                ...state,\r\n                predict: ''\r\n            };\r\n        case CLOSE_CONGRATULATION:\r\n            return {...state, congratulation: false};\r\n        case CLOSE_YOURLOSE:\r\n            return {...state, yourlose: false};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\sound.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\redux\\reducers\\entry.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\api\\Api.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Main\\Timer.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Presentation.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step1.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step3.js",["306"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport imgPerson from '../../images/person x5F 3 1.png'\r\nimport {switchStep} from '../../redux/actions/index';\r\nimport {playClick} from '../../redux/actions/music';\r\nimport {connect} from 'react-redux';\r\nimport {EN} from '../../languages/en'\r\nimport {RU} from '../../languages/ru'\r\n\r\nconst Step3 = ({playClick, switchStep, currentLang}) => {\r\n    const LANG = currentLang === 'en' ? EN : RU;\r\n    return (\r\n        <div className=\"step step3\">\r\n            <img className='step-img' src={imgPerson} alt='person'/>\r\n\r\n\r\n            <div className='step-content'>\r\n                <ul className='list-lines'>\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n                </ul>\r\n                <h3 className='step-content__title'>{LANG.Intro.Step3.title}</h3>\r\n                <p className='step-content__content'>{LANG.Intro.Step3.content}</p>\r\n                <ul className=\"step-nav\">\r\n                    <li className='step-nav__item' onClick={() => {\r\n                        switchStep(2);\r\n                        playClick()\r\n                    }}>\r\n                        <span>{LANG.Intro.btnIntro.prev}</span>\r\n                    </li>\r\n                    <li className='step-nav__item step-nav_btnSkip' onClick={() => {\r\n                        switchStep(0);\r\n                        playClick()\r\n                    }}>\r\n                        <span>{LANG.Intro.btnIntro.skip}</span>\r\n                    </li>\r\n                    <li className='step-nav__item' onClick={() => {\r\n                        switchStep(4);\r\n                        playClick();\r\n                    }}>\r\n                        <span>{LANG.Intro.btnIntro.next}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentLang: state.switchOptions.lang\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    switchStep,\r\n    playClick\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step3)","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step5.js",["307","308"],"import React from 'react'\r\nimport imgPerson from '../../images/person x5F 1 1.png'\r\nimport {switchStep} from '../../redux/actions/index';\r\nimport {click, playClick} from '../../redux/actions/music';\r\nimport {connect} from 'react-redux';\r\nimport {EN} from '../../languages/en'\r\nimport {RU} from '../../languages/ru'\r\n\r\n\r\nconst Step5 = ({playClick, switchStep, currentLang}) => {\r\n    const LANG = currentLang === 'en' ? EN : RU;\r\n\r\n    return (\r\n        <div className=\"step step5\">\r\n            <img className='step-img' src={imgPerson} alt='person'/>\r\n\r\n\r\n            <div className='step-content'>\r\n                <ul className='list-lines'>\r\n\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n\r\n                </ul>\r\n                <h3 className='step-content__title'>{LANG.Intro.Step5.title}</h3>\r\n                <p className='step-content__content'>{LANG.Intro.Step5.content}</p>\r\n                <ul className=\"step-nav\">\r\n\r\n                    <li className='step-nav__item' onClick={() => {\r\n                        switchStep(4);\r\n                        playClick()\r\n                    }}>\r\n                        <span>{LANG.Intro.btnIntro.prev}</span>\r\n                    </li>\r\n                    <li className='step-nav__item step-nav_btnSkip' onClick={() => {\r\n                        switchStep(0);\r\n                        playClick()\r\n                    }}>\r\n                        <span>{LANG.Intro.btnIntro.skip}</span>\r\n                    </li>\r\n                    <li className='step-nav__item' onClick={() => {\r\n                        switchStep(0);\r\n                        playClick()\r\n                    }}>\r\n                        <span>{LANG.Intro.btnIntro.finish}</span>\r\n\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentLang: state.switchOptions.lang\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    switchStep,\r\n    playClick\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step5)\r\n\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step4.js",["309"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport imgPerson from '../../images/person x4F 4 1.png'\r\nimport {switchStep} from '../../redux/actions/index';\r\nimport {playClick} from '../../redux/actions/music';\r\nimport {connect} from 'react-redux';\r\nimport {EN} from '../../languages/en'\r\nimport {RU} from '../../languages/ru'\r\n\r\nconst Step4 = ({playClick, switchStep, currentLang}) => {\r\n    const LANG = currentLang === 'en' ? EN : RU;\r\n    return (\r\n        <div className=\"step step4\">\r\n            <img className='step-img' src={imgPerson} alt='person'/>\r\n\r\n\r\n            <div className='step-content'>\r\n                <ul className='list-lines'>\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n                    <li className=\"list-lines__item\" />\r\n                </ul>\r\n                <h3 className='step-content__title'>{LANG.Intro.Step4.title}</h3>\r\n                <p className='step-content__content'>{LANG.Intro.Step4.content}</p>\r\n                <ul className=\"step-nav\">\r\n                    <li className='step-nav__item' onClick={() => {\r\n                        switchStep(3);\r\n                        playClick()\r\n                    }}>\r\n                        <span>{LANG.Intro.btnIntro.prev}</span>\r\n                    </li>\r\n                    <li className='step-nav__item step-nav_btnSkip' onClick={() => {\r\n                        switchStep(0);\r\n                        playClick()\r\n                    }}>\r\n                        <span>{LANG.Intro.btnIntro.skip}</span>\r\n                    </li>\r\n                    <li className='step-nav__item' onClick={() => {\r\n                        switchStep(5);\r\n                        playClick()\r\n                    }}>\r\n                        <span>{LANG.Intro.btnIntro.next}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentLang: state.switchOptions.lang\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    switchStep,\r\n    playClick\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step4)","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Intro\\Step2.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\ImagePreview.js",["310"],"import React from \"react\";\r\n// hooks\r\nimport useImagePreview from \"../../useImagePreview\";\r\n\r\nconst ImagePreview = () => {\r\n  const [image, setFile] = useImagePreview();\r\n\r\n  return (\r\n    <div>\r\n      <h2>Ad creative</h2>\r\n\r\n      <div className=\"wrapper-input-file\">\r\n        <div className=\"label-file\">\r\n          Select a banner to add <br />\r\n          275 x 270 px\r\n        </div>\r\n\r\n        <div className=\"wrap-input\">\r\n          <label className=\"dashed\" htmlFor=\"ad-file\">\r\n            {image ? (\r\n              <img className=\"image-preview\" src={image} />\r\n            ) : (\r\n              <div className=\"description\">Drag and drop file here or</div>\r\n            )}\r\n            <input onChange={setFile} type=\"file\" id=\"ad-file\" />\r\n          </label>\r\n\r\n          <label htmlFor=\"ad-file\" className=\"btn-file\">\r\n            Choose file\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagePreview;\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\Tabs.js",["311","312"],"import React, { useState } from \"react\";\r\n// components\r\nimport { RangeInput } from \"./FormInput\";\r\n// styles\r\nimport \"./style.scss\";\r\n// images\r\nimport bitcoin from \"../../../../../images/bitcoin.svg\";\r\nimport dollar from \"../../../../../images/dollar.svg\";\r\n\r\nconst Tabs = ({ tabs }) => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  return (\r\n    <div className=\"tabsContainer\">\r\n      <div className=\"tabs\">\r\n        {tabs.map(({ id, label }) => (\r\n          <div\r\n            key={id}\r\n            className={activeTab === id ? \"activeTab\" : \"tab\"}\r\n            onClick={() => setActiveTab(id)}\r\n          >\r\n            {label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"daily\">\r\n        <span>Daily budget</span>\r\n        <span>Actual amount spend daily may vary</span>\r\n      </div>\r\n\r\n      <div className=\"estimated\">\r\n        <div className=\"estimated-perDay\">\r\n          <div style={{ textAlign: \"left\" }}>\r\n            Estimated 1K – 1,5K people <br />\r\n            reached per day\r\n          </div>\r\n\r\n          <div className=\"amount\">\r\n            <div className=\"amount-btc\">\r\n              0.0353 <img src={bitcoin} />\r\n            </div>\r\n\r\n            <div className=\"amount-dollar\">\r\n              <div className=\"dollarContainer\">1200</div>\r\n              <img src={dollar} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <RangeInput withError min={0} max={10000} balance={7500} />\r\n      </div>\r\n\r\n      <div className=\"content\">{tabs[activeTab]?.content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\components\\FormInput.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\useImagePreview.js",["313"],"import { useState } from \"react\";\r\n\r\nexport default () => {\r\n  const [image, setImage] = useState(null);\r\n\r\n  const setFile = ({ target }) => {\r\n    const localURL = URL.createObjectURL(target.files[0]);\r\n\r\n    setImage(localURL);\r\n  };\r\n\r\n  return [image, setFile];\r\n};\r\n","F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Duration\\Duration.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\Method.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Audience\\Audience.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Footer\\Footer.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\components\\index.js",[],"F:\\Open Server\\OSPanel\\domains\\localhost\\bitcybets\\src\\components\\Ads\\components\\Method\\components\\RadioButtonBlock.js",[],{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","severity":1,"message":"319","line":21,"column":8,"nodeType":"320","messageId":"321","endLine":21,"endColumn":20},{"ruleId":"318","severity":1,"message":"322","line":1,"column":26,"nodeType":"320","messageId":"321","endLine":1,"endColumn":35},{"ruleId":"323","severity":1,"message":"324","line":42,"column":8,"nodeType":"325","endLine":42,"endColumn":10,"suggestions":"326"},{"ruleId":"318","severity":1,"message":"327","line":47,"column":9,"nodeType":"320","messageId":"321","endLine":47,"endColumn":16},{"ruleId":"323","severity":1,"message":"328","line":62,"column":8,"nodeType":"325","endLine":62,"endColumn":27,"suggestions":"329"},{"ruleId":"330","severity":1,"message":"331","line":88,"column":25,"nodeType":"332","endLine":93,"endColumn":53},{"ruleId":"318","severity":1,"message":"333","line":12,"column":8,"nodeType":"320","messageId":"321","endLine":12,"endColumn":17},{"ruleId":"318","severity":1,"message":"334","line":13,"column":8,"nodeType":"320","messageId":"321","endLine":13,"endColumn":17},{"ruleId":"323","severity":1,"message":"335","line":56,"column":8,"nodeType":"325","endLine":56,"endColumn":23,"suggestions":"336"},{"ruleId":"318","severity":1,"message":"337","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"323","severity":1,"message":"338","line":50,"column":8,"nodeType":"325","endLine":50,"endColumn":24,"suggestions":"339"},{"ruleId":"323","severity":1,"message":"340","line":52,"column":39,"nodeType":"325","endLine":52,"endColumn":41,"suggestions":"341"},{"ruleId":"323","severity":1,"message":"342","line":8,"column":7,"nodeType":"325","endLine":8,"endColumn":9,"suggestions":"343"},{"ruleId":"318","severity":1,"message":"337","line":1,"column":27,"nodeType":"320","messageId":"321","endLine":1,"endColumn":35},{"ruleId":"323","severity":1,"message":"344","line":35,"column":8,"nodeType":"325","endLine":35,"endColumn":10,"suggestions":"345"},{"ruleId":"323","severity":1,"message":"338","line":33,"column":8,"nodeType":"325","endLine":33,"endColumn":10,"suggestions":"346"},{"ruleId":"323","severity":1,"message":"347","line":36,"column":8,"nodeType":"325","endLine":36,"endColumn":21,"suggestions":"348"},{"ruleId":"323","severity":1,"message":"349","line":46,"column":8,"nodeType":"325","endLine":46,"endColumn":28,"suggestions":"350"},{"ruleId":"323","severity":1,"message":"351","line":10,"column":11,"nodeType":"352","endLine":12,"endColumn":6},{"ruleId":"323","severity":1,"message":"353","line":20,"column":8,"nodeType":"325","endLine":20,"endColumn":36,"suggestions":"354"},{"ruleId":"318","severity":1,"message":"355","line":7,"column":20,"nodeType":"320","messageId":"321","endLine":7,"endColumn":26},{"ruleId":"318","severity":1,"message":"356","line":2,"column":10,"nodeType":"320","messageId":"321","endLine":2,"endColumn":14},{"ruleId":"318","severity":1,"message":"356","line":2,"column":10,"nodeType":"320","messageId":"321","endLine":2,"endColumn":14},{"ruleId":"318","severity":1,"message":"357","line":5,"column":9,"nodeType":"320","messageId":"321","endLine":5,"endColumn":14},{"ruleId":"318","severity":1,"message":"356","line":2,"column":10,"nodeType":"320","messageId":"321","endLine":2,"endColumn":14},{"ruleId":"358","severity":1,"message":"359","line":21,"column":15,"nodeType":"332","endLine":21,"endColumn":60},{"ruleId":"358","severity":1,"message":"359","line":40,"column":22,"nodeType":"332","endLine":40,"endColumn":43},{"ruleId":"358","severity":1,"message":"359","line":45,"column":15,"nodeType":"332","endLine":45,"endColumn":35},{"ruleId":"360","severity":1,"message":"361","line":3,"column":1,"nodeType":"362","endLine":13,"endColumn":3},"no-native-reassign",["363"],"no-negated-in-lhs",["364"],"no-unused-vars","'Presentation' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authorization'. Either include it or remove the dependency array. If 'authorization' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["365"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'prohibition'. Either include it or remove the dependency array. If 'prohibition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["366"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Preloader' is defined but never used.","'bitsybets' is defined but never used.","React Hook useEffect has missing dependencies: 'bet', 'course', 'lastSeconds', and 'startWin'. Either include them or remove the dependency array. If 'startWin' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["367"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'userdata'. Either include it or remove the dependency array. If 'userdata' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["368"],"React Hook useEffect has a missing dependency: 'switchView'. Either include it or remove the dependency array. If 'switchView' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["369"],"React Hook useEffect has a missing dependency: 'geoposition'. Either include it or remove the dependency array. If 'geoposition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["370"],"React Hook useEffect has a missing dependency: 'rates'. Either include it or remove the dependency array. If 'rates' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["371"],["372"],"React Hook useEffect has missing dependencies: 'gameStart', 'predictSubmit', and 'startGame'. Either include them or remove the dependency array.",["373"],"React Hook useEffect has missing dependencies: 'playTimer' and 'playTimer2'. Either include them or remove the dependency array. If 'playTimer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["374"],"The 'muted' function makes the dependencies of useEffect Hook (at line 23) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'muted' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'stop'. Either include it or remove the dependency array. If 'stop' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["375"],"'GOAWAY' is defined but never used.","'Link' is defined but never used.","'click' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},"Update the dependencies array to be: [authorization]",{"range":"398","text":"399"},"Update the dependencies array to be: [location.pathname, prohibition]",{"range":"400","text":"401"},"Update the dependencies array to be: [bet, course, currentCourse, lastSeconds, startWin]",{"range":"402","text":"403"},"Update the dependencies array to be: [congratulation, userdata]",{"range":"404","text":"405"},"Update the dependencies array to be: [switchView]",{"range":"406","text":"407"},"Update the dependencies array to be: [geoposition]",{"range":"408","text":"409"},"Update the dependencies array to be: [rates]",{"range":"410","text":"411"},"Update the dependencies array to be: [userdata]",{"range":"412","text":"413"},"Update the dependencies array to be: [gameStart, lastSeconds, predictSubmit, startGame]",{"range":"414","text":"415"},"Update the dependencies array to be: [playTimer, playTimer2, startGame, timeBet]",{"range":"416","text":"417"},"Update the dependencies array to be: [param.id, play, handlePlay, stop]",{"range":"418","text":"419"},[1647,1649],"[authorization]",[2171,2190],"[location.pathname, prohibition]",[2194,2209],"[bet, course, currentCourse, lastSeconds, startWin]",[1919,1935],"[congratulation, userdata]",[2013,2015],"[switchView]",[233,235],"[geoposition]",[1688,1690],"[rates]",[1597,1599],"[userdata]",[1604,1617],"[gameStart, lastSeconds, predictSubmit, startGame]",[1838,1858],"[playTimer, playTimer2, startGame, timeBet]",[705,733],"[param.id, play, handlePlay, stop]"]