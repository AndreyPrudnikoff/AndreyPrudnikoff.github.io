[{"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\index.js":"1","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\App.js":"2","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\reportWebVitals.js":"3","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\restore.js":"4","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Auth.js":"5","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Header\\Header.js":"6","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Main.js":"7","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Graph.js":"8","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\RightSector.js":"9","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Dashboard.js":"10","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\SelectList.js":"11","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\index.js":"12","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\entry.js":"13","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\index.js":"14","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\store.js":"15","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\types.js":"16","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\api\\User.js":"17","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\api\\Api.js":"18","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\game.js":"19","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Refill.js":"20","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Btc.js":"21","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Usd.js":"22","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\sound\\Sound.js":"23","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\sound\\Playlist.js":"24","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\sound.js":"25","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\music.js":"26","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\fireworks.js":"27","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Time.js":"28","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Rates.js":"29","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Preloader.js":"30","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\game.js":"31","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Rect\\Rect.js":"32","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Start\\Start.js":"33","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Support.js":"34","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Ads\\Ads.js":"35","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Withdraw.js":"36","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\CompleteWith.js":"37","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\CompletePay.js":"38","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Reset.js":"39","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Invite.js":"40","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\gotodesktop.js":"41"},{"size":591,"mtime":1613661191838,"results":"42","hashOfConfig":"43"},{"size":3519,"mtime":1613661191710,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1613661191846,"results":"45","hashOfConfig":"43"},{"size":3079,"mtime":1613661191721,"results":"46","hashOfConfig":"43"},{"size":11247,"mtime":1613669149519,"results":"47","hashOfConfig":"43"},{"size":7208,"mtime":1613728189696,"results":"48","hashOfConfig":"43"},{"size":6620,"mtime":1613728509033,"results":"49","hashOfConfig":"43"},{"size":10631,"mtime":1613661191721,"results":"50","hashOfConfig":"43"},{"size":6194,"mtime":1613668662805,"results":"51","hashOfConfig":"43"},{"size":14524,"mtime":1613719368055,"results":"52","hashOfConfig":"43"},{"size":2471,"mtime":1613661191729,"results":"53","hashOfConfig":"43"},{"size":2243,"mtime":1613727454071,"results":"54","hashOfConfig":"43"},{"size":2487,"mtime":1613727603448,"results":"55","hashOfConfig":"43"},{"size":367,"mtime":1613661191843,"results":"56","hashOfConfig":"43"},{"size":213,"mtime":1613661191845,"results":"57","hashOfConfig":"43"},{"size":1214,"mtime":1613727455419,"results":"58","hashOfConfig":"43"},{"size":1631,"mtime":1613661191711,"results":"59","hashOfConfig":"43"},{"size":445,"mtime":1613661191711,"results":"60","hashOfConfig":"43"},{"size":3814,"mtime":1613661191842,"results":"61","hashOfConfig":"43"},{"size":4433,"mtime":1613661191734,"results":"62","hashOfConfig":"43"},{"size":5847,"mtime":1613670170591,"results":"63","hashOfConfig":"43"},{"size":3319,"mtime":1613664420077,"results":"64","hashOfConfig":"43"},{"size":1075,"mtime":1613661191848,"results":"65","hashOfConfig":"43"},{"size":733,"mtime":1613661191847,"results":"66","hashOfConfig":"43"},{"size":894,"mtime":1613661191844,"results":"67","hashOfConfig":"43"},{"size":603,"mtime":1613661191841,"results":"68","hashOfConfig":"43"},{"size":9768,"mtime":1613661191742,"results":"69","hashOfConfig":"43"},{"size":970,"mtime":1613661191729,"results":"70","hashOfConfig":"43"},{"size":3840,"mtime":1613670729896,"results":"71","hashOfConfig":"43"},{"size":964,"mtime":1613661191726,"results":"72","hashOfConfig":"43"},{"size":2184,"mtime":1613661191840,"results":"73","hashOfConfig":"43"},{"size":232,"mtime":1613661191727,"results":"74","hashOfConfig":"43"},{"size":7338,"mtime":1613665720291,"results":"75","hashOfConfig":"43"},{"size":1178,"mtime":1613661191715,"results":"76","hashOfConfig":"43"},{"size":883,"mtime":1613661191712,"results":"77","hashOfConfig":"43"},{"size":2902,"mtime":1613661191735,"results":"78","hashOfConfig":"43"},{"size":912,"mtime":1613661191733,"results":"79","hashOfConfig":"43"},{"size":844,"mtime":1613661191732,"results":"80","hashOfConfig":"43"},{"size":3710,"mtime":1613661191714,"results":"81","hashOfConfig":"43"},{"size":2707,"mtime":1613661191733,"results":"82","hashOfConfig":"43"},{"size":703,"mtime":1613661191720,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"nhk3jc",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\index.js",[],["174","175"],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\App.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\reportWebVitals.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\restore.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Auth.js",["176"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport './auth.scss';\r\nimport {authorization, betWin, registration} from \"../../redux/actions\";\r\nimport {User} from \"../../api/User\";\r\nimport {fireworks, muteToggle} from \"../../redux/actions/music\";\r\n\r\nconst Auth = ({reg, authorization, registration, muteToggle, mute, betWin, fireworks, history, widthMode}) => {\r\n    const [password, setPassword] = useState(true)\r\n    const [passwordConfirm, setPasswordConfirm] = useState(true)\r\n    const [name, setName] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [confpass, setConfpass] = useState('')\r\n    const [code, setCode] = useState('')\r\n    const [enterCode, setEnterCode] = useState(false)\r\n    const [err, setErr] = useState('')\r\n\r\n    const phoneRef = useRef(null);\r\n    const moveCaretToEnd = () => {\r\n        if (phoneRef.createTextRange) {\r\n            const r = phoneRef.createTextRange();\r\n            r.collapse(false);\r\n            r.select();\r\n        }\r\n    }\r\n    const clearData = () => {\r\n        setName('');\r\n        setPhone('');\r\n        setEmail('');\r\n        setPass('');\r\n        setConfpass('');\r\n        setErr('');\r\n        setCode('');\r\n        setEnterCode(false);\r\n    }\r\n    const setPhoneNumber = (value) => {\r\n        setPhone(value);\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const body = JSON.stringify({name, phone, email, pass, confpass});\r\n        if (confpass.length < 8 || confpass.length < 8) {\r\n            setErr('Password length must be 8 characters')\r\n        } else {\r\n            User.register(body)\r\n                .then(data => {\r\n                    if (data.data.status === \"success\") {\r\n                        setEnterCode(true);\r\n                    } else {\r\n                        if (data.data.error) {\r\n                            setErr(data.data.error);\r\n                        } else return false;\r\n                    }\r\n                })\r\n                .catch(error => setErr(error.response.data.error))\r\n        }\r\n    }\r\n    const codeSubmit = (e) => {\r\n        e.preventDefault();\r\n        User.code({code: code})\r\n            .then(res => {\r\n                if (res.data.status === \"success\") {\r\n                    if (widthMode === \"desktop\") {\r\n                        sessionStorage.setItem('token', res.data.data.accessToken);\r\n                        authorization();\r\n                        history.push('/game');\r\n                        if (!mute) {\r\n                            muteToggle();\r\n                        }\r\n                        betWin();\r\n                        fireworks();\r\n                    } else {\r\n                        history.push(\"/gotodesktop\")\r\n                    }\r\n                } else {\r\n                    if (res.data.error) {\r\n                        setErr(res.data.error);\r\n                    } else return false;\r\n                }\r\n            })\r\n            .catch(error => setErr(error.response.data.error))\r\n    }\r\n\r\n    const handleLogin = event => {\r\n        event.preventDefault();\r\n        const body = JSON.stringify({phone, pass});\r\n\r\n        User.login(body)\r\n            .then(res => res)\r\n            .then(data => {\r\n                    // if (widthMode === \"desktop\") {\r\n                        if (data.data.status === \"success\") {\r\n                            sessionStorage.setItem('token', data.data.data.accessToken);\r\n                            history.push('/game');\r\n                            return authorization();\r\n                        } else if (data.data.error) {\r\n                            return setErr(data.data.error);\r\n                        } else {\r\n                            return setErr('error, try again later')\r\n                        }\r\n                    // } else {\r\n                    //     history.push(\"/gotodesktop\")\r\n                    // }\r\n                }\r\n            )\r\n            .catch(error => setErr(error.response.data.error));\r\n        // authorization();\r\n    }\r\n    if (reg) {\r\n\r\n        if (enterCode) {\r\n            return (\r\n                <div className=\"round-dark auth\">\r\n                         <span onClick={() => {\r\n                             setEnterCode(false);\r\n                             clearData();\r\n                         }} className=\"back\">&larr;</span>\r\n                    <h2>Enter code</h2>\r\n                    <form onSubmit={e => codeSubmit(e)}>\r\n                        <div className=\"\">\r\n                            <input value={code} onInput={e => setCode(e.target.value)} id=\"code\" name=\"code\" type=\"text\"\r\n                                   required/>\r\n                        </div>\r\n                        <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                        <button type=\"submit\">SEND</button>\r\n                    </form>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"round-dark auth\">\r\n                <span onClick={() => {\r\n                    registration();\r\n                    clearData();\r\n                }} className=\"back\">&larr;</span>\r\n                    <h2 className=\"\">Registration</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"\">\r\n                            <label htmlFor=\"name\">Name</label>\r\n                            <input onChange={e => {\r\n                                setName(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={name}\r\n                                   placeholder=\"John Lucky\"\r\n                                   id=\"name\" name=\"name\" type=\"text\" required/>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label htmlFor=\"phone\">Phone</label>\r\n                            <PhoneInput onChange={e => {\r\n                                setErr('');\r\n                                setPhoneNumber(e);\r\n                                moveCaretToEnd();\r\n                            }} id=\"phone\" ref={phoneRef} limitMaxLength={true} placeholder='+123-456-78-90'\r\n                                        value={phone} international\r\n                                        displayInitialValueAsLocalNumber required/>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input onChange={e => {\r\n                                setEmail(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={email}\r\n                                   placeholder=\"lucky@mail.com\"\r\n                                   id=\"email\" name=\"email\" type=\"email\" required/>\r\n                        </div>\r\n                        <div className={password ? 'pass' : 'text'}>\r\n                            <span onClick={() => setPassword(!password)} className=\"eye\"/>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input min='8' onChange={e => {\r\n                                setPass(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={pass}\r\n                                   id=\"password\" name=\"password\" type={password ? 'password' : 'text'} required/>\r\n                        </div>\r\n                        <div className={passwordConfirm ? 'pass' : 'text'}>\r\n                            <span onClick={() => setPasswordConfirm(!passwordConfirm)} className=\"eye\"/>\r\n                            <label htmlFor=\"passwordConfirm\">Repeat password</label>\r\n                            <input min='8' onChange={e => {\r\n                                setConfpass(e.target.value);\r\n                                setErr('');\r\n                            }}\r\n                                   value={confpass}\r\n                                   id=\"passwordConfirm\" name=\"passwordConfirm\"\r\n                                   type={passwordConfirm ? 'password' : 'text'}\r\n                                   required/>\r\n                        </div>\r\n                        <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                        <button>SIGN UP</button>\r\n                        <Link to='/support' className=\"support-link\">Need support?</Link>\r\n                    </form>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    } else {\r\n        return (\r\n            <div className=\"round-dark auth\">\r\n               <span onClick={() => {\r\n                   clearData();\r\n               }} className=\"back\"><Link to=\"/\">&larr;</Link></span>\r\n                <h2>Welcome</h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"\">\r\n                        <label htmlFor=\"phone\">Phone</label>\r\n                        <PhoneInput onChange={e => {\r\n                            setPhone(e);\r\n                            setErr('');\r\n                        }} id=\"phone\" limitMaxLength={true} placeholder='+123-456-78-90' value={phone} international\r\n                                    displayInitialValueAsLocalNumber required/>\r\n                    </div>\r\n                    <div className={password ? 'pass' : 'text'}>\r\n                        <span onClick={() => setPassword(!password)} className=\"eye\"/>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onInput={e => {\r\n                            setPass(e.target.value);\r\n                            setErr('');\r\n                        }} id=\"password\" name=\"password\"\r\n                               type={password ? 'password' : 'text'} required/>\r\n                    </div>\r\n                    <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                    <Link to=\"/restore\" className=\"forgot mb-3\">Forgot password?</Link>\r\n                    <button>LOG IN</button>\r\n                    <span>or</span>\r\n                    <button onClick={e => {\r\n                        e.preventDefault();\r\n                        registration();\r\n                        clearData();\r\n                    }}>SIGN UP\r\n                    </button>\r\n                    <Link to=\"/support\" className=\"support-link\">Need support?</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reg: state.authReducer.reg,\r\n        mute: state.soundReducer.mute,\r\n        widthMode: state.switchOptions.widthMode\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    authorization,\r\n    registration,\r\n    muteToggle,\r\n    betWin,\r\n    fireworks\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Header\\Header.js",["177","178"],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Main.js",["179"],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Graph.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\RightSector.js",["180"],"import React, {useEffect, useState} from 'react';\r\nimport deposit from '../../images/deposit.svg';\r\nimport withdraw from '../../images/withdraw.svg';\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {click} from \"../../redux/actions/music\";\r\nimport switchWallet from \"../../images/switch_wallet.svg\";\r\nimport {changeDemo, userdata} from \"../../redux/actions/game\";\r\nimport {createAd} from \"../../redux/actions\";\r\n\r\nconst RightSector = ({balance, lastWinGame, lastgame, wins, colorBlalance, click, userdata, name, isDemo, threewins, changeDemo, createAd, predict}) => {\r\n    const [switcher, setSwitcher] = useState(false);\r\n    const [banner, setBanner] = useState(\"banner one round-dark\");\r\n    const balanceColor = {color: colorBlalance === 'green' ? '#32D74B' : colorBlalance === 'red' ? '#FF453A' : '#FFFFFF'}\r\n\r\n    useEffect(() => {\r\n        const addBanner = setInterval(() => {\r\n            if(banner === \"banner one round-dark\") {\r\n                setBanner(\"banner three round-dark\");\r\n            // } else if (banner === \"banner two round-dark\") {\r\n            //     setBanner(\"banner three round-dark\");\r\n            } else if(banner === \"banner three round-dark\") {\r\n                setBanner(\"banner one round-dark\");\r\n            }\r\n        }, 30000)\r\n        return () => clearInterval(addBanner)\r\n    }, [banner])\r\n    useEffect(() => {\r\n        userdata();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"right-sector\">\r\n            <div style={{display: switcher ? \"block\" : \"none\"}} className=\"blur\">\r\n                <div className=\"round-dark win\">\r\n                    <h2>My bitcoin wallet</h2>\r\n                    {/*<div className=\"text-center\">You are going to play on real <br/> money. Are you sure? </div>*/}\r\n                    <div className=\"win-btn\">\r\n                        <button onClick={() => {\r\n                            changeDemo();\r\n                            setSwitcher(false);\r\n                        }}\r\n                                className=\"btn btn-primary\">{isDemo ? 'Bet real bitcoin' : 'Demo wallet'}\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            userdata();\r\n                            setSwitcher(false);\r\n                        }} className=\"btn btn-primary\">{!isDemo ? 'Stay my wallet' : 'Continue demo'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"score-wrap round-dark\">\r\n                <h2>{isDemo ? \"Demo wallet\" : \"My wallet\"}\r\n                    <span onClick={() => {\r\n                        if(!predict) {\r\n                            setSwitcher(true)\r\n                        }\r\n                    }} className={isDemo ? \"switch-wrapper demo\" : \"switch-wrapper real\"}\r\n                    style={predict ? {filter: 'grayscale(1)', opacity: .5} : null}>\r\n                    <img src={switchWallet} alt=\"\"/>\r\n                </span></h2>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <div className=\"label\">Name</div>\r\n                            <div className=\"score\" id=\"name\">{name}</div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"label\">Wins</div>\r\n                            <div className=\"score\" id=\"wins\">{wins}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <div className=\"label\">Balance</div>\r\n                            <div style={balanceColor} className=\"score\" id=\"balance\">{balance} BTC</div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"label\">Last Win</div>\r\n                            <div className=\"score\" id=\"lastWin\">{lastWinGame || '0.000'} BTC</div>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                {!isDemo\r\n                    ? <div>\r\n                    <Link to=\"/refill\" style={{pointerEvents: predict ? \"none\" : \"auto\"}} className=\"btn money-btn green\">DEPOSIT\r\n                    <img src={deposit} alt=\"deposit\"/>\r\n                    </Link>\r\n                    <Link to=\"/withdraw\" style={{pointerEvents: predict ? \"none\" : \"auto\"}} className=\"btn money-btn red\">WITHDRAW\r\n                    <img src={withdraw} alt=\"withdraw\"/>\r\n                    </Link>\r\n                    </div>\r\n                    : <div>\r\n                        <button disabled={predict} onClick={() => {setSwitcher(true)}}  className=\"btn money-btn green\">BET REAL BITCOIN\r\n                            {/*<img src={withdraw} alt=\"withdraw\"/>*/}\r\n                        </button>\r\n                        <Link to=\"/invite\" style={{pointerEvents: predict ? \"none\" : \"auto\"}} className=\"btn money-btn friends\">BETS WITH FRIENDS\r\n                            {/*<img src={deposit} alt=\"deposit\"/>*/}\r\n                        </Link>\r\n\r\n                    </div>}\r\n            </div>\r\n            <div onClick={() => {\r\n                window.open('https://bitrxapp.com/?gb', '_blank')\r\n            }} className={banner}>\r\n                <button style={{display: banner !== \"banner one round-dark\" ? \"none\" : \"block\"}} className=\"btn learn-more\">Learn more</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        balance: state.balanceReducer.balance,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        lastgame: state.balanceReducer.lastgame,\r\n        colorBlalance: state.balanceReducer.colorBlalance,\r\n        wins: state.balanceReducer.wins,\r\n        name: state.balanceReducer.name,\r\n        threewins: state.balanceReducer['3wins'],\r\n        isDemo: state.balanceReducer.isDemo,\r\n        predict: state.balanceReducer.predict,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    click,\r\n    userdata,\r\n    changeDemo,\r\n    createAd\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSector);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Dashboard.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\SelectList.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\index.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\entry.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\index.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\store.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\types.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\api\\User.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\api\\Api.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\game.js",["181"],"import {\r\n    BET_LOSE,\r\n    BET_WIN, CHANGE_DEMO,\r\n    CLEAR_BET,\r\n    CLOSE_CONGRATULATION, CLOSE_YOURLOSE,\r\n    GET_RATES,\r\n    GET_USER_DATA, GOAWAY,\r\n    SET_BET_DOWN,\r\n    SET_BET_UP\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    balance: 0,\r\n    lastWin: 0,\r\n    lastWinGame: 0,\r\n    lastgame: 0,\r\n    wins: 0,\r\n    '3wins': false,\r\n    btcWallet: '',\r\n    isDemo: undefined,\r\n    congratulation: false,\r\n    predict: '',\r\n    colorBlalance: 'white',\r\n    down: 0,\r\n    up: 0,\r\n    upBets: 0,\r\n    downBets: 0,\r\n    online: 0,\r\n    yourlose: false\r\n\r\n}\r\nexport const balanceReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case CHANGE_DEMO:\r\n            return {\r\n                ...state,\r\n                isDemo: !state.isDemo\r\n            };\r\n        case GET_USER_DATA:\r\n            if (action.payload.isDemo) {\r\n                return {\r\n                    ...state,\r\n                    '3wins': action.payload['3wins'],\r\n                    balance: action.payload.demoBalance,\r\n                    btcWallet: action.payload.btcWallet,\r\n                    wins: action.payload.wins,\r\n                    lastWin: action.payload.lastWin,\r\n                    lastWinGame: action.payload.lastWinGame,\r\n                    lastgame: action.payload.lastgame,\r\n                    name: action.payload.name,\r\n                    online: action.payload.online,\r\n                    isDemo: action.payload.isDemo\r\n                };\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    '3wins': action.payload['3wins'],\r\n                    balance: action.payload.balance,\r\n                    btcWallet: action.payload.btcWallet,\r\n                    wins: action.payload.wins,\r\n                    lastWin: action.payload.lastWin,\r\n                    lastWinGame: action.payload.lastWinGame,\r\n                    lastgame: action.payload.lastgame,\r\n                    name: action.payload.name,\r\n                    online: action.payload.online,\r\n                    isDemo: action.payload.isDemo\r\n                };\r\n            }\r\n        case GET_RATES:\r\n            if (state.isDemo) {\r\n                return {\r\n                    ...state,\r\n                    down: action.payload.demo.down.peoples,\r\n                    up: action.payload.demo.up.peoples,\r\n                    upBets: action.payload.demo.up.bitcoins,\r\n                    downBets: action.payload.demo.down.bitcoins,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    down: action.payload.real.down.peoples,\r\n                    up: action.payload.real.up.peoples,\r\n                    upBets: action.payload.real.up.bitcoins,\r\n                    downBets: action.payload.real.down.bitcoins,\r\n                }\r\n            }\r\n        case BET_WIN:\r\n            return {\r\n                ...state,\r\n                congratulation: true,\r\n                colorBlalance: 'green'\r\n            };\r\n        case BET_LOSE:\r\n            return {\r\n                ...state,\r\n                colorBlalance: 'red',\r\n                yourlose: true\r\n            };\r\n        case SET_BET_UP:\r\n            return {\r\n                ...state,\r\n                predict: 'up'\r\n            };\r\n        case SET_BET_DOWN:\r\n            return {\r\n                ...state,\r\n                predict: 'down'\r\n            };\r\n        case CLEAR_BET:\r\n            return {\r\n                ...state,\r\n                predict: ''\r\n            };\r\n        case CLOSE_CONGRATULATION:\r\n            return {...state, congratulation: false};\r\n        case CLOSE_YOURLOSE:\r\n            return {...state, yourlose: false};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Refill.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Btc.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Usd.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\sound\\Sound.js",["182","183"],"import React, {useRef, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {stop} from '../redux/actions/music';\r\n\r\nconst Sound = ({play, param, stop, mute}) => {\r\n    const audRef = useRef(null);\r\n    const handlePlay = () => {\r\n        audRef.current.play();\r\n    }\r\n    const muted = () => {\r\n        audRef.current.muted = !mute;\r\n    }\r\n    useEffect(() => {\r\n        if (param.id === play) {\r\n            audRef.current.id === 'fireworks' ? audRef.current.volume = 0.3 : audRef.current.volume = 0.7;\r\n            handlePlay();\r\n        }\r\n        stop();\r\n    }, [param.id, play, handlePlay]);\r\n    useEffect(() => {\r\n        muted();\r\n    }, [muted]);\r\n    return (\r\n        <div className=\"sound\">\r\n            <audio ref={audRef} id={param.id} src={param.effect}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        play: state.soundReducer.play,\r\n        mute: state.soundReducer.mute\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    stop\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sound);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\sound\\Playlist.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\reducers\\sound.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\music.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\fireworks.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Time.js",["184"],"import React, {useEffect, useState} from 'react';\r\nimport {geoposition} from \"../../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Time = ({geo, geoposition}) => {\r\n    useEffect(() => {\r\n        geoposition()\r\n    },[]);\r\n    useEffect(() => {\r\n        const clock = setInterval(() => setTime(new Date().toLocaleTimeString()), 1000);\r\n        return () => clearInterval(clock);\r\n    }, [])\r\n    let [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    return (\r\n        <div className=\"time\">\r\n            <h2 className=\"time-text\">{time.slice(0, 5)}</h2>\r\n            <div className=\"label text-center\">{geo || <span style={{fontSize: \"10px\"}}>Please, allow location access</span>}</div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        geo: state.geoReducer.geoposition,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    geoposition\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Time);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Rates.js",["185","186"],"import React, {useEffect, useState} from 'react';\r\n// import arrup from \"../../images/arrup.png\";\r\nimport person from \"../../images/person.svg\";\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\n// import arrdown from \"../../images/arrdown.png\";\r\nimport {rates} from \"../../redux/actions/game\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Rates = ({rates, down, up, downBets, upBets, widthMode}) => {\r\n    const mobile = widthMode === \"mobile\";\r\n    const bankCoin = new Array(Math.ceil(downBets+upBets)).fill(downBets+upBets);\r\n    const upCoin = new Array(up).fill('up');\r\n    const downCoin = new Array(down).fill('down');\r\n    const fillBank = bankCoin.map((coin, index) => {\r\n        if(index > 9 && !mobile) {return null;}\r\n        if(index > 1 && mobile) {return null;}\r\n       return (<div key={index + coin} style={{height: \"36px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>);\r\n    })\r\n    const fillDown = downCoin.map((coin, index) => {\r\n        if(index > 9 && !mobile) {return null;}\r\n        if(index > 1 && mobile) {return null;}\r\n        return (<div key={index + coin} style={{height: \"36px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>)\r\n    })\r\n    const fillUp = upCoin.map((coin, index) => {\r\n        if(index > 9 && !mobile) {return null}\r\n        if(index > 1 && mobile) {return null}\r\n        return (<div key={index + coin} style={{height: \"36px\", width: \"100%\", bottom: index * 7 + \"px\"}} className=\"coin\"/>)\r\n    })\r\n    useEffect(() => {\r\n        const getRates = setInterval(() => {\r\n            rates();\r\n        }, 1000);\r\n        return () => clearInterval(getRates);\r\n    }, [])\r\n    const bank = downBets + upBets;\r\n    // const rateUp = 10 * ((up / down) ? (up / down) : 1);\r\n    // const rateDown = 10 * ((down / up) ? (down / up) : 1);\r\n    return (\r\n        <div className=\"round rates\">\r\n            <h2 className=\"text-center\">Bets in progress</h2>\r\n            <div className=\"wrap-table\">\r\n                <div className=\"rates-col rates-up\">\r\n                    {/*<img className=\"arrow\" src={arrup} alt=\"arrow\"/>*/}\r\n                    {fillUp.length ? fillUp : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 persons\">{up}<img className=\"mb-1\" src={person} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div onClick={rates} className=\"rates-col bank\">\r\n                    {/*<img className=\"arrow middle\" src={bitcoin} alt=\"arrow\"/>*/}\r\n                    {bankCoin[0] > 0 ? fillBank : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 nowrap persons\">{bank.toFixed(3)}<img className=\"bank-img\" width=\"15\"\r\n                                                                                    height=\"20\"\r\n                                                                                    src={bitcoin} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"rates-col rates-down\">\r\n                    {/*<img className=\"arrow\" src={arrdown} alt=\"arrow\"/>*/}\r\n                    {fillDown.length ? fillDown : null}\r\n                    <div className=\"text\">\r\n                        <span className=\"mb-1 persons\">{down}<img className=\"mb-1\" src={person} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        down: state.balanceReducer.down,\r\n        up: state.balanceReducer.up,\r\n        downBets: state.balanceReducer.downBets,\r\n        upBets: state.balanceReducer.upBets,\r\n        widthMode: state.switchOptions.widthMode\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    rates\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rates);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Preloader.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\redux\\actions\\game.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Main\\Rect\\Rect.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Start\\Start.js",["187","188","189"],"import React, {useState, useEffect} from 'react';\r\nimport './start.scss';\r\nimport Graph from \"../Graph\";\r\nimport Time from \"../Main/Time\";\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport arrowDown from \"../../images/arrowDown.svg\";\r\nimport arrowUp from \"../../images/arrowUp.svg\";\r\nimport bull from \"../../images/bull_start.png\";\r\nimport bear from \"../../images/bear_start.png\";\r\nimport Rect from \"../Main/Rect/Rect\";\r\nimport Preloader from \"../Main/Preloader\";\r\nimport bitsybets from \"../../images/BITCYBETS.svg\";\r\nimport coin from \"../../images/coin.svg\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport {registration} from \"../../redux/actions\";\r\n\r\nconst Start = ({currentCourse, course, history, lastSeconds, userdata, widthMode, registration}) => {\r\n    const [timeGame, setTimeGame] = useState(false);\r\n    const [bet, setBet] = useState('');\r\n    const [predict, setPredict] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0) {\r\n            setTimeGame(true);\r\n        }\r\n    }, [lastSeconds])\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0) {\r\n            if (bet === 'down' && currentCourse < course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n            } else if (bet === 'down' && currentCourse > course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n            } else if (bet === 'up' && currentCourse > course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n            } else if (bet === 'up' && currentCourse < course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n            } else {\r\n                setBet('');\r\n            }\r\n        }\r\n\r\n    }, [currentCourse])\r\n    return (\r\n        <div  className=\"start\">\r\n\r\n            {/*<div style={{display: predict === 'win' ? \"block\" : \"none\"}} className=\"blur soon\">*/}\r\n            {/*    <div className=\"round-dark win\">*/}\r\n            {/*        <div className=\"win-btn\">*/}\r\n            {/*            <h2>Sorry, you're out of luck! <br/> try again!</h2>*/}\r\n            {/*            <button onClick={() => {*/}\r\n            {/*                setPredict('');*/}\r\n            {/*                setBet('');*/}\r\n            {/*            }} className=\"btn btn-primary\">OK*/}\r\n            {/*            </button>*/}\r\n            {/*        </div>*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n            <div style={{display: predict ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                       <span onClick={() => {\r\n                           setPredict('');\r\n                           setBet('');\r\n                       }} className=\"chross\">&#10008;</span>\r\n                        <h2>You did great! <br/> Join now!</h2>\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/login')\r\n                        }} className=\"btn btn-primary\">LOG IN\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/signup');\r\n                            registration();\r\n                        }} className=\"btn btn-primary\">SIGN UP\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`${widthMode}-start round round-dark`}>\r\n                <div className=\"bull-start-mobile\"><img src={bull} width=\"\" alt=\"bull\"/></div>\r\n                <div className=\"bear-start-mobile\"><img src={bear} width=\"\" alt=\"bear\"/></div>\r\n                <div className=\"bull-start\"><img src={bull} alt=\"bull\"/></div>\r\n                <div className=\"bear-start\"><img src={bear} alt=\"bear\"/></div>\r\n                <div className=\"text text-center\">\r\n                    <span className=\"gold\">Real ICO</span>\r\n                    <h2>\r\n                        <span className=\"gold\">BITCY</span>BETS\r\n                    </h2>\r\n                    <p className=\"mt-3\">Make real Bitcoin bets</p>\r\n                </div>\r\n                <div className=\"dark\">\r\n                    <Time/>\r\n                    <div className=\"course\">\r\n                        <h2 style={{opacity: !currentCourse ? 0 : 1}} className=\"text-center\"><img src={bitcoin} alt=\"course\"/>\r\n                            {currentCourse} <span>$</span>\r\n                        </h2>\r\n                        <div>\r\n                            {/*<SelectList/>*/}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: !currentCourse ? \"none\" : \"block\"}} className=\"graph\">\r\n                        <Graph gradient1={20} gradient2={150} chartHeight={widthMode === \"desktop\" ? 200 : 150}/>\r\n                    </div>\r\n                    <div style={{display: currentCourse ? \"none\" : \"block\"}}  className=\"load\">\r\n                        <div className=\"wrap-img-preload\">\r\n                            <img className=\"coin1\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin2\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin3\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin4\"  src={coin} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"wrap-btn\">\r\n                            <button disabled={bet || !currentCourse} onClick={() => setBet('down')}\r\n                                    className=\"btn green green-start predict-btn\"\r\n                                    id=\"down\">PREDICT UP\r\n                                <img src={arrowUp} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect start={timeGame} infinite={'infinity'} idButton={'down'}\r\n                                      mode={timeGame ? 'rectUp' : ''}/>\r\n                            </button>\r\n                            <button disabled={bet || !currentCourse} onClick={() => setBet('up')}\r\n                                    className=\"btn red red-start predict-btn\"\r\n                                    id=\"down\">PREDICT DOWN\r\n                                <img src={arrowDown} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect infinite={'infinity'} idButton={'down'} mode={timeGame ? 'rectDown' : ''}/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"bg\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        course: state.courseReducer.course,\r\n        lastSeconds: state.courseReducer.lastSeconds,\r\n        widthMode: state.switchOptions.widthMode\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    userdata,\r\n    registration\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Start);\r\n","C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Support.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Ads\\Ads.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Withdraw.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\CompleteWith.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\CompletePay.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\Reset.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Refill\\Invite.js",[],"C:\\Users\\PC-002\\WebstormProjects\\AndreyPrudnikoff.github.io\\src\\components\\Auth\\gotodesktop.js",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":1,"column":26,"nodeType":"196","messageId":"197","endLine":1,"endColumn":35},{"ruleId":"198","severity":1,"message":"199","line":39,"column":8,"nodeType":"200","endLine":39,"endColumn":10,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":66,"column":25,"nodeType":"204","endLine":70,"endColumn":53},{"ruleId":"198","severity":1,"message":"205","line":46,"column":8,"nodeType":"200","endLine":46,"endColumn":24,"suggestions":"206"},{"ruleId":"198","severity":1,"message":"205","line":30,"column":8,"nodeType":"200","endLine":30,"endColumn":10,"suggestions":"207"},{"ruleId":"194","severity":1,"message":"208","line":7,"column":20,"nodeType":"196","messageId":"197","endLine":7,"endColumn":26},{"ruleId":"198","severity":1,"message":"209","line":10,"column":11,"nodeType":"210","endLine":12,"endColumn":6},{"ruleId":"198","severity":1,"message":"211","line":19,"column":8,"nodeType":"200","endLine":19,"endColumn":36,"suggestions":"212"},{"ruleId":"198","severity":1,"message":"213","line":8,"column":7,"nodeType":"200","endLine":8,"endColumn":9,"suggestions":"214"},{"ruleId":"194","severity":1,"message":"215","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":35},{"ruleId":"198","severity":1,"message":"216","line":34,"column":8,"nodeType":"200","endLine":34,"endColumn":10,"suggestions":"217"},{"ruleId":"194","severity":1,"message":"218","line":12,"column":8,"nodeType":"196","messageId":"197","endLine":12,"endColumn":17},{"ruleId":"194","severity":1,"message":"219","line":13,"column":8,"nodeType":"196","messageId":"197","endLine":13,"endColumn":17},{"ruleId":"198","severity":1,"message":"220","line":47,"column":8,"nodeType":"200","endLine":47,"endColumn":23,"suggestions":"221"},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authorization'. Either include it or remove the dependency array. If 'authorization' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["224"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'userdata'. Either include it or remove the dependency array. If 'userdata' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["225"],["226"],"'GOAWAY' is defined but never used.","The 'muted' function makes the dependencies of useEffect Hook (at line 22) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'muted' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'stop'. Either include it or remove the dependency array. If 'stop' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["227"],"React Hook useEffect has a missing dependency: 'geoposition'. Either include it or remove the dependency array. If 'geoposition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["228"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'rates'. Either include it or remove the dependency array. If 'rates' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["229"],"'Preloader' is defined but never used.","'bitsybets' is defined but never used.","React Hook useEffect has missing dependencies: 'bet', 'course', and 'lastSeconds'. Either include them or remove the dependency array.",["230"],"no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [authorization]",{"range":"245","text":"246"},"Update the dependencies array to be: [congratulation, userdata]",{"range":"247","text":"248"},"Update the dependencies array to be: [userdata]",{"range":"249","text":"250"},"Update the dependencies array to be: [param.id, play, handlePlay, stop]",{"range":"251","text":"252"},"Update the dependencies array to be: [geoposition]",{"range":"253","text":"254"},"Update the dependencies array to be: [rates]",{"range":"255","text":"256"},"Update the dependencies array to be: [bet, course, currentCourse, lastSeconds]",{"range":"257","text":"258"},[1474,1476],"[authorization]",[1667,1683],"[congratulation, userdata]",[1422,1424],"[userdata]",[588,616],"[param.id, play, handlePlay, stop]",[233,235],"[geoposition]",[1646,1648],"[rates]",[1835,1850],"[bet, course, currentCourse, lastSeconds]"]